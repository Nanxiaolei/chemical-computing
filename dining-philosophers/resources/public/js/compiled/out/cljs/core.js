// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__23066__delegate = function (args){
return console.log.apply(console,(function (){var G__23065 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__23065) : cljs.core.into_array.call(null,G__23065));
})());
};
var G__23066 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23067__i = 0, G__23067__a = new Array(arguments.length -  0);
while (G__23067__i < G__23067__a.length) {G__23067__a[G__23067__i] = arguments[G__23067__i + 0]; ++G__23067__i;}
  args = new cljs.core.IndexedSeq(G__23067__a,0);
} 
return G__23066__delegate.call(this,args);};
G__23066.cljs$lang$maxFixedArity = 0;
G__23066.cljs$lang$applyTo = (function (arglist__23068){
var args = cljs.core.seq(arglist__23068);
return G__23066__delegate(args);
});
G__23066.cljs$core$IFn$_invoke$arity$variadic = G__23066__delegate;
return G__23066;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23070 = x;
return goog.isString(G__23070);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23072 = x__$1;
return goog.typeOf(G__23072);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__16133__auto__ = ty;
if(cljs.core.truth_(and__16133__auto__)){
return ty.cljs$lang$type;
} else {
return and__16133__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23074 = obj;
return goog.typeOf(G__23074);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23076 = Symbol;
return goog.typeOf(G__23076);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__17032__auto___23078 = len;
var i_23079 = (0);
while(true){
if((i_23079 < n__17032__auto___23078)){
(new_arr[i_23079] = (arr[i_23079]));

var G__23080 = (i_23079 + (1));
i_23079 = G__23080;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23081 = (i + (1));
i = G__23081;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23090__delegate = function (array,i,idxs){
var G__23087 = aget;
var G__23088 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23089 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23087,G__23088,G__23089) : cljs.core.apply.call(null,G__23087,G__23088,G__23089));
};
var G__23090 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23091__i = 0, G__23091__a = new Array(arguments.length -  2);
while (G__23091__i < G__23091__a.length) {G__23091__a[G__23091__i] = arguments[G__23091__i + 2]; ++G__23091__i;}
  idxs = new cljs.core.IndexedSeq(G__23091__a,0);
} 
return G__23090__delegate.call(this,array,i,idxs);};
G__23090.cljs$lang$maxFixedArity = 2;
G__23090.cljs$lang$applyTo = (function (arglist__23092){
var array = cljs.core.first(arglist__23092);
arglist__23092 = cljs.core.next(arglist__23092);
var i = cljs.core.first(arglist__23092);
var idxs = cljs.core.rest(arglist__23092);
return G__23090__delegate(array,i,idxs);
});
G__23090.cljs$core$IFn$_invoke$arity$variadic = G__23090__delegate;
return G__23090;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23093 = null;
if (arguments.length > 2) {
var G__23094__i = 0, G__23094__a = new Array(arguments.length -  2);
while (G__23094__i < G__23094__a.length) {G__23094__a[G__23094__i] = arguments[G__23094__i + 2]; ++G__23094__i;}
G__23093 = new cljs.core.IndexedSeq(G__23094__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23103__delegate = function (array,idx,idx2,idxv){
var G__23099 = aset;
var G__23100 = (array[idx]);
var G__23101 = idx2;
var G__23102 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23099,G__23100,G__23101,G__23102) : cljs.core.apply.call(null,G__23099,G__23100,G__23101,G__23102));
};
var G__23103 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23104__i = 0, G__23104__a = new Array(arguments.length -  3);
while (G__23104__i < G__23104__a.length) {G__23104__a[G__23104__i] = arguments[G__23104__i + 3]; ++G__23104__i;}
  idxv = new cljs.core.IndexedSeq(G__23104__a,0);
} 
return G__23103__delegate.call(this,array,idx,idx2,idxv);};
G__23103.cljs$lang$maxFixedArity = 3;
G__23103.cljs$lang$applyTo = (function (arglist__23105){
var array = cljs.core.first(arglist__23105);
arglist__23105 = cljs.core.next(arglist__23105);
var idx = cljs.core.first(arglist__23105);
arglist__23105 = cljs.core.next(arglist__23105);
var idx2 = cljs.core.first(arglist__23105);
var idxv = cljs.core.rest(arglist__23105);
return G__23103__delegate(array,idx,idx2,idxv);
});
G__23103.cljs$core$IFn$_invoke$arity$variadic = G__23103__delegate;
return G__23103;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23106 = null;
if (arguments.length > 3) {
var G__23107__i = 0, G__23107__a = new Array(arguments.length -  3);
while (G__23107__i < G__23107__a.length) {G__23107__a[G__23107__i] = arguments[G__23107__i + 3]; ++G__23107__i;}
G__23106 = new cljs.core.IndexedSeq(G__23107__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23113 = (function (a,x){
a.push(x);

return a;
});
var G__23114 = [];
var G__23115 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23113,G__23114,G__23115) : cljs.core.reduce.call(null,G__23113,G__23114,G__23115));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23116__i = 0, G__23116__a = new Array(arguments.length -  2);
while (G__23116__i < G__23116__a.length) {G__23116__a[G__23116__i] = arguments[G__23116__i + 2]; ++G__23116__i;}
  args = new cljs.core.IndexedSeq(G__23116__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23117){
var obj = cljs.core.first(arglist__23117);
arglist__23117 = cljs.core.next(arglist__23117);
var s = cljs.core.first(arglist__23117);
var args = cljs.core.rest(arglist__23117);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23119 = {};
return obj23119;
})();


cljs.core.IFn = (function (){var obj23121 = {};
return obj23121;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23167 = x__16789__auto__;
return goog.typeOf(G__23167);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23169 = x__16789__auto__;
return goog.typeOf(G__23169);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23171 = x__16789__auto__;
return goog.typeOf(G__23171);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23173 = x__16789__auto__;
return goog.typeOf(G__23173);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23175 = x__16789__auto__;
return goog.typeOf(G__23175);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23177 = x__16789__auto__;
return goog.typeOf(G__23177);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23179 = x__16789__auto__;
return goog.typeOf(G__23179);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23181 = x__16789__auto__;
return goog.typeOf(G__23181);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23183 = x__16789__auto__;
return goog.typeOf(G__23183);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23185 = x__16789__auto__;
return goog.typeOf(G__23185);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23187 = x__16789__auto__;
return goog.typeOf(G__23187);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23189 = x__16789__auto__;
return goog.typeOf(G__23189);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23191 = x__16789__auto__;
return goog.typeOf(G__23191);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23193 = x__16789__auto__;
return goog.typeOf(G__23193);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23195 = x__16789__auto__;
return goog.typeOf(G__23195);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23197 = x__16789__auto__;
return goog.typeOf(G__23197);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23199 = x__16789__auto__;
return goog.typeOf(G__23199);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23201 = x__16789__auto__;
return goog.typeOf(G__23201);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23203 = x__16789__auto__;
return goog.typeOf(G__23203);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23205 = x__16789__auto__;
return goog.typeOf(G__23205);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23207 = x__16789__auto__;
return goog.typeOf(G__23207);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23209 = x__16789__auto__;
return goog.typeOf(G__23209);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23211 = {};
return obj23211;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__16133__auto__ = value;
if(and__16133__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__16133__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16789__auto__ = (((value == null))?null:value);
return (function (){var or__16145__auto__ = (cljs.core._clone[(function (){var G__23215 = x__16789__auto__;
return goog.typeOf(G__23215);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clone["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23217 = {};
return obj23217;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._count[(function (){var G__23221 = x__16789__auto__;
return goog.typeOf(G__23221);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._count["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23223 = {};
return obj23223;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._empty[(function (){var G__23227 = x__16789__auto__;
return goog.typeOf(G__23227);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._empty["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23229 = {};
return obj23229;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._conj[(function (){var G__23233 = x__16789__auto__;
return goog.typeOf(G__23233);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23235 = {};
return obj23235;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__23241 = x__16789__auto__;
return goog.typeOf(G__23241);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__23243 = x__16789__auto__;
return goog.typeOf(G__23243);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23245 = {};
return obj23245;
})();


cljs.core.ISeq = (function (){var obj23247 = {};
return obj23247;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._first[(function (){var G__23251 = x__16789__auto__;
return goog.typeOf(G__23251);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rest[(function (){var G__23255 = x__16789__auto__;
return goog.typeOf(G__23255);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23257 = {};
return obj23257;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._next[(function (){var G__23261 = x__16789__auto__;
return goog.typeOf(G__23261);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23263 = {};
return obj23263;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__23269 = x__16789__auto__;
return goog.typeOf(G__23269);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__23271 = x__16789__auto__;
return goog.typeOf(G__23271);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23273 = {};
return obj23273;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23277 = x__16789__auto__;
return goog.typeOf(G__23277);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc[(function (){var G__23281 = x__16789__auto__;
return goog.typeOf(G__23281);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23283 = {};
return obj23283;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc[(function (){var G__23287 = x__16789__auto__;
return goog.typeOf(G__23287);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23289 = {};
return obj23289;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._key[(function (){var G__23293 = x__16789__auto__;
return goog.typeOf(G__23293);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._val[(function (){var G__23297 = x__16789__auto__;
return goog.typeOf(G__23297);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._val["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23299 = {};
return obj23299;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin[(function (){var G__23303 = x__16789__auto__;
return goog.typeOf(G__23303);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23305 = {};
return obj23305;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._peek[(function (){var G__23309 = x__16789__auto__;
return goog.typeOf(G__23309);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._peek["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._pop[(function (){var G__23313 = x__16789__auto__;
return goog.typeOf(G__23313);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23315 = {};
return obj23315;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n[(function (){var G__23319 = x__16789__auto__;
return goog.typeOf(G__23319);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23321 = {};
return obj23321;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref[(function (){var G__23325 = x__16789__auto__;
return goog.typeOf(G__23325);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23327 = {};
return obj23327;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23331 = x__16789__auto__;
return goog.typeOf(G__23331);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23333 = {};
return obj23333;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._meta[(function (){var G__23337 = x__16789__auto__;
return goog.typeOf(G__23337);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23339 = {};
return obj23339;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._with_meta[(function (){var G__23343 = x__16789__auto__;
return goog.typeOf(G__23343);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._with_meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23345 = {};
return obj23345;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__23351 = x__16789__auto__;
return goog.typeOf(G__23351);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__23353 = x__16789__auto__;
return goog.typeOf(G__23353);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23355 = {};
return obj23355;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._kv_reduce[(function (){var G__23359 = x__16789__auto__;
return goog.typeOf(G__23359);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23361 = {};
return obj23361;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._equiv[(function (){var G__23365 = x__16789__auto__;
return goog.typeOf(G__23365);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._equiv["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23367 = {};
return obj23367;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._hash[(function (){var G__23371 = x__16789__auto__;
return goog.typeOf(G__23371);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._hash["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23373 = {};
return obj23373;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._seq[(function (){var G__23377 = x__16789__auto__;
return goog.typeOf(G__23377);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23379 = {};
return obj23379;
})();


cljs.core.IList = (function (){var obj23381 = {};
return obj23381;
})();


cljs.core.IRecord = (function (){var obj23383 = {};
return obj23383;
})();


cljs.core.IReversible = (function (){var obj23385 = {};
return obj23385;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rseq[(function (){var G__23389 = x__16789__auto__;
return goog.typeOf(G__23389);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rseq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23391 = {};
return obj23391;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq[(function (){var G__23395 = x__16789__auto__;
return goog.typeOf(G__23395);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23399 = x__16789__auto__;
return goog.typeOf(G__23399);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._entry_key[(function (){var G__23403 = x__16789__auto__;
return goog.typeOf(G__23403);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._entry_key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._comparator[(function (){var G__23407 = x__16789__auto__;
return goog.typeOf(G__23407);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._comparator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23409 = {};
return obj23409;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._write[(function (){var G__23413 = x__16789__auto__;
return goog.typeOf(G__23413);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._write["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._flush[(function (){var G__23417 = x__16789__auto__;
return goog.typeOf(G__23417);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._flush["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23419 = {};
return obj23419;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._pr_writer[(function (){var G__23423 = x__16789__auto__;
return goog.typeOf(G__23423);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23425 = {};
return obj23425;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__16133__auto__ = d;
if(and__16133__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16789__auto__ = (((d == null))?null:d);
return (function (){var or__16145__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23429 = x__16789__auto__;
return goog.typeOf(G__23429);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23431 = {};
return obj23431;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._notify_watches[(function (){var G__23435 = x__16789__auto__;
return goog.typeOf(G__23435);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._add_watch[(function (){var G__23439 = x__16789__auto__;
return goog.typeOf(G__23439);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._remove_watch[(function (){var G__23443 = x__16789__auto__;
return goog.typeOf(G__23443);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23445 = {};
return obj23445;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._as_transient[(function (){var G__23449 = x__16789__auto__;
return goog.typeOf(G__23449);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._as_transient["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23451 = {};
return obj23451;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._conj_BANG_[(function (){var G__23455 = x__16789__auto__;
return goog.typeOf(G__23455);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23459 = x__16789__auto__;
return goog.typeOf(G__23459);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23461 = {};
return obj23461;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23465 = x__16789__auto__;
return goog.typeOf(G__23465);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23467 = {};
return obj23467;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23471 = x__16789__auto__;
return goog.typeOf(G__23471);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23473 = {};
return obj23473;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23477 = x__16789__auto__;
return goog.typeOf(G__23477);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._pop_BANG_[(function (){var G__23481 = x__16789__auto__;
return goog.typeOf(G__23481);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23483 = {};
return obj23483;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23487 = x__16789__auto__;
return goog.typeOf(G__23487);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23489 = {};
return obj23489;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._compare[(function (){var G__23493 = x__16789__auto__;
return goog.typeOf(G__23493);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._compare["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23495 = {};
return obj23495;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._drop_first[(function (){var G__23499 = x__16789__auto__;
return goog.typeOf(G__23499);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._drop_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23501 = {};
return obj23501;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_first[(function (){var G__23505 = x__16789__auto__;
return goog.typeOf(G__23505);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_rest[(function (){var G__23509 = x__16789__auto__;
return goog.typeOf(G__23509);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23511 = {};
return obj23511;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_next[(function (){var G__23515 = x__16789__auto__;
return goog.typeOf(G__23515);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23517 = {};
return obj23517;
})();

cljs.core._name = (function _name(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._name[(function (){var G__23521 = x__16789__auto__;
return goog.typeOf(G__23521);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._name["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._namespace[(function (){var G__23525 = x__16789__auto__;
return goog.typeOf(G__23525);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._namespace["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23527 = {};
return obj23527;
})();


cljs.core.IReset = (function (){var obj23529 = {};
return obj23529;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._reset_BANG_[(function (){var G__23533 = x__16789__auto__;
return goog.typeOf(G__23533);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23535 = {};
return obj23535;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23545 = x__16789__auto__;
return goog.typeOf(G__23545);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23547 = x__16789__auto__;
return goog.typeOf(G__23547);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23549 = x__16789__auto__;
return goog.typeOf(G__23549);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23551 = x__16789__auto__;
return goog.typeOf(G__23551);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23553 = {};
return obj23553;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23557 = x__16789__auto__;
return goog.typeOf(G__23557);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23559 = {};
return obj23559;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._iterator[(function (){var G__23563 = x__16789__auto__;
return goog.typeOf(G__23563);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._iterator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23566 = (4294967295);
var G__23567 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23566,G__23567) : Math.imul.call(null,G__23566,G__23567));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23570 = a;
var G__23571 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23570,G__23571) : Math.imul.call(null,G__23570,G__23571));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23572 = (i + (2));
var G__23573 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23572;
h1 = G__23573;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23575 = {};
return obj23575;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23576 = (i + (1));
var G__23577 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23576;
hash = G__23577;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23581 = {};
return obj23581;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23584 = o;
if(G__23584){
var bit__16819__auto__ = (G__23584.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16819__auto__) || (G__23584.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23585 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23585) : Math.floor.call(null,G__23585));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23592 = a.ns;
var G__23593 = b.ns;
return goog.array.defaultCompare(G__23592,G__23593);
})();
if(((0) === nsc)){
var G__23594 = a.name;
var G__23595 = b.name;
return goog.array.defaultCompare(G__23594,G__23595);
} else {
return nsc;
}
}
} else {
var G__23596 = a.name;
var G__23597 = b.name;
return goog.array.defaultCompare(G__23596,G__23597);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23599 = null;
var G__23599__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23599__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23599 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23599__2.call(this,self__,coll);
case 3:
return G__23599__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23599.cljs$core$IFn$_invoke$arity$2 = G__23599__2;
G__23599.cljs$core$IFn$_invoke$arity$3 = G__23599__3;
return G__23599;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23598){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23598)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23647 = null;
var G__23647__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23647__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23647__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23647__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23647__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23647__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23647__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23647__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23647__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23647__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23647__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23647__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23647__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23647__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23647__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23647__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23647__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23647__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23647__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23647__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23647__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23647__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23603 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23604 = a;
var G__23605 = b;
var G__23606 = c;
var G__23607 = d;
var G__23608 = e;
var G__23609 = f;
var G__23610 = g;
var G__23611 = h;
var G__23612 = i;
var G__23613 = j;
var G__23614 = k;
var G__23615 = l;
var G__23616 = m;
var G__23617 = n;
var G__23618 = o;
var G__23619 = p;
var G__23620 = q;
var G__23621 = r;
var G__23622 = s;
var G__23623 = t;
var G__23624 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624) : cljs.core.apply.call(null,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624));
});
G__23647 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23647__1.call(this,self__);
case 2:
return G__23647__2.call(this,self__,a);
case 3:
return G__23647__3.call(this,self__,a,b);
case 4:
return G__23647__4.call(this,self__,a,b,c);
case 5:
return G__23647__5.call(this,self__,a,b,c,d);
case 6:
return G__23647__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23647__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23647__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23647__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23647__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23647__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23647__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23647__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23647__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23647__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23647__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23647__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23647__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23647__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23647__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23647__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23647__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23647.cljs$core$IFn$_invoke$arity$1 = G__23647__1;
G__23647.cljs$core$IFn$_invoke$arity$2 = G__23647__2;
G__23647.cljs$core$IFn$_invoke$arity$3 = G__23647__3;
G__23647.cljs$core$IFn$_invoke$arity$4 = G__23647__4;
G__23647.cljs$core$IFn$_invoke$arity$5 = G__23647__5;
G__23647.cljs$core$IFn$_invoke$arity$6 = G__23647__6;
G__23647.cljs$core$IFn$_invoke$arity$7 = G__23647__7;
G__23647.cljs$core$IFn$_invoke$arity$8 = G__23647__8;
G__23647.cljs$core$IFn$_invoke$arity$9 = G__23647__9;
G__23647.cljs$core$IFn$_invoke$arity$10 = G__23647__10;
G__23647.cljs$core$IFn$_invoke$arity$11 = G__23647__11;
G__23647.cljs$core$IFn$_invoke$arity$12 = G__23647__12;
G__23647.cljs$core$IFn$_invoke$arity$13 = G__23647__13;
G__23647.cljs$core$IFn$_invoke$arity$14 = G__23647__14;
G__23647.cljs$core$IFn$_invoke$arity$15 = G__23647__15;
G__23647.cljs$core$IFn$_invoke$arity$16 = G__23647__16;
G__23647.cljs$core$IFn$_invoke$arity$17 = G__23647__17;
G__23647.cljs$core$IFn$_invoke$arity$18 = G__23647__18;
G__23647.cljs$core$IFn$_invoke$arity$19 = G__23647__19;
G__23647.cljs$core$IFn$_invoke$arity$20 = G__23647__20;
G__23647.cljs$core$IFn$_invoke$arity$21 = G__23647__21;
G__23647.cljs$core$IFn$_invoke$arity$22 = G__23647__22;
return G__23647;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23602){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23602)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23625 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23626 = a;
var G__23627 = b;
var G__23628 = c;
var G__23629 = d;
var G__23630 = e;
var G__23631 = f;
var G__23632 = g;
var G__23633 = h;
var G__23634 = i;
var G__23635 = j;
var G__23636 = k;
var G__23637 = l;
var G__23638 = m;
var G__23639 = n;
var G__23640 = o;
var G__23641 = p;
var G__23642 = q;
var G__23643 = r;
var G__23644 = s;
var G__23645 = t;
var G__23646 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646) : cljs.core.apply.call(null,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23649 = x;
if(G__23649){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__23649.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23649.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23649);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23649);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23651 = value;
if(G__23651){
var bit__16826__auto__ = (G__23651.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16826__auto__) || (G__23651.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23651.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23651);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23651);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23653 = coll;
if(G__23653){
var bit__16819__auto__ = (G__23653.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16819__auto__) || (G__23653.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23655 = coll;
if(G__23655){
var bit__16819__auto__ = (G__23655.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__23655.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23657 = coll;
if(G__23657){
var bit__16819__auto__ = (G__23657.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__23657.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23659 = coll;
if(G__23659){
var bit__16819__auto__ = (G__23659.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16819__auto__) || (G__23659.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23664__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23665 = y;
var G__23666 = cljs.core.first(more);
var G__23667 = cljs.core.next(more);
x = G__23665;
y = G__23666;
more = G__23667;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23664 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23668__i = 0, G__23668__a = new Array(arguments.length -  2);
while (G__23668__i < G__23668__a.length) {G__23668__a[G__23668__i] = arguments[G__23668__i + 2]; ++G__23668__i;}
  more = new cljs.core.IndexedSeq(G__23668__a,0);
} 
return G__23664__delegate.call(this,x,y,more);};
G__23664.cljs$lang$maxFixedArity = 2;
G__23664.cljs$lang$applyTo = (function (arglist__23669){
var x = cljs.core.first(arglist__23669);
arglist__23669 = cljs.core.next(arglist__23669);
var y = cljs.core.first(arglist__23669);
var more = cljs.core.rest(arglist__23669);
return G__23664__delegate(x,y,more);
});
G__23664.cljs$core$IFn$_invoke$arity$variadic = G__23664__delegate;
return G__23664;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23670 = null;
if (arguments.length > 2) {
var G__23671__i = 0, G__23671__a = new Array(arguments.length -  2);
while (G__23671__i < G__23671__a.length) {G__23671__a[G__23671__i] = arguments[G__23671__i + 2]; ++G__23671__i;}
G__23670 = new cljs.core.IndexedSeq(G__23671__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23672 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23672) : cljs.core.es6_iterator_seq.call(null,G__23672));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23673 = (n + (1));
var G__23674 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23675 = cljs.core.next(coll__$1);
n = G__23673;
hash_code = G__23674;
coll__$1 = G__23675;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23676 = (n + (1));
var G__23677 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23678 = cljs.core.next(coll__$1);
n = G__23676;
hash_code = G__23677;
coll__$1 = G__23678;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23679 = o;
return goog.getUid(G__23679);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23681 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23681) : cljs.core.deref.call(null,G__23681));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23688 = val;
var G__23689 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23688,G__23689) : f.call(null,G__23688,G__23689));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23694 = nval;
var G__23695 = (n + (1));
val = G__23694;
n = G__23695;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23690 = val__$1;
var G__23691 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23690,G__23691) : f.call(null,G__23690,G__23691));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23696 = nval;
var G__23697 = (n + (1));
val__$1 = G__23696;
n = G__23697;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23692 = val__$1;
var G__23693 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23692,G__23693) : f.call(null,G__23692,G__23693));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23698 = nval;
var G__23699 = (n + (1));
val__$1 = G__23698;
n = G__23699;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23706 = val;
var G__23707 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23706,G__23707) : f.call(null,G__23706,G__23707));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23712 = nval;
var G__23713 = (n + (1));
val = G__23712;
n = G__23713;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23708 = val__$1;
var G__23709 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23708,G__23709) : f.call(null,G__23708,G__23709));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23714 = nval;
var G__23715 = (n + (1));
val__$1 = G__23714;
n = G__23715;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23710 = val__$1;
var G__23711 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23710,G__23711) : f.call(null,G__23710,G__23711));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23716 = nval;
var G__23717 = (n + (1));
val__$1 = G__23716;
n = G__23717;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23719 = x;
if(G__23719){
var bit__16826__auto__ = (G__23719.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16826__auto__) || (G__23719.cljs$core$ICounted$)){
return true;
} else {
if((!G__23719.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23719);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23719);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23721 = x;
if(G__23721){
var bit__16826__auto__ = (G__23721.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16826__auto__) || (G__23721.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23721.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23721);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23721);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23722 = coll__$1;
var G__23723 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23722,G__23723) : cljs.core.equiv_sequential.call(null,G__23722,G__23723));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23724 = o;
var G__23725 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23724,G__23725) : cljs.core.cons.call(null,G__23724,G__23725));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23728 = coll__$1;
var G__23729 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23728,G__23729) : cljs.core.equiv_sequential.call(null,G__23728,G__23729));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23730 = cljs.core.List.EMPTY;
var G__23731 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23730,G__23731) : cljs.core.with_meta.call(null,G__23730,G__23731));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23732 = f;
var G__23733 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23732,G__23733) : cljs.core.seq_reduce.call(null,G__23732,G__23733));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23734 = f;
var G__23735 = start;
var G__23736 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23734,G__23735,G__23736) : cljs.core.seq_reduce.call(null,G__23734,G__23735,G__23736));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23737 = o;
var G__23738 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23737,G__23738) : cljs.core.cons.call(null,G__23737,G__23738));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23739 = sn;
s = G__23739;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23744__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23745 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23746 = cljs.core.first(xs);
var G__23747 = cljs.core.next(xs);
coll = G__23745;
x = G__23746;
xs = G__23747;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23744 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23748__i = 0, G__23748__a = new Array(arguments.length -  2);
while (G__23748__i < G__23748__a.length) {G__23748__a[G__23748__i] = arguments[G__23748__i + 2]; ++G__23748__i;}
  xs = new cljs.core.IndexedSeq(G__23748__a,0);
} 
return G__23744__delegate.call(this,coll,x,xs);};
G__23744.cljs$lang$maxFixedArity = 2;
G__23744.cljs$lang$applyTo = (function (arglist__23749){
var coll = cljs.core.first(arglist__23749);
arglist__23749 = cljs.core.next(arglist__23749);
var x = cljs.core.first(arglist__23749);
var xs = cljs.core.rest(arglist__23749);
return G__23744__delegate(coll,x,xs);
});
G__23744.cljs$core$IFn$_invoke$arity$variadic = G__23744__delegate;
return G__23744;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23750 = null;
if (arguments.length > 2) {
var G__23751__i = 0, G__23751__a = new Array(arguments.length -  2);
while (G__23751__i < G__23751__a.length) {G__23751__a[G__23751__i] = arguments[G__23751__i + 2]; ++G__23751__i;}
G__23750 = new cljs.core.IndexedSeq(G__23751__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23752 = cljs.core.next(s);
var G__23753 = (acc + (1));
s = G__23752;
acc = G__23753;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23755 = coll;
if(G__23755){
var bit__16819__auto__ = (G__23755.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16819__auto__) || (G__23755.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23756 = cljs.core.next(coll);
var G__23757 = (n - (1));
coll = G__23756;
n = G__23757;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23758 = cljs.core.next(coll);
var G__23759 = (n - (1));
var G__23760 = not_found;
coll = G__23758;
n = G__23759;
not_found = G__23760;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23765 = coll;
if(G__23765){
var bit__16819__auto__ = (G__23765.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__23765.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23766 = coll;
if(G__23766){
var bit__16826__auto__ = (G__23766.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__23766.cljs$core$ISeq$)){
return true;
} else {
if((!G__23766.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23766);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23766);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23767 = coll;
if(G__23767){
var bit__16819__auto__ = (G__23767.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__23767.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23768 = coll;
if(G__23768){
var bit__16826__auto__ = (G__23768.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__23768.cljs$core$ISeq$)){
return true;
} else {
if((!G__23768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23768);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23769 = (n__$1 - (1));
var G__23770 = cljs.core.rest(xs);
n__$1 = G__23769;
xs = G__23770;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23773 = o;
if(G__23773){
var bit__16819__auto__ = (G__23773.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__23773.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23774 = o;
if(G__23774){
var bit__16819__auto__ = (G__23774.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__23774.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23778__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23779 = ret;
var G__23780 = cljs.core.first(kvs);
var G__23781 = cljs.core.second(kvs);
var G__23782 = cljs.core.nnext(kvs);
coll = G__23779;
k = G__23780;
v = G__23781;
kvs = G__23782;
continue;
} else {
return ret;
}
break;
}
};
var G__23778 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23783__i = 0, G__23783__a = new Array(arguments.length -  3);
while (G__23783__i < G__23783__a.length) {G__23783__a[G__23783__i] = arguments[G__23783__i + 3]; ++G__23783__i;}
  kvs = new cljs.core.IndexedSeq(G__23783__a,0);
} 
return G__23778__delegate.call(this,coll,k,v,kvs);};
G__23778.cljs$lang$maxFixedArity = 3;
G__23778.cljs$lang$applyTo = (function (arglist__23784){
var coll = cljs.core.first(arglist__23784);
arglist__23784 = cljs.core.next(arglist__23784);
var k = cljs.core.first(arglist__23784);
arglist__23784 = cljs.core.next(arglist__23784);
var v = cljs.core.first(arglist__23784);
var kvs = cljs.core.rest(arglist__23784);
return G__23778__delegate(coll,k,v,kvs);
});
G__23778.cljs$core$IFn$_invoke$arity$variadic = G__23778__delegate;
return G__23778;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23785 = null;
if (arguments.length > 3) {
var G__23786__i = 0, G__23786__a = new Array(arguments.length -  3);
while (G__23786__i < G__23786__a.length) {G__23786__a[G__23786__i] = arguments[G__23786__i + 3]; ++G__23786__i;}
G__23785 = new cljs.core.IndexedSeq(G__23786__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23789__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23790 = ret;
var G__23791 = cljs.core.first(ks);
var G__23792 = cljs.core.next(ks);
coll = G__23790;
k = G__23791;
ks = G__23792;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23789 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23793__i = 0, G__23793__a = new Array(arguments.length -  2);
while (G__23793__i < G__23793__a.length) {G__23793__a[G__23793__i] = arguments[G__23793__i + 2]; ++G__23793__i;}
  ks = new cljs.core.IndexedSeq(G__23793__a,0);
} 
return G__23789__delegate.call(this,coll,k,ks);};
G__23789.cljs$lang$maxFixedArity = 2;
G__23789.cljs$lang$applyTo = (function (arglist__23794){
var coll = cljs.core.first(arglist__23794);
arglist__23794 = cljs.core.next(arglist__23794);
var k = cljs.core.first(arglist__23794);
var ks = cljs.core.rest(arglist__23794);
return G__23789__delegate(coll,k,ks);
});
G__23789.cljs$core$IFn$_invoke$arity$variadic = G__23789__delegate;
return G__23789;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23795 = null;
if (arguments.length > 2) {
var G__23796__i = 0, G__23796__a = new Array(arguments.length -  2);
while (G__23796__i < G__23796__a.length) {G__23796__a[G__23796__i] = arguments[G__23796__i + 2]; ++G__23796__i;}
G__23795 = new cljs.core.IndexedSeq(G__23796__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__16145__auto__ = (function (){var G__23801 = f;
return goog.isFunction(G__23801);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__23802 = f;
if(G__23802){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto____$1 = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
return G__23802.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23802.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23802);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23802);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24268 = null;
var G__24268__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24268__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23804 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23804) : self__.afn.call(null,G__23804));
});
var G__24268__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23805 = a;
var G__23806 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23805,G__23806) : self__.afn.call(null,G__23805,G__23806));
});
var G__24268__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23807 = a;
var G__23808 = b;
var G__23809 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23807,G__23808,G__23809) : self__.afn.call(null,G__23807,G__23808,G__23809));
});
var G__24268__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23810 = a;
var G__23811 = b;
var G__23812 = c;
var G__23813 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23810,G__23811,G__23812,G__23813) : self__.afn.call(null,G__23810,G__23811,G__23812,G__23813));
});
var G__24268__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23814 = a;
var G__23815 = b;
var G__23816 = c;
var G__23817 = d;
var G__23818 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23814,G__23815,G__23816,G__23817,G__23818) : self__.afn.call(null,G__23814,G__23815,G__23816,G__23817,G__23818));
});
var G__24268__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23819 = a;
var G__23820 = b;
var G__23821 = c;
var G__23822 = d;
var G__23823 = e;
var G__23824 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23819,G__23820,G__23821,G__23822,G__23823,G__23824) : self__.afn.call(null,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824));
});
var G__24268__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23825 = a;
var G__23826 = b;
var G__23827 = c;
var G__23828 = d;
var G__23829 = e;
var G__23830 = f;
var G__23831 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831) : self__.afn.call(null,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831));
});
var G__24268__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23832 = a;
var G__23833 = b;
var G__23834 = c;
var G__23835 = d;
var G__23836 = e;
var G__23837 = f;
var G__23838 = g;
var G__23839 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839) : self__.afn.call(null,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839));
});
var G__24268__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23840 = a;
var G__23841 = b;
var G__23842 = c;
var G__23843 = d;
var G__23844 = e;
var G__23845 = f;
var G__23846 = g;
var G__23847 = h;
var G__23848 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848) : self__.afn.call(null,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848));
});
var G__24268__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23849 = a;
var G__23850 = b;
var G__23851 = c;
var G__23852 = d;
var G__23853 = e;
var G__23854 = f;
var G__23855 = g;
var G__23856 = h;
var G__23857 = i;
var G__23858 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858) : self__.afn.call(null,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858));
});
var G__24268__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23859 = a;
var G__23860 = b;
var G__23861 = c;
var G__23862 = d;
var G__23863 = e;
var G__23864 = f;
var G__23865 = g;
var G__23866 = h;
var G__23867 = i;
var G__23868 = j;
var G__23869 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869) : self__.afn.call(null,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869));
});
var G__24268__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23870 = a;
var G__23871 = b;
var G__23872 = c;
var G__23873 = d;
var G__23874 = e;
var G__23875 = f;
var G__23876 = g;
var G__23877 = h;
var G__23878 = i;
var G__23879 = j;
var G__23880 = k;
var G__23881 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881) : self__.afn.call(null,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881));
});
var G__24268__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23882 = a;
var G__23883 = b;
var G__23884 = c;
var G__23885 = d;
var G__23886 = e;
var G__23887 = f;
var G__23888 = g;
var G__23889 = h;
var G__23890 = i;
var G__23891 = j;
var G__23892 = k;
var G__23893 = l;
var G__23894 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894) : self__.afn.call(null,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894));
});
var G__24268__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23895 = a;
var G__23896 = b;
var G__23897 = c;
var G__23898 = d;
var G__23899 = e;
var G__23900 = f;
var G__23901 = g;
var G__23902 = h;
var G__23903 = i;
var G__23904 = j;
var G__23905 = k;
var G__23906 = l;
var G__23907 = m;
var G__23908 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908) : self__.afn.call(null,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908));
});
var G__24268__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23909 = a;
var G__23910 = b;
var G__23911 = c;
var G__23912 = d;
var G__23913 = e;
var G__23914 = f;
var G__23915 = g;
var G__23916 = h;
var G__23917 = i;
var G__23918 = j;
var G__23919 = k;
var G__23920 = l;
var G__23921 = m;
var G__23922 = n;
var G__23923 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923) : self__.afn.call(null,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923));
});
var G__24268__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23924 = a;
var G__23925 = b;
var G__23926 = c;
var G__23927 = d;
var G__23928 = e;
var G__23929 = f;
var G__23930 = g;
var G__23931 = h;
var G__23932 = i;
var G__23933 = j;
var G__23934 = k;
var G__23935 = l;
var G__23936 = m;
var G__23937 = n;
var G__23938 = o;
var G__23939 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939) : self__.afn.call(null,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939));
});
var G__24268__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23940 = a;
var G__23941 = b;
var G__23942 = c;
var G__23943 = d;
var G__23944 = e;
var G__23945 = f;
var G__23946 = g;
var G__23947 = h;
var G__23948 = i;
var G__23949 = j;
var G__23950 = k;
var G__23951 = l;
var G__23952 = m;
var G__23953 = n;
var G__23954 = o;
var G__23955 = p;
var G__23956 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956) : self__.afn.call(null,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956));
});
var G__24268__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23957 = a;
var G__23958 = b;
var G__23959 = c;
var G__23960 = d;
var G__23961 = e;
var G__23962 = f;
var G__23963 = g;
var G__23964 = h;
var G__23965 = i;
var G__23966 = j;
var G__23967 = k;
var G__23968 = l;
var G__23969 = m;
var G__23970 = n;
var G__23971 = o;
var G__23972 = p;
var G__23973 = q;
var G__23974 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974) : self__.afn.call(null,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974));
});
var G__24268__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23975 = a;
var G__23976 = b;
var G__23977 = c;
var G__23978 = d;
var G__23979 = e;
var G__23980 = f;
var G__23981 = g;
var G__23982 = h;
var G__23983 = i;
var G__23984 = j;
var G__23985 = k;
var G__23986 = l;
var G__23987 = m;
var G__23988 = n;
var G__23989 = o;
var G__23990 = p;
var G__23991 = q;
var G__23992 = r;
var G__23993 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23975,G__23976,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993) : self__.afn.call(null,G__23975,G__23976,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993));
});
var G__24268__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23994 = a;
var G__23995 = b;
var G__23996 = c;
var G__23997 = d;
var G__23998 = e;
var G__23999 = f;
var G__24000 = g;
var G__24001 = h;
var G__24002 = i;
var G__24003 = j;
var G__24004 = k;
var G__24005 = l;
var G__24006 = m;
var G__24007 = n;
var G__24008 = o;
var G__24009 = p;
var G__24010 = q;
var G__24011 = r;
var G__24012 = s;
var G__24013 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013) : self__.afn.call(null,G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013));
});
var G__24268__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24014 = self__.afn;
var G__24015 = a;
var G__24016 = b;
var G__24017 = c;
var G__24018 = d;
var G__24019 = e;
var G__24020 = f;
var G__24021 = g;
var G__24022 = h;
var G__24023 = i;
var G__24024 = j;
var G__24025 = k;
var G__24026 = l;
var G__24027 = m;
var G__24028 = n;
var G__24029 = o;
var G__24030 = p;
var G__24031 = q;
var G__24032 = r;
var G__24033 = s;
var G__24034 = t;
var G__24035 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035) : cljs.core.apply.call(null,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035));
});
G__24268 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24268__1.call(this,self__);
case 2:
return G__24268__2.call(this,self__,a);
case 3:
return G__24268__3.call(this,self__,a,b);
case 4:
return G__24268__4.call(this,self__,a,b,c);
case 5:
return G__24268__5.call(this,self__,a,b,c,d);
case 6:
return G__24268__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24268__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24268__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24268__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24268__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24268__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24268__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24268__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24268__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24268__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24268__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24268__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24268__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24268__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24268__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24268__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24268__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24268.cljs$core$IFn$_invoke$arity$1 = G__24268__1;
G__24268.cljs$core$IFn$_invoke$arity$2 = G__24268__2;
G__24268.cljs$core$IFn$_invoke$arity$3 = G__24268__3;
G__24268.cljs$core$IFn$_invoke$arity$4 = G__24268__4;
G__24268.cljs$core$IFn$_invoke$arity$5 = G__24268__5;
G__24268.cljs$core$IFn$_invoke$arity$6 = G__24268__6;
G__24268.cljs$core$IFn$_invoke$arity$7 = G__24268__7;
G__24268.cljs$core$IFn$_invoke$arity$8 = G__24268__8;
G__24268.cljs$core$IFn$_invoke$arity$9 = G__24268__9;
G__24268.cljs$core$IFn$_invoke$arity$10 = G__24268__10;
G__24268.cljs$core$IFn$_invoke$arity$11 = G__24268__11;
G__24268.cljs$core$IFn$_invoke$arity$12 = G__24268__12;
G__24268.cljs$core$IFn$_invoke$arity$13 = G__24268__13;
G__24268.cljs$core$IFn$_invoke$arity$14 = G__24268__14;
G__24268.cljs$core$IFn$_invoke$arity$15 = G__24268__15;
G__24268.cljs$core$IFn$_invoke$arity$16 = G__24268__16;
G__24268.cljs$core$IFn$_invoke$arity$17 = G__24268__17;
G__24268.cljs$core$IFn$_invoke$arity$18 = G__24268__18;
G__24268.cljs$core$IFn$_invoke$arity$19 = G__24268__19;
G__24268.cljs$core$IFn$_invoke$arity$20 = G__24268__20;
G__24268.cljs$core$IFn$_invoke$arity$21 = G__24268__21;
G__24268.cljs$core$IFn$_invoke$arity$22 = G__24268__22;
return G__24268;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23803){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23803)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24036 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24036) : self__.afn.call(null,G__24036));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24037 = a;
var G__24038 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24037,G__24038) : self__.afn.call(null,G__24037,G__24038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24039 = a;
var G__24040 = b;
var G__24041 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24039,G__24040,G__24041) : self__.afn.call(null,G__24039,G__24040,G__24041));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__24042 = a;
var G__24043 = b;
var G__24044 = c;
var G__24045 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24042,G__24043,G__24044,G__24045) : self__.afn.call(null,G__24042,G__24043,G__24044,G__24045));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__24046 = a;
var G__24047 = b;
var G__24048 = c;
var G__24049 = d;
var G__24050 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24046,G__24047,G__24048,G__24049,G__24050) : self__.afn.call(null,G__24046,G__24047,G__24048,G__24049,G__24050));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__24051 = a;
var G__24052 = b;
var G__24053 = c;
var G__24054 = d;
var G__24055 = e;
var G__24056 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24051,G__24052,G__24053,G__24054,G__24055,G__24056) : self__.afn.call(null,G__24051,G__24052,G__24053,G__24054,G__24055,G__24056));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__24057 = a;
var G__24058 = b;
var G__24059 = c;
var G__24060 = d;
var G__24061 = e;
var G__24062 = f;
var G__24063 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063) : self__.afn.call(null,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__24064 = a;
var G__24065 = b;
var G__24066 = c;
var G__24067 = d;
var G__24068 = e;
var G__24069 = f;
var G__24070 = g;
var G__24071 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071) : self__.afn.call(null,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24072 = a;
var G__24073 = b;
var G__24074 = c;
var G__24075 = d;
var G__24076 = e;
var G__24077 = f;
var G__24078 = g;
var G__24079 = h;
var G__24080 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080) : self__.afn.call(null,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24081 = a;
var G__24082 = b;
var G__24083 = c;
var G__24084 = d;
var G__24085 = e;
var G__24086 = f;
var G__24087 = g;
var G__24088 = h;
var G__24089 = i;
var G__24090 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090) : self__.afn.call(null,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24091 = a;
var G__24092 = b;
var G__24093 = c;
var G__24094 = d;
var G__24095 = e;
var G__24096 = f;
var G__24097 = g;
var G__24098 = h;
var G__24099 = i;
var G__24100 = j;
var G__24101 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101) : self__.afn.call(null,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24102 = a;
var G__24103 = b;
var G__24104 = c;
var G__24105 = d;
var G__24106 = e;
var G__24107 = f;
var G__24108 = g;
var G__24109 = h;
var G__24110 = i;
var G__24111 = j;
var G__24112 = k;
var G__24113 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24102,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113) : self__.afn.call(null,G__24102,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24114 = a;
var G__24115 = b;
var G__24116 = c;
var G__24117 = d;
var G__24118 = e;
var G__24119 = f;
var G__24120 = g;
var G__24121 = h;
var G__24122 = i;
var G__24123 = j;
var G__24124 = k;
var G__24125 = l;
var G__24126 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24114,G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126) : self__.afn.call(null,G__24114,G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24127 = a;
var G__24128 = b;
var G__24129 = c;
var G__24130 = d;
var G__24131 = e;
var G__24132 = f;
var G__24133 = g;
var G__24134 = h;
var G__24135 = i;
var G__24136 = j;
var G__24137 = k;
var G__24138 = l;
var G__24139 = m;
var G__24140 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140) : self__.afn.call(null,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24141 = a;
var G__24142 = b;
var G__24143 = c;
var G__24144 = d;
var G__24145 = e;
var G__24146 = f;
var G__24147 = g;
var G__24148 = h;
var G__24149 = i;
var G__24150 = j;
var G__24151 = k;
var G__24152 = l;
var G__24153 = m;
var G__24154 = n;
var G__24155 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155) : self__.afn.call(null,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24156 = a;
var G__24157 = b;
var G__24158 = c;
var G__24159 = d;
var G__24160 = e;
var G__24161 = f;
var G__24162 = g;
var G__24163 = h;
var G__24164 = i;
var G__24165 = j;
var G__24166 = k;
var G__24167 = l;
var G__24168 = m;
var G__24169 = n;
var G__24170 = o;
var G__24171 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171) : self__.afn.call(null,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24172 = a;
var G__24173 = b;
var G__24174 = c;
var G__24175 = d;
var G__24176 = e;
var G__24177 = f;
var G__24178 = g;
var G__24179 = h;
var G__24180 = i;
var G__24181 = j;
var G__24182 = k;
var G__24183 = l;
var G__24184 = m;
var G__24185 = n;
var G__24186 = o;
var G__24187 = p;
var G__24188 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188) : self__.afn.call(null,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24189 = a;
var G__24190 = b;
var G__24191 = c;
var G__24192 = d;
var G__24193 = e;
var G__24194 = f;
var G__24195 = g;
var G__24196 = h;
var G__24197 = i;
var G__24198 = j;
var G__24199 = k;
var G__24200 = l;
var G__24201 = m;
var G__24202 = n;
var G__24203 = o;
var G__24204 = p;
var G__24205 = q;
var G__24206 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206) : self__.afn.call(null,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24207 = a;
var G__24208 = b;
var G__24209 = c;
var G__24210 = d;
var G__24211 = e;
var G__24212 = f;
var G__24213 = g;
var G__24214 = h;
var G__24215 = i;
var G__24216 = j;
var G__24217 = k;
var G__24218 = l;
var G__24219 = m;
var G__24220 = n;
var G__24221 = o;
var G__24222 = p;
var G__24223 = q;
var G__24224 = r;
var G__24225 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225) : self__.afn.call(null,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24226 = a;
var G__24227 = b;
var G__24228 = c;
var G__24229 = d;
var G__24230 = e;
var G__24231 = f;
var G__24232 = g;
var G__24233 = h;
var G__24234 = i;
var G__24235 = j;
var G__24236 = k;
var G__24237 = l;
var G__24238 = m;
var G__24239 = n;
var G__24240 = o;
var G__24241 = p;
var G__24242 = q;
var G__24243 = r;
var G__24244 = s;
var G__24245 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245) : self__.afn.call(null,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24246 = self__.afn;
var G__24247 = a;
var G__24248 = b;
var G__24249 = c;
var G__24250 = d;
var G__24251 = e;
var G__24252 = f;
var G__24253 = g;
var G__24254 = h;
var G__24255 = i;
var G__24256 = j;
var G__24257 = k;
var G__24258 = l;
var G__24259 = m;
var G__24260 = n;
var G__24261 = o;
var G__24262 = p;
var G__24263 = q;
var G__24264 = r;
var G__24265 = s;
var G__24266 = t;
var G__24267 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267) : cljs.core.apply.call(null,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24272 = o;
if(G__24272){
var bit__16826__auto__ = (G__24272.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16826__auto__) || (G__24272.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24272.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24272);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24272);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__16133__auto__ = !((o == null));
if(and__16133__auto__){
var G__24276 = o;
if(G__24276){
var bit__16826__auto__ = (G__24276.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__24276.cljs$core$IMeta$)){
return true;
} else {
if((!G__24276.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24276);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24276);
}
} else {
return and__16133__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24279__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24280 = ret;
var G__24281 = cljs.core.first(ks);
var G__24282 = cljs.core.next(ks);
coll = G__24280;
k = G__24281;
ks = G__24282;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24279 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24283__i = 0, G__24283__a = new Array(arguments.length -  2);
while (G__24283__i < G__24283__a.length) {G__24283__a[G__24283__i] = arguments[G__24283__i + 2]; ++G__24283__i;}
  ks = new cljs.core.IndexedSeq(G__24283__a,0);
} 
return G__24279__delegate.call(this,coll,k,ks);};
G__24279.cljs$lang$maxFixedArity = 2;
G__24279.cljs$lang$applyTo = (function (arglist__24284){
var coll = cljs.core.first(arglist__24284);
arglist__24284 = cljs.core.next(arglist__24284);
var k = cljs.core.first(arglist__24284);
var ks = cljs.core.rest(arglist__24284);
return G__24279__delegate(coll,k,ks);
});
G__24279.cljs$core$IFn$_invoke$arity$variadic = G__24279__delegate;
return G__24279;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24285 = null;
if (arguments.length > 2) {
var G__24286__i = 0, G__24286__a = new Array(arguments.length -  2);
while (G__24286__i < G__24286__a.length) {G__24286__a[G__24286__i] = arguments[G__24286__i + 2]; ++G__24286__i;}
G__24285 = new cljs.core.IndexedSeq(G__24286__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24288 = x;
if(G__24288){
var bit__16826__auto__ = (G__24288.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16826__auto__) || (G__24288.cljs$core$ICollection$)){
return true;
} else {
if((!G__24288.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24288);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24290 = x;
if(G__24290){
var bit__16826__auto__ = (G__24290.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16826__auto__) || (G__24290.cljs$core$ISet$)){
return true;
} else {
if((!G__24290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24290);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24292 = x;
if(G__24292){
var bit__16826__auto__ = (G__24292.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16826__auto__) || (G__24292.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24292.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24292);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24294 = x;
if(G__24294){
var bit__16826__auto__ = (G__24294.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16826__auto__) || (G__24294.cljs$core$ISequential$)){
return true;
} else {
if((!G__24294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24294);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24296 = x;
if(G__24296){
var bit__16826__auto__ = (G__24296.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16826__auto__) || (G__24296.cljs$core$ISorted$)){
return true;
} else {
if((!G__24296.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24296);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24296);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24298 = x;
if(G__24298){
var bit__16826__auto__ = (G__24298.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16826__auto__) || (G__24298.cljs$core$IReduce$)){
return true;
} else {
if((!G__24298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24298);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24300 = x;
if(G__24300){
var bit__16826__auto__ = (G__24300.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16826__auto__) || (G__24300.cljs$core$IMap$)){
return true;
} else {
if((!G__24300.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24300);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24300);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24302 = x;
if(G__24302){
var bit__16826__auto__ = (G__24302.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16826__auto__) || (G__24302.cljs$core$IVector$)){
return true;
} else {
if((!G__24302.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24302);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24302);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24304 = x;
if(G__24304){
var bit__16819__auto__ = (G__24304.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16819__auto__) || (G__24304.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24310 = {};
return obj24310;
});
var js_obj__1 = (function() { 
var G__24313__delegate = function (keyvals){
var G__24311 = goog.object.create;
var G__24312 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24311,G__24312) : cljs.core.apply.call(null,G__24311,G__24312));
};
var G__24313 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24314__i = 0, G__24314__a = new Array(arguments.length -  0);
while (G__24314__i < G__24314__a.length) {G__24314__a[G__24314__i] = arguments[G__24314__i + 0]; ++G__24314__i;}
  keyvals = new cljs.core.IndexedSeq(G__24314__a,0);
} 
return G__24313__delegate.call(this,keyvals);};
G__24313.cljs$lang$maxFixedArity = 0;
G__24313.cljs$lang$applyTo = (function (arglist__24315){
var keyvals = cljs.core.seq(arglist__24315);
return G__24313__delegate(keyvals);
});
G__24313.cljs$core$IFn$_invoke$arity$variadic = G__24313__delegate;
return G__24313;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24316 = null;
if (arguments.length > 0) {
var G__24317__i = 0, G__24317__a = new Array(arguments.length -  0);
while (G__24317__i < G__24317__a.length) {G__24317__a[G__24317__i] = arguments[G__24317__i + 0]; ++G__24317__i;}
G__24316 = new cljs.core.IndexedSeq(G__24317__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24320_24322 = obj;
var G__24321_24323 = ((function (G__24320_24322,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24320_24322,keys))
;
goog.object.forEach(G__24320_24322,G__24321_24323);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24324 = (i__$1 + (1));
var G__24325 = (j__$1 + (1));
var G__24326 = (len__$1 - (1));
i__$1 = G__24324;
j__$1 = G__24325;
len__$1 = G__24326;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24327 = (i__$1 - (1));
var G__24328 = (j__$1 - (1));
var G__24329 = (len__$1 - (1));
i__$1 = G__24327;
j__$1 = G__24328;
len__$1 = G__24329;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24331 = {};
return obj24331;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24333 = s;
if(G__24333){
var bit__16826__auto__ = (G__24333.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__24333.cljs$core$ISeq$)){
return true;
} else {
if((!G__24333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24333);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24335 = s;
if(G__24335){
var bit__16826__auto__ = (G__24335.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16826__auto__) || (G__24335.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24335.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24335);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24335);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__16145__auto__ = cljs.core.fn_QMARK_(f);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__24339 = f;
if(G__24339){
var bit__16826__auto__ = (G__24339.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16826__auto__) || (G__24339.cljs$core$IFn$)){
return true;
} else {
if((!G__24339.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24339);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24339);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24352 = n;
return isNaN(G__24352);
})())) && (!((n === Infinity))) && (((function (){var G__24353 = n;
return parseFloat(G__24353);
})() === (function (){var G__24354 = n;
var G__24355 = (10);
return parseInt(G__24354,G__24355);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24356__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24357 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24358 = etc;
s = G__24357;
xs = G__24358;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24356 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24359__i = 0, G__24359__a = new Array(arguments.length -  2);
while (G__24359__i < G__24359__a.length) {G__24359__a[G__24359__i] = arguments[G__24359__i + 2]; ++G__24359__i;}
  more = new cljs.core.IndexedSeq(G__24359__a,0);
} 
return G__24356__delegate.call(this,x,y,more);};
G__24356.cljs$lang$maxFixedArity = 2;
G__24356.cljs$lang$applyTo = (function (arglist__24360){
var x = cljs.core.first(arglist__24360);
arglist__24360 = cljs.core.next(arglist__24360);
var y = cljs.core.first(arglist__24360);
var more = cljs.core.rest(arglist__24360);
return G__24356__delegate(x,y,more);
});
G__24356.cljs$core$IFn$_invoke$arity$variadic = G__24356__delegate;
return G__24356;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24361 = null;
if (arguments.length > 2) {
var G__24362__i = 0, G__24362__a = new Array(arguments.length -  2);
while (G__24362__i < G__24362__a.length) {G__24362__a[G__24362__i] = arguments[G__24362__i + 2]; ++G__24362__i;}
G__24361 = new cljs.core.IndexedSeq(G__24362__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24366 = x;
if(G__24366){
var bit__16819__auto__ = (G__24366.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16819__auto__) || (G__24366.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24367 = x;
var G__24368 = y;
return goog.array.defaultCompare(G__24367,G__24368);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24373 = xs;
var G__24374 = ys;
var G__24375 = len;
var G__24376 = (n + (1));
xs = G__24373;
ys = G__24374;
len = G__24375;
n = G__24376;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24381 = x;
var G__24382 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24381,G__24382) : f.call(null,G__24381,G__24382));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24383 = y;
var G__24384 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24383,G__24384) : f.call(null,G__24383,G__24384));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24390 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24390) : cljs.core.to_array.call(null,G__24390));
})();
var G__24391_24393 = a;
var G__24392_24394 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24391_24393,G__24392_24394);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24400 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24400) : keyfn.call(null,G__24400));
})(),(function (){var G__24401 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24401) : keyfn.call(null,G__24401));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24407 = f;
var G__24408 = cljs.core.first(s);
var G__24409 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24407,G__24408,G__24409) : cljs.core.reduce.call(null,G__24407,G__24408,G__24409));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24410 = val__$1;
var G__24411 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24410,G__24411) : f.call(null,G__24410,G__24411));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24412 = nval;
var G__24413 = cljs.core.next(coll__$1);
val__$1 = G__24412;
coll__$1 = G__24413;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24417 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24417) : cljs.core.to_array.call(null,G__24417));
})();
var G__24418_24420 = a;
goog.array.shuffle(G__24418_24420);

var G__24419 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24419) : cljs.core.vec.call(null,G__24419));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24423 = coll;
if(G__24423){
var bit__16819__auto__ = (G__24423.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__24423.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24424 = coll;
if(G__24424){
var bit__16819__auto__ = (G__24424.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__24424.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24433 = null;
var G__24433__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24433__1 = (function (x){
var G__24430 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24430) : cf.call(null,G__24430));
});
var G__24433__2 = (function (x,y){
var G__24431 = x;
var G__24432 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24431,G__24432) : f.call(null,G__24431,G__24432));
});
G__24433 = function(x,y){
switch(arguments.length){
case 0:
return G__24433__0.call(this);
case 1:
return G__24433__1.call(this,x);
case 2:
return G__24433__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24433.cljs$core$IFn$_invoke$arity$0 = G__24433__0;
G__24433.cljs$core$IFn$_invoke$arity$1 = G__24433__1;
G__24433.cljs$core$IFn$_invoke$arity$2 = G__24433__2;
return G__24433;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24440 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24440) : xform.call(null,G__24440));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24441 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24441) : f__$1.call(null,G__24441));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24442__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24442 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24443__i = 0, G__24443__a = new Array(arguments.length -  2);
while (G__24443__i < G__24443__a.length) {G__24443__a[G__24443__i] = arguments[G__24443__i + 2]; ++G__24443__i;}
  more = new cljs.core.IndexedSeq(G__24443__a,0);
} 
return G__24442__delegate.call(this,x,y,more);};
G__24442.cljs$lang$maxFixedArity = 2;
G__24442.cljs$lang$applyTo = (function (arglist__24444){
var x = cljs.core.first(arglist__24444);
arglist__24444 = cljs.core.next(arglist__24444);
var y = cljs.core.first(arglist__24444);
var more = cljs.core.rest(arglist__24444);
return G__24442__delegate(x,y,more);
});
G__24442.cljs$core$IFn$_invoke$arity$variadic = G__24442__delegate;
return G__24442;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24445 = null;
if (arguments.length > 2) {
var G__24446__i = 0, G__24446__a = new Array(arguments.length -  2);
while (G__24446__i < G__24446__a.length) {G__24446__a[G__24446__i] = arguments[G__24446__i + 2]; ++G__24446__i;}
G__24445 = new cljs.core.IndexedSeq(G__24446__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24447__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24448__i = 0, G__24448__a = new Array(arguments.length -  2);
while (G__24448__i < G__24448__a.length) {G__24448__a[G__24448__i] = arguments[G__24448__i + 2]; ++G__24448__i;}
  more = new cljs.core.IndexedSeq(G__24448__a,0);
} 
return G__24447__delegate.call(this,x,y,more);};
G__24447.cljs$lang$maxFixedArity = 2;
G__24447.cljs$lang$applyTo = (function (arglist__24449){
var x = cljs.core.first(arglist__24449);
arglist__24449 = cljs.core.next(arglist__24449);
var y = cljs.core.first(arglist__24449);
var more = cljs.core.rest(arglist__24449);
return G__24447__delegate(x,y,more);
});
G__24447.cljs$core$IFn$_invoke$arity$variadic = G__24447__delegate;
return G__24447;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24450 = null;
if (arguments.length > 2) {
var G__24451__i = 0, G__24451__a = new Array(arguments.length -  2);
while (G__24451__i < G__24451__a.length) {G__24451__a[G__24451__i] = arguments[G__24451__i + 2]; ++G__24451__i;}
G__24450 = new cljs.core.IndexedSeq(G__24451__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24452__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24452 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24453__i = 0, G__24453__a = new Array(arguments.length -  2);
while (G__24453__i < G__24453__a.length) {G__24453__a[G__24453__i] = arguments[G__24453__i + 2]; ++G__24453__i;}
  more = new cljs.core.IndexedSeq(G__24453__a,0);
} 
return G__24452__delegate.call(this,x,y,more);};
G__24452.cljs$lang$maxFixedArity = 2;
G__24452.cljs$lang$applyTo = (function (arglist__24454){
var x = cljs.core.first(arglist__24454);
arglist__24454 = cljs.core.next(arglist__24454);
var y = cljs.core.first(arglist__24454);
var more = cljs.core.rest(arglist__24454);
return G__24452__delegate(x,y,more);
});
G__24452.cljs$core$IFn$_invoke$arity$variadic = G__24452__delegate;
return G__24452;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24455 = null;
if (arguments.length > 2) {
var G__24456__i = 0, G__24456__a = new Array(arguments.length -  2);
while (G__24456__i < G__24456__a.length) {G__24456__a[G__24456__i] = arguments[G__24456__i + 2]; ++G__24456__i;}
G__24455 = new cljs.core.IndexedSeq(G__24456__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24461__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24461 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24462__i = 0, G__24462__a = new Array(arguments.length -  2);
while (G__24462__i < G__24462__a.length) {G__24462__a[G__24462__i] = arguments[G__24462__i + 2]; ++G__24462__i;}
  more = new cljs.core.IndexedSeq(G__24462__a,0);
} 
return G__24461__delegate.call(this,x,y,more);};
G__24461.cljs$lang$maxFixedArity = 2;
G__24461.cljs$lang$applyTo = (function (arglist__24463){
var x = cljs.core.first(arglist__24463);
arglist__24463 = cljs.core.next(arglist__24463);
var y = cljs.core.first(arglist__24463);
var more = cljs.core.rest(arglist__24463);
return G__24461__delegate(x,y,more);
});
G__24461.cljs$core$IFn$_invoke$arity$variadic = G__24461__delegate;
return G__24461;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24464 = null;
if (arguments.length > 2) {
var G__24465__i = 0, G__24465__a = new Array(arguments.length -  2);
while (G__24465__i < G__24465__a.length) {G__24465__a[G__24465__i] = arguments[G__24465__i + 2]; ++G__24465__i;}
G__24464 = new cljs.core.IndexedSeq(G__24465__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24466__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24467 = y;
var G__24468 = cljs.core.first(more);
var G__24469 = cljs.core.next(more);
x = G__24467;
y = G__24468;
more = G__24469;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24470__i = 0, G__24470__a = new Array(arguments.length -  2);
while (G__24470__i < G__24470__a.length) {G__24470__a[G__24470__i] = arguments[G__24470__i + 2]; ++G__24470__i;}
  more = new cljs.core.IndexedSeq(G__24470__a,0);
} 
return G__24466__delegate.call(this,x,y,more);};
G__24466.cljs$lang$maxFixedArity = 2;
G__24466.cljs$lang$applyTo = (function (arglist__24471){
var x = cljs.core.first(arglist__24471);
arglist__24471 = cljs.core.next(arglist__24471);
var y = cljs.core.first(arglist__24471);
var more = cljs.core.rest(arglist__24471);
return G__24466__delegate(x,y,more);
});
G__24466.cljs$core$IFn$_invoke$arity$variadic = G__24466__delegate;
return G__24466;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24472 = null;
if (arguments.length > 2) {
var G__24473__i = 0, G__24473__a = new Array(arguments.length -  2);
while (G__24473__i < G__24473__a.length) {G__24473__a[G__24473__i] = arguments[G__24473__i + 2]; ++G__24473__i;}
G__24472 = new cljs.core.IndexedSeq(G__24473__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24474__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24475 = y;
var G__24476 = cljs.core.first(more);
var G__24477 = cljs.core.next(more);
x = G__24475;
y = G__24476;
more = G__24477;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24474 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24478__i = 0, G__24478__a = new Array(arguments.length -  2);
while (G__24478__i < G__24478__a.length) {G__24478__a[G__24478__i] = arguments[G__24478__i + 2]; ++G__24478__i;}
  more = new cljs.core.IndexedSeq(G__24478__a,0);
} 
return G__24474__delegate.call(this,x,y,more);};
G__24474.cljs$lang$maxFixedArity = 2;
G__24474.cljs$lang$applyTo = (function (arglist__24479){
var x = cljs.core.first(arglist__24479);
arglist__24479 = cljs.core.next(arglist__24479);
var y = cljs.core.first(arglist__24479);
var more = cljs.core.rest(arglist__24479);
return G__24474__delegate(x,y,more);
});
G__24474.cljs$core$IFn$_invoke$arity$variadic = G__24474__delegate;
return G__24474;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24480 = null;
if (arguments.length > 2) {
var G__24481__i = 0, G__24481__a = new Array(arguments.length -  2);
while (G__24481__i < G__24481__a.length) {G__24481__a[G__24481__i] = arguments[G__24481__i + 2]; ++G__24481__i;}
G__24480 = new cljs.core.IndexedSeq(G__24481__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24482__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24483 = y;
var G__24484 = cljs.core.first(more);
var G__24485 = cljs.core.next(more);
x = G__24483;
y = G__24484;
more = G__24485;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24482 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24486__i = 0, G__24486__a = new Array(arguments.length -  2);
while (G__24486__i < G__24486__a.length) {G__24486__a[G__24486__i] = arguments[G__24486__i + 2]; ++G__24486__i;}
  more = new cljs.core.IndexedSeq(G__24486__a,0);
} 
return G__24482__delegate.call(this,x,y,more);};
G__24482.cljs$lang$maxFixedArity = 2;
G__24482.cljs$lang$applyTo = (function (arglist__24487){
var x = cljs.core.first(arglist__24487);
arglist__24487 = cljs.core.next(arglist__24487);
var y = cljs.core.first(arglist__24487);
var more = cljs.core.rest(arglist__24487);
return G__24482__delegate(x,y,more);
});
G__24482.cljs$core$IFn$_invoke$arity$variadic = G__24482__delegate;
return G__24482;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24488 = null;
if (arguments.length > 2) {
var G__24489__i = 0, G__24489__a = new Array(arguments.length -  2);
while (G__24489__i < G__24489__a.length) {G__24489__a[G__24489__i] = arguments[G__24489__i + 2]; ++G__24489__i;}
G__24488 = new cljs.core.IndexedSeq(G__24489__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24490__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24491 = y;
var G__24492 = cljs.core.first(more);
var G__24493 = cljs.core.next(more);
x = G__24491;
y = G__24492;
more = G__24493;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24490 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24494__i = 0, G__24494__a = new Array(arguments.length -  2);
while (G__24494__i < G__24494__a.length) {G__24494__a[G__24494__i] = arguments[G__24494__i + 2]; ++G__24494__i;}
  more = new cljs.core.IndexedSeq(G__24494__a,0);
} 
return G__24490__delegate.call(this,x,y,more);};
G__24490.cljs$lang$maxFixedArity = 2;
G__24490.cljs$lang$applyTo = (function (arglist__24495){
var x = cljs.core.first(arglist__24495);
arglist__24495 = cljs.core.next(arglist__24495);
var y = cljs.core.first(arglist__24495);
var more = cljs.core.rest(arglist__24495);
return G__24490__delegate(x,y,more);
});
G__24490.cljs$core$IFn$_invoke$arity$variadic = G__24490__delegate;
return G__24490;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24496 = null;
if (arguments.length > 2) {
var G__24497__i = 0, G__24497__a = new Array(arguments.length -  2);
while (G__24497__i < G__24497__a.length) {G__24497__a[G__24497__i] = arguments[G__24497__i + 2]; ++G__24497__i;}
G__24496 = new cljs.core.IndexedSeq(G__24497__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
});
var max__3 = (function() { 
var G__24498__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})(),more);
};
var G__24498 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24499__i = 0, G__24499__a = new Array(arguments.length -  2);
while (G__24499__i < G__24499__a.length) {G__24499__a[G__24499__i] = arguments[G__24499__i + 2]; ++G__24499__i;}
  more = new cljs.core.IndexedSeq(G__24499__a,0);
} 
return G__24498__delegate.call(this,x,y,more);};
G__24498.cljs$lang$maxFixedArity = 2;
G__24498.cljs$lang$applyTo = (function (arglist__24500){
var x = cljs.core.first(arglist__24500);
arglist__24500 = cljs.core.next(arglist__24500);
var y = cljs.core.first(arglist__24500);
var more = cljs.core.rest(arglist__24500);
return G__24498__delegate(x,y,more);
});
G__24498.cljs$core$IFn$_invoke$arity$variadic = G__24498__delegate;
return G__24498;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24501 = null;
if (arguments.length > 2) {
var G__24502__i = 0, G__24502__a = new Array(arguments.length -  2);
while (G__24502__i < G__24502__a.length) {G__24502__a[G__24502__i] = arguments[G__24502__i + 2]; ++G__24502__i;}
G__24501 = new cljs.core.IndexedSeq(G__24502__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
});
var min__3 = (function() { 
var G__24503__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
})(),more);
};
var G__24503 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24504__i = 0, G__24504__a = new Array(arguments.length -  2);
while (G__24504__i < G__24504__a.length) {G__24504__a[G__24504__i] = arguments[G__24504__i + 2]; ++G__24504__i;}
  more = new cljs.core.IndexedSeq(G__24504__a,0);
} 
return G__24503__delegate.call(this,x,y,more);};
G__24503.cljs$lang$maxFixedArity = 2;
G__24503.cljs$lang$applyTo = (function (arglist__24505){
var x = cljs.core.first(arglist__24505);
arglist__24505 = cljs.core.next(arglist__24505);
var y = cljs.core.first(arglist__24505);
var more = cljs.core.rest(arglist__24505);
return G__24503__delegate(x,y,more);
});
G__24503.cljs$core$IFn$_invoke$arity$variadic = G__24503__delegate;
return G__24503;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24506 = null;
if (arguments.length > 2) {
var G__24507__i = 0, G__24507__a = new Array(arguments.length -  2);
while (G__24507__i < G__24507__a.length) {G__24507__a[G__24507__i] = arguments[G__24507__i + 2]; ++G__24507__i;}
G__24506 = new cljs.core.IndexedSeq(G__24507__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24506);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24508__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24508 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24509__i = 0, G__24509__a = new Array(arguments.length -  2);
while (G__24509__i < G__24509__a.length) {G__24509__a[G__24509__i] = arguments[G__24509__i + 2]; ++G__24509__i;}
  more = new cljs.core.IndexedSeq(G__24509__a,0);
} 
return G__24508__delegate.call(this,x,y,more);};
G__24508.cljs$lang$maxFixedArity = 2;
G__24508.cljs$lang$applyTo = (function (arglist__24510){
var x = cljs.core.first(arglist__24510);
arglist__24510 = cljs.core.next(arglist__24510);
var y = cljs.core.first(arglist__24510);
var more = cljs.core.rest(arglist__24510);
return G__24508__delegate(x,y,more);
});
G__24508.cljs$core$IFn$_invoke$arity$variadic = G__24508__delegate;
return G__24508;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24511 = null;
if (arguments.length > 2) {
var G__24512__i = 0, G__24512__a = new Array(arguments.length -  2);
while (G__24512__i < G__24512__a.length) {G__24512__a[G__24512__i] = arguments[G__24512__i + 2]; ++G__24512__i;}
G__24511 = new cljs.core.IndexedSeq(G__24512__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24513__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24513 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24514__i = 0, G__24514__a = new Array(arguments.length -  2);
while (G__24514__i < G__24514__a.length) {G__24514__a[G__24514__i] = arguments[G__24514__i + 2]; ++G__24514__i;}
  more = new cljs.core.IndexedSeq(G__24514__a,0);
} 
return G__24513__delegate.call(this,x,y,more);};
G__24513.cljs$lang$maxFixedArity = 2;
G__24513.cljs$lang$applyTo = (function (arglist__24515){
var x = cljs.core.first(arglist__24515);
arglist__24515 = cljs.core.next(arglist__24515);
var y = cljs.core.first(arglist__24515);
var more = cljs.core.rest(arglist__24515);
return G__24513__delegate(x,y,more);
});
G__24513.cljs$core$IFn$_invoke$arity$variadic = G__24513__delegate;
return G__24513;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24516 = null;
if (arguments.length > 2) {
var G__24517__i = 0, G__24517__a = new Array(arguments.length -  2);
while (G__24517__i < G__24517__a.length) {G__24517__a[G__24517__i] = arguments[G__24517__i + 2]; ++G__24517__i;}
G__24516 = new cljs.core.IndexedSeq(G__24517__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24522__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24522 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24523__i = 0, G__24523__a = new Array(arguments.length -  2);
while (G__24523__i < G__24523__a.length) {G__24523__a[G__24523__i] = arguments[G__24523__i + 2]; ++G__24523__i;}
  more = new cljs.core.IndexedSeq(G__24523__a,0);
} 
return G__24522__delegate.call(this,x,y,more);};
G__24522.cljs$lang$maxFixedArity = 2;
G__24522.cljs$lang$applyTo = (function (arglist__24524){
var x = cljs.core.first(arglist__24524);
arglist__24524 = cljs.core.next(arglist__24524);
var y = cljs.core.first(arglist__24524);
var more = cljs.core.rest(arglist__24524);
return G__24522__delegate(x,y,more);
});
G__24522.cljs$core$IFn$_invoke$arity$variadic = G__24522__delegate;
return G__24522;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24525 = null;
if (arguments.length > 2) {
var G__24526__i = 0, G__24526__a = new Array(arguments.length -  2);
while (G__24526__i < G__24526__a.length) {G__24526__a[G__24526__i] = arguments[G__24526__i + 2]; ++G__24526__i;}
G__24525 = new cljs.core.IndexedSeq(G__24526__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24525);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24527__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24527 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24528__i = 0, G__24528__a = new Array(arguments.length -  2);
while (G__24528__i < G__24528__a.length) {G__24528__a[G__24528__i] = arguments[G__24528__i + 2]; ++G__24528__i;}
  more = new cljs.core.IndexedSeq(G__24528__a,0);
} 
return G__24527__delegate.call(this,x,y,more);};
G__24527.cljs$lang$maxFixedArity = 2;
G__24527.cljs$lang$applyTo = (function (arglist__24529){
var x = cljs.core.first(arglist__24529);
arglist__24529 = cljs.core.next(arglist__24529);
var y = cljs.core.first(arglist__24529);
var more = cljs.core.rest(arglist__24529);
return G__24527__delegate(x,y,more);
});
G__24527.cljs$core$IFn$_invoke$arity$variadic = G__24527__delegate;
return G__24527;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24530 = null;
if (arguments.length > 2) {
var G__24531__i = 0, G__24531__a = new Array(arguments.length -  2);
while (G__24531__i < G__24531__a.length) {G__24531__a[G__24531__i] = arguments[G__24531__i + 2]; ++G__24531__i;}
G__24530 = new cljs.core.IndexedSeq(G__24531__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24532__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24532 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24533__i = 0, G__24533__a = new Array(arguments.length -  2);
while (G__24533__i < G__24533__a.length) {G__24533__a[G__24533__i] = arguments[G__24533__i + 2]; ++G__24533__i;}
  more = new cljs.core.IndexedSeq(G__24533__a,0);
} 
return G__24532__delegate.call(this,x,y,more);};
G__24532.cljs$lang$maxFixedArity = 2;
G__24532.cljs$lang$applyTo = (function (arglist__24534){
var x = cljs.core.first(arglist__24534);
arglist__24534 = cljs.core.next(arglist__24534);
var y = cljs.core.first(arglist__24534);
var more = cljs.core.rest(arglist__24534);
return G__24532__delegate(x,y,more);
});
G__24532.cljs$core$IFn$_invoke$arity$variadic = G__24532__delegate;
return G__24532;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24535 = null;
if (arguments.length > 2) {
var G__24536__i = 0, G__24536__a = new Array(arguments.length -  2);
while (G__24536__i < G__24536__a.length) {G__24536__a[G__24536__i] = arguments[G__24536__i + 2]; ++G__24536__i;}
G__24535 = new cljs.core.IndexedSeq(G__24536__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24539 = x;
var G__24540 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24539,G__24540) : cljs.core.mod.call(null,G__24539,G__24540));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24541__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24541 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24542__i = 0, G__24542__a = new Array(arguments.length -  2);
while (G__24542__i < G__24542__a.length) {G__24542__a[G__24542__i] = arguments[G__24542__i + 2]; ++G__24542__i;}
  more = new cljs.core.IndexedSeq(G__24542__a,0);
} 
return G__24541__delegate.call(this,x,y,more);};
G__24541.cljs$lang$maxFixedArity = 2;
G__24541.cljs$lang$applyTo = (function (arglist__24543){
var x = cljs.core.first(arglist__24543);
arglist__24543 = cljs.core.next(arglist__24543);
var y = cljs.core.first(arglist__24543);
var more = cljs.core.rest(arglist__24543);
return G__24541__delegate(x,y,more);
});
G__24541.cljs$core$IFn$_invoke$arity$variadic = G__24541__delegate;
return G__24541;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24544 = null;
if (arguments.length > 2) {
var G__24545__i = 0, G__24545__a = new Array(arguments.length -  2);
while (G__24545__i < G__24545__a.length) {G__24545__a[G__24545__i] = arguments[G__24545__i + 2]; ++G__24545__i;}
G__24544 = new cljs.core.IndexedSeq(G__24545__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24546__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24546 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24547__i = 0, G__24547__a = new Array(arguments.length -  2);
while (G__24547__i < G__24547__a.length) {G__24547__a[G__24547__i] = arguments[G__24547__i + 2]; ++G__24547__i;}
  more = new cljs.core.IndexedSeq(G__24547__a,0);
} 
return G__24546__delegate.call(this,x,y,more);};
G__24546.cljs$lang$maxFixedArity = 2;
G__24546.cljs$lang$applyTo = (function (arglist__24548){
var x = cljs.core.first(arglist__24548);
arglist__24548 = cljs.core.next(arglist__24548);
var y = cljs.core.first(arglist__24548);
var more = cljs.core.rest(arglist__24548);
return G__24546__delegate(x,y,more);
});
G__24546.cljs$core$IFn$_invoke$arity$variadic = G__24546__delegate;
return G__24546;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24549 = null;
if (arguments.length > 2) {
var G__24550__i = 0, G__24550__a = new Array(arguments.length -  2);
while (G__24550__i < G__24550__a.length) {G__24550__a[G__24550__i] = arguments[G__24550__i + 2]; ++G__24550__i;}
G__24549 = new cljs.core.IndexedSeq(G__24550__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24553 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24553) : Math.floor.call(null,G__24553));
} else {
var G__24554 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24554) : Math.ceil.call(null,G__24554));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24555__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24555 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24556__i = 0, G__24556__a = new Array(arguments.length -  2);
while (G__24556__i < G__24556__a.length) {G__24556__a[G__24556__i] = arguments[G__24556__i + 2]; ++G__24556__i;}
  more = new cljs.core.IndexedSeq(G__24556__a,0);
} 
return G__24555__delegate.call(this,x,y,more);};
G__24555.cljs$lang$maxFixedArity = 2;
G__24555.cljs$lang$applyTo = (function (arglist__24557){
var x = cljs.core.first(arglist__24557);
arglist__24557 = cljs.core.next(arglist__24557);
var y = cljs.core.first(arglist__24557);
var more = cljs.core.rest(arglist__24557);
return G__24555__delegate(x,y,more);
});
G__24555.cljs$core$IFn$_invoke$arity$variadic = G__24555__delegate;
return G__24555;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24558 = null;
if (arguments.length > 2) {
var G__24559__i = 0, G__24559__a = new Array(arguments.length -  2);
while (G__24559__i < G__24559__a.length) {G__24559__a[G__24559__i] = arguments[G__24559__i + 2]; ++G__24559__i;}
G__24558 = new cljs.core.IndexedSeq(G__24559__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24560__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24560 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24561__i = 0, G__24561__a = new Array(arguments.length -  2);
while (G__24561__i < G__24561__a.length) {G__24561__a[G__24561__i] = arguments[G__24561__i + 2]; ++G__24561__i;}
  more = new cljs.core.IndexedSeq(G__24561__a,0);
} 
return G__24560__delegate.call(this,x,y,more);};
G__24560.cljs$lang$maxFixedArity = 2;
G__24560.cljs$lang$applyTo = (function (arglist__24562){
var x = cljs.core.first(arglist__24562);
arglist__24562 = cljs.core.next(arglist__24562);
var y = cljs.core.first(arglist__24562);
var more = cljs.core.rest(arglist__24562);
return G__24560__delegate(x,y,more);
});
G__24560.cljs$core$IFn$_invoke$arity$variadic = G__24560__delegate;
return G__24560;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24563 = null;
if (arguments.length > 2) {
var G__24564__i = 0, G__24564__a = new Array(arguments.length -  2);
while (G__24564__i < G__24564__a.length) {G__24564__a[G__24564__i] = arguments[G__24564__i + 2]; ++G__24564__i;}
G__24563 = new cljs.core.IndexedSeq(G__24564__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24565__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24565 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24566__i = 0, G__24566__a = new Array(arguments.length -  2);
while (G__24566__i < G__24566__a.length) {G__24566__a[G__24566__i] = arguments[G__24566__i + 2]; ++G__24566__i;}
  more = new cljs.core.IndexedSeq(G__24566__a,0);
} 
return G__24565__delegate.call(this,x,y,more);};
G__24565.cljs$lang$maxFixedArity = 2;
G__24565.cljs$lang$applyTo = (function (arglist__24567){
var x = cljs.core.first(arglist__24567);
arglist__24567 = cljs.core.next(arglist__24567);
var y = cljs.core.first(arglist__24567);
var more = cljs.core.rest(arglist__24567);
return G__24565__delegate(x,y,more);
});
G__24565.cljs$core$IFn$_invoke$arity$variadic = G__24565__delegate;
return G__24565;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24568 = null;
if (arguments.length > 2) {
var G__24569__i = 0, G__24569__a = new Array(arguments.length -  2);
while (G__24569__i < G__24569__a.length) {G__24569__a[G__24569__i] = arguments[G__24569__i + 2]; ++G__24569__i;}
G__24568 = new cljs.core.IndexedSeq(G__24569__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24570__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24570 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24571__i = 0, G__24571__a = new Array(arguments.length -  2);
while (G__24571__i < G__24571__a.length) {G__24571__a[G__24571__i] = arguments[G__24571__i + 2]; ++G__24571__i;}
  more = new cljs.core.IndexedSeq(G__24571__a,0);
} 
return G__24570__delegate.call(this,x,y,more);};
G__24570.cljs$lang$maxFixedArity = 2;
G__24570.cljs$lang$applyTo = (function (arglist__24572){
var x = cljs.core.first(arglist__24572);
arglist__24572 = cljs.core.next(arglist__24572);
var y = cljs.core.first(arglist__24572);
var more = cljs.core.rest(arglist__24572);
return G__24570__delegate(x,y,more);
});
G__24570.cljs$core$IFn$_invoke$arity$variadic = G__24570__delegate;
return G__24570;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24573 = null;
if (arguments.length > 2) {
var G__24574__i = 0, G__24574__a = new Array(arguments.length -  2);
while (G__24574__i < G__24574__a.length) {G__24574__a[G__24574__i] = arguments[G__24574__i + 2]; ++G__24574__i;}
G__24573 = new cljs.core.IndexedSeq(G__24574__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24579__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24580 = y;
var G__24581 = cljs.core.first(more);
var G__24582 = cljs.core.next(more);
x = G__24580;
y = G__24581;
more = G__24582;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24579 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24583__i = 0, G__24583__a = new Array(arguments.length -  2);
while (G__24583__i < G__24583__a.length) {G__24583__a[G__24583__i] = arguments[G__24583__i + 2]; ++G__24583__i;}
  more = new cljs.core.IndexedSeq(G__24583__a,0);
} 
return G__24579__delegate.call(this,x,y,more);};
G__24579.cljs$lang$maxFixedArity = 2;
G__24579.cljs$lang$applyTo = (function (arglist__24584){
var x = cljs.core.first(arglist__24584);
arglist__24584 = cljs.core.next(arglist__24584);
var y = cljs.core.first(arglist__24584);
var more = cljs.core.rest(arglist__24584);
return G__24579__delegate(x,y,more);
});
G__24579.cljs$core$IFn$_invoke$arity$variadic = G__24579__delegate;
return G__24579;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24585 = null;
if (arguments.length > 2) {
var G__24586__i = 0, G__24586__a = new Array(arguments.length -  2);
while (G__24586__i < G__24586__a.length) {G__24586__a[G__24586__i] = arguments[G__24586__i + 2]; ++G__24586__i;}
G__24585 = new cljs.core.IndexedSeq(G__24586__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24587 = (n__$1 - (1));
var G__24588 = cljs.core.next(xs);
n__$1 = G__24587;
xs = G__24588;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24592 = x;
return goog.string.buildString(G__24592);
}
});
var str__2 = (function() { 
var G__24593__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24594 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24595 = cljs.core.next(more);
sb = G__24594;
more = G__24595;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24593 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24596__i = 0, G__24596__a = new Array(arguments.length -  1);
while (G__24596__i < G__24596__a.length) {G__24596__a[G__24596__i] = arguments[G__24596__i + 1]; ++G__24596__i;}
  ys = new cljs.core.IndexedSeq(G__24596__a,0);
} 
return G__24593__delegate.call(this,x,ys);};
G__24593.cljs$lang$maxFixedArity = 1;
G__24593.cljs$lang$applyTo = (function (arglist__24597){
var x = cljs.core.first(arglist__24597);
var ys = cljs.core.rest(arglist__24597);
return G__24593__delegate(x,ys);
});
G__24593.cljs$core$IFn$_invoke$arity$variadic = G__24593__delegate;
return G__24593;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24598 = null;
if (arguments.length > 1) {
var G__24599__i = 0, G__24599__a = new Array(arguments.length -  1);
while (G__24599__i < G__24599__a.length) {G__24599__a[G__24599__i] = arguments[G__24599__i + 1]; ++G__24599__i;}
G__24598 = new cljs.core.IndexedSeq(G__24599__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24600 = cljs.core.next(xs);
var G__24601 = cljs.core.next(ys);
xs = G__24600;
ys = G__24601;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24602 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24603 = cljs.core.next(s);
res = G__24602;
s = G__24603;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24608 = ((h + (cljs.core.hash((function (){var G__24606 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24606) : cljs.core.key.call(null,G__24606));
})()) ^ cljs.core.hash((function (){var G__24607 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24607) : cljs.core.val.call(null,G__24607));
})()))) % (4503599627370496));
var G__24609 = cljs.core.next(s);
h = G__24608;
s = G__24609;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24610 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24611 = cljs.core.next(s__$1);
h = G__24610;
s__$1 = G__24611;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24622_24632 = cljs.core.seq(fn_map);
var chunk__24623_24633 = null;
var count__24624_24634 = (0);
var i__24625_24635 = (0);
while(true){
if((i__24625_24635 < count__24624_24634)){
var vec__24626_24636 = chunk__24623_24633.cljs$core$IIndexed$_nth$arity$2(null,i__24625_24635);
var key_name_24637 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24626_24636,(0),null);
var f_24638 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24626_24636,(1),null);
var str_name_24639 = (function (){var G__24627 = key_name_24637;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24627) : cljs.core.name.call(null,G__24627));
})();
(obj[str_name_24639] = f_24638);

var G__24640 = seq__24622_24632;
var G__24641 = chunk__24623_24633;
var G__24642 = count__24624_24634;
var G__24643 = (i__24625_24635 + (1));
seq__24622_24632 = G__24640;
chunk__24623_24633 = G__24641;
count__24624_24634 = G__24642;
i__24625_24635 = G__24643;
continue;
} else {
var temp__4126__auto___24644 = cljs.core.seq(seq__24622_24632);
if(temp__4126__auto___24644){
var seq__24622_24645__$1 = temp__4126__auto___24644;
if(cljs.core.chunked_seq_QMARK_(seq__24622_24645__$1)){
var c__16932__auto___24646 = (function (){var G__24628 = seq__24622_24645__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24628) : cljs.core.chunk_first.call(null,G__24628));
})();
var G__24647 = (function (){var G__24629 = seq__24622_24645__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24629) : cljs.core.chunk_rest.call(null,G__24629));
})();
var G__24648 = c__16932__auto___24646;
var G__24649 = cljs.core.count(c__16932__auto___24646);
var G__24650 = (0);
seq__24622_24632 = G__24647;
chunk__24623_24633 = G__24648;
count__24624_24634 = G__24649;
i__24625_24635 = G__24650;
continue;
} else {
var vec__24630_24651 = cljs.core.first(seq__24622_24645__$1);
var key_name_24652 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24630_24651,(0),null);
var f_24653 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24630_24651,(1),null);
var str_name_24654 = (function (){var G__24631 = key_name_24652;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24631) : cljs.core.name.call(null,G__24631));
})();
(obj[str_name_24654] = f_24653);

var G__24655 = cljs.core.next(seq__24622_24645__$1);
var G__24656 = null;
var G__24657 = (0);
var G__24658 = (0);
seq__24622_24632 = G__24655;
chunk__24623_24633 = G__24656;
count__24624_24634 = G__24657;
i__24625_24635 = G__24658;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24660 = coll;
if(G__24660){
var bit__16826__auto__ = (G__24660.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16826__auto__) || (G__24660.cljs$core$IReversible$)){
return true;
} else {
if((!G__24660.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24660);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24660);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24661 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24661;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24662 = (i - (1));
var G__24663 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24662;
r = G__24663;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24664__i = 0, G__24664__a = new Array(arguments.length -  0);
while (G__24664__i < G__24664__a.length) {G__24664__a[G__24664__i] = arguments[G__24664__i + 0]; ++G__24664__i;}
  xs = new cljs.core.IndexedSeq(G__24664__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24665){
var xs = cljs.core.seq(arglist__24665);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__16145__auto__ = (coll == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__24669 = coll;
if(G__24669){
var bit__16819__auto__ = (G__24669.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__24669.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24671 = x;
if(G__24671){
var bit__16826__auto__ = (G__24671.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16826__auto__) || (G__24671.cljs$core$IList$)){
return true;
} else {
if((!G__24671.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24671);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24678 = a.ns;
var G__24679 = b.ns;
return goog.array.defaultCompare(G__24678,G__24679);
})();
if(((0) === nsc)){
var G__24680 = a.name;
var G__24681 = b.name;
return goog.array.defaultCompare(G__24680,G__24681);
} else {
return nsc;
}
}
} else {
var G__24682 = a.name;
var G__24683 = b.name;
return goog.array.defaultCompare(G__24682,G__24683);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24685 = null;
var G__24685__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24685__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24685 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24685__2.call(this,self__,coll);
case 3:
return G__24685__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24685.cljs$core$IFn$_invoke$arity$2 = G__24685__2;
G__24685.cljs$core$IFn$_invoke$arity$3 = G__24685__3;
return G__24685;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24684){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24684)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24687 = x;
if(G__24687){
var bit__16819__auto__ = (G__24687.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__24687.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24689 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24689) : cljs.core.name.call(null,G__24689));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24690 = ls.sval();
ls = G__24690;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24692 = s;
if(G__24692){
var bit__16819__auto__ = (G__24692.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16819__auto__) || (G__24692.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24693 = cljs.core.next(s__$1);
s__$1 = G__24693;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24694 = (0);
var xs_24695 = cljs.core.seq(coll);
while(true){
if(xs_24695){
(ret[i_24694] = cljs.core.to_array(cljs.core.first(xs_24695)));

var G__24696 = (i_24694 + (1));
var G__24697 = cljs.core.next(xs_24695);
i_24694 = G__24696;
xs_24695 = G__24697;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24700 = (i + (1));
var G__24701 = cljs.core.next(s__$1);
i = G__24700;
s__$1 = G__24701;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24702 = size;
var i_24703 = (0);
while(true){
if((i_24703 < n__17032__auto___24702)){
(a[i_24703] = init_val_or_seq);

var G__24704 = (i_24703 + (1));
i_24703 = G__24704;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24707 = (i + (1));
var G__24708 = cljs.core.next(s__$1);
i = G__24707;
s__$1 = G__24708;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24709 = size;
var i_24710 = (0);
while(true){
if((i_24710 < n__17032__auto___24709)){
(a[i_24710] = init_val_or_seq);

var G__24711 = (i_24710 + (1));
i_24710 = G__24711;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24714 = (i + (1));
var G__24715 = cljs.core.next(s__$1);
i = G__24714;
s__$1 = G__24715;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24716 = size;
var i_24717 = (0);
while(true){
if((i_24717 < n__17032__auto___24716)){
(a[i_24717] = init_val_or_seq);

var G__24718 = (i_24717 + (1));
i_24717 = G__24718;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24721 = (i + (1));
var G__24722 = cljs.core.next(s__$1);
i = G__24721;
s__$1 = G__24722;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24723 = size;
var i_24724 = (0);
while(true){
if((i_24724 < n__17032__auto___24723)){
(a[i_24724] = init_val_or_seq);

var G__24725 = (i_24724 + (1));
i_24724 = G__24725;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24726 = cljs.core.next(s__$1);
var G__24727 = (i - (1));
var G__24728 = (sum + (1));
s__$1 = G__24726;
i = G__24727;
sum = G__24728;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24748__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24748 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24749__i = 0, G__24749__a = new Array(arguments.length -  2);
while (G__24749__i < G__24749__a.length) {G__24749__a[G__24749__i] = arguments[G__24749__i + 2]; ++G__24749__i;}
  zs = new cljs.core.IndexedSeq(G__24749__a,0);
} 
return G__24748__delegate.call(this,x,y,zs);};
G__24748.cljs$lang$maxFixedArity = 2;
G__24748.cljs$lang$applyTo = (function (arglist__24750){
var x = cljs.core.first(arglist__24750);
arglist__24750 = cljs.core.next(arglist__24750);
var y = cljs.core.first(arglist__24750);
var zs = cljs.core.rest(arglist__24750);
return G__24748__delegate(x,y,zs);
});
G__24748.cljs$core$IFn$_invoke$arity$variadic = G__24748__delegate;
return G__24748;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24751 = null;
if (arguments.length > 2) {
var G__24752__i = 0, G__24752__a = new Array(arguments.length -  2);
while (G__24752__i < G__24752__a.length) {G__24752__a[G__24752__i] = arguments[G__24752__i + 2]; ++G__24752__i;}
G__24751 = new cljs.core.IndexedSeq(G__24752__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24753__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24753 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24754__i = 0, G__24754__a = new Array(arguments.length -  4);
while (G__24754__i < G__24754__a.length) {G__24754__a[G__24754__i] = arguments[G__24754__i + 4]; ++G__24754__i;}
  more = new cljs.core.IndexedSeq(G__24754__a,0);
} 
return G__24753__delegate.call(this,a,b,c,d,more);};
G__24753.cljs$lang$maxFixedArity = 4;
G__24753.cljs$lang$applyTo = (function (arglist__24755){
var a = cljs.core.first(arglist__24755);
arglist__24755 = cljs.core.next(arglist__24755);
var b = cljs.core.first(arglist__24755);
arglist__24755 = cljs.core.next(arglist__24755);
var c = cljs.core.first(arglist__24755);
arglist__24755 = cljs.core.next(arglist__24755);
var d = cljs.core.first(arglist__24755);
var more = cljs.core.rest(arglist__24755);
return G__24753__delegate(a,b,c,d,more);
});
G__24753.cljs$core$IFn$_invoke$arity$variadic = G__24753__delegate;
return G__24753;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24756 = null;
if (arguments.length > 4) {
var G__24757__i = 0, G__24757__a = new Array(arguments.length -  4);
while (G__24757__i < G__24757__a.length) {G__24757__a[G__24757__i] = arguments[G__24757__i + 4]; ++G__24757__i;}
G__24756 = new cljs.core.IndexedSeq(G__24757__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24758__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24759 = ntcoll;
var G__24760 = cljs.core.first(vals);
var G__24761 = cljs.core.next(vals);
tcoll = G__24759;
val = G__24760;
vals = G__24761;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24758 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24762__i = 0, G__24762__a = new Array(arguments.length -  2);
while (G__24762__i < G__24762__a.length) {G__24762__a[G__24762__i] = arguments[G__24762__i + 2]; ++G__24762__i;}
  vals = new cljs.core.IndexedSeq(G__24762__a,0);
} 
return G__24758__delegate.call(this,tcoll,val,vals);};
G__24758.cljs$lang$maxFixedArity = 2;
G__24758.cljs$lang$applyTo = (function (arglist__24763){
var tcoll = cljs.core.first(arglist__24763);
arglist__24763 = cljs.core.next(arglist__24763);
var val = cljs.core.first(arglist__24763);
var vals = cljs.core.rest(arglist__24763);
return G__24758__delegate(tcoll,val,vals);
});
G__24758.cljs$core$IFn$_invoke$arity$variadic = G__24758__delegate;
return G__24758;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24764 = null;
if (arguments.length > 2) {
var G__24765__i = 0, G__24765__a = new Array(arguments.length -  2);
while (G__24765__i < G__24765__a.length) {G__24765__a[G__24765__i] = arguments[G__24765__i + 2]; ++G__24765__i;}
G__24764 = new cljs.core.IndexedSeq(G__24765__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24766__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24767 = ntcoll;
var G__24768 = cljs.core.first(kvs);
var G__24769 = cljs.core.second(kvs);
var G__24770 = cljs.core.nnext(kvs);
tcoll = G__24767;
key = G__24768;
val = G__24769;
kvs = G__24770;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24766 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24771__i = 0, G__24771__a = new Array(arguments.length -  3);
while (G__24771__i < G__24771__a.length) {G__24771__a[G__24771__i] = arguments[G__24771__i + 3]; ++G__24771__i;}
  kvs = new cljs.core.IndexedSeq(G__24771__a,0);
} 
return G__24766__delegate.call(this,tcoll,key,val,kvs);};
G__24766.cljs$lang$maxFixedArity = 3;
G__24766.cljs$lang$applyTo = (function (arglist__24772){
var tcoll = cljs.core.first(arglist__24772);
arglist__24772 = cljs.core.next(arglist__24772);
var key = cljs.core.first(arglist__24772);
arglist__24772 = cljs.core.next(arglist__24772);
var val = cljs.core.first(arglist__24772);
var kvs = cljs.core.rest(arglist__24772);
return G__24766__delegate(tcoll,key,val,kvs);
});
G__24766.cljs$core$IFn$_invoke$arity$variadic = G__24766__delegate;
return G__24766;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24773 = null;
if (arguments.length > 3) {
var G__24774__i = 0, G__24774__a = new Array(arguments.length -  3);
while (G__24774__i < G__24774__a.length) {G__24774__a[G__24774__i] = arguments[G__24774__i + 3]; ++G__24774__i;}
G__24773 = new cljs.core.IndexedSeq(G__24774__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24775__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24776 = ntcoll;
var G__24777 = cljs.core.first(ks);
var G__24778 = cljs.core.next(ks);
tcoll = G__24776;
key = G__24777;
ks = G__24778;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24775 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24779__i = 0, G__24779__a = new Array(arguments.length -  2);
while (G__24779__i < G__24779__a.length) {G__24779__a[G__24779__i] = arguments[G__24779__i + 2]; ++G__24779__i;}
  ks = new cljs.core.IndexedSeq(G__24779__a,0);
} 
return G__24775__delegate.call(this,tcoll,key,ks);};
G__24775.cljs$lang$maxFixedArity = 2;
G__24775.cljs$lang$applyTo = (function (arglist__24780){
var tcoll = cljs.core.first(arglist__24780);
arglist__24780 = cljs.core.next(arglist__24780);
var key = cljs.core.first(arglist__24780);
var ks = cljs.core.rest(arglist__24780);
return G__24775__delegate(tcoll,key,ks);
});
G__24775.cljs$core$IFn$_invoke$arity$variadic = G__24775__delegate;
return G__24775;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24781 = null;
if (arguments.length > 2) {
var G__24782__i = 0, G__24782__a = new Array(arguments.length -  2);
while (G__24782__i < G__24782__a.length) {G__24782__a[G__24782__i] = arguments[G__24782__i + 2]; ++G__24782__i;}
G__24781 = new cljs.core.IndexedSeq(G__24782__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24783__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24784 = ntcoll;
var G__24785 = cljs.core.first(vals);
var G__24786 = cljs.core.next(vals);
tcoll = G__24784;
val = G__24785;
vals = G__24786;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24783 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24787__i = 0, G__24787__a = new Array(arguments.length -  2);
while (G__24787__i < G__24787__a.length) {G__24787__a[G__24787__i] = arguments[G__24787__i + 2]; ++G__24787__i;}
  vals = new cljs.core.IndexedSeq(G__24787__a,0);
} 
return G__24783__delegate.call(this,tcoll,val,vals);};
G__24783.cljs$lang$maxFixedArity = 2;
G__24783.cljs$lang$applyTo = (function (arglist__24788){
var tcoll = cljs.core.first(arglist__24788);
arglist__24788 = cljs.core.next(arglist__24788);
var val = cljs.core.first(arglist__24788);
var vals = cljs.core.rest(arglist__24788);
return G__24783__delegate(tcoll,val,vals);
});
G__24783.cljs$core$IFn$_invoke$arity$variadic = G__24783__delegate;
return G__24783;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24789 = null;
if (arguments.length > 2) {
var G__24790__i = 0, G__24790__a = new Array(arguments.length -  2);
while (G__24790__i < G__24790__a.length) {G__24790__a[G__24790__i] = arguments[G__24790__i + 2]; ++G__24790__i;}
G__24789 = new cljs.core.IndexedSeq(G__24790__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a17076 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a17076);
} else {
var G__25001 = a17076;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25001) : f.call(null,G__25001));
}
} else {
var b17077 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a17076,b17077);
} else {
var G__25002 = a17076;
var G__25003 = b17077;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25002,G__25003) : f.call(null,G__25002,G__25003));
}
} else {
var c17078 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a17076,b17077,c17078);
} else {
var G__25004 = a17076;
var G__25005 = b17077;
var G__25006 = c17078;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25004,G__25005,G__25006) : f.call(null,G__25004,G__25005,G__25006));
}
} else {
var d17079 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a17076,b17077,c17078,d17079);
} else {
var G__25007 = a17076;
var G__25008 = b17077;
var G__25009 = c17078;
var G__25010 = d17079;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25007,G__25008,G__25009,G__25010) : f.call(null,G__25007,G__25008,G__25009,G__25010));
}
} else {
var e17080 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a17076,b17077,c17078,d17079,e17080);
} else {
var G__25011 = a17076;
var G__25012 = b17077;
var G__25013 = c17078;
var G__25014 = d17079;
var G__25015 = e17080;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25011,G__25012,G__25013,G__25014,G__25015) : f.call(null,G__25011,G__25012,G__25013,G__25014,G__25015));
}
} else {
var f17081 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a17076,b17077,c17078,d17079,e17080,f17081);
} else {
var G__25016 = a17076;
var G__25017 = b17077;
var G__25018 = c17078;
var G__25019 = d17079;
var G__25020 = e17080;
var G__25021 = f17081;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25016,G__25017,G__25018,G__25019,G__25020,G__25021) : f.call(null,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021));
}
} else {
var g17082 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a17076,b17077,c17078,d17079,e17080,f17081,g17082);
} else {
var G__25022 = a17076;
var G__25023 = b17077;
var G__25024 = c17078;
var G__25025 = d17079;
var G__25026 = e17080;
var G__25027 = f17081;
var G__25028 = g17082;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028) : f.call(null,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028));
}
} else {
var h17083 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083);
} else {
var G__25029 = a17076;
var G__25030 = b17077;
var G__25031 = c17078;
var G__25032 = d17079;
var G__25033 = e17080;
var G__25034 = f17081;
var G__25035 = g17082;
var G__25036 = h17083;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036) : f.call(null,G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036));
}
} else {
var i17084 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084);
} else {
var G__25037 = a17076;
var G__25038 = b17077;
var G__25039 = c17078;
var G__25040 = d17079;
var G__25041 = e17080;
var G__25042 = f17081;
var G__25043 = g17082;
var G__25044 = h17083;
var G__25045 = i17084;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045) : f.call(null,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045));
}
} else {
var j17085 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085);
} else {
var G__25046 = a17076;
var G__25047 = b17077;
var G__25048 = c17078;
var G__25049 = d17079;
var G__25050 = e17080;
var G__25051 = f17081;
var G__25052 = g17082;
var G__25053 = h17083;
var G__25054 = i17084;
var G__25055 = j17085;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__25046,G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055) : f.call(null,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055));
}
} else {
var k17086 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086);
} else {
var G__25056 = a17076;
var G__25057 = b17077;
var G__25058 = c17078;
var G__25059 = d17079;
var G__25060 = e17080;
var G__25061 = f17081;
var G__25062 = g17082;
var G__25063 = h17083;
var G__25064 = i17084;
var G__25065 = j17085;
var G__25066 = k17086;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066) : f.call(null,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066));
}
} else {
var l17087 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087);
} else {
var G__25067 = a17076;
var G__25068 = b17077;
var G__25069 = c17078;
var G__25070 = d17079;
var G__25071 = e17080;
var G__25072 = f17081;
var G__25073 = g17082;
var G__25074 = h17083;
var G__25075 = i17084;
var G__25076 = j17085;
var G__25077 = k17086;
var G__25078 = l17087;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078) : f.call(null,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078));
}
} else {
var m17088 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088);
} else {
var G__25079 = a17076;
var G__25080 = b17077;
var G__25081 = c17078;
var G__25082 = d17079;
var G__25083 = e17080;
var G__25084 = f17081;
var G__25085 = g17082;
var G__25086 = h17083;
var G__25087 = i17084;
var G__25088 = j17085;
var G__25089 = k17086;
var G__25090 = l17087;
var G__25091 = m17088;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091) : f.call(null,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091));
}
} else {
var n17089 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089);
} else {
var G__25092 = a17076;
var G__25093 = b17077;
var G__25094 = c17078;
var G__25095 = d17079;
var G__25096 = e17080;
var G__25097 = f17081;
var G__25098 = g17082;
var G__25099 = h17083;
var G__25100 = i17084;
var G__25101 = j17085;
var G__25102 = k17086;
var G__25103 = l17087;
var G__25104 = m17088;
var G__25105 = n17089;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105) : f.call(null,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105));
}
} else {
var o17090 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090);
} else {
var G__25106 = a17076;
var G__25107 = b17077;
var G__25108 = c17078;
var G__25109 = d17079;
var G__25110 = e17080;
var G__25111 = f17081;
var G__25112 = g17082;
var G__25113 = h17083;
var G__25114 = i17084;
var G__25115 = j17085;
var G__25116 = k17086;
var G__25117 = l17087;
var G__25118 = m17088;
var G__25119 = n17089;
var G__25120 = o17090;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120) : f.call(null,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120));
}
} else {
var p17091 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091);
} else {
var G__25121 = a17076;
var G__25122 = b17077;
var G__25123 = c17078;
var G__25124 = d17079;
var G__25125 = e17080;
var G__25126 = f17081;
var G__25127 = g17082;
var G__25128 = h17083;
var G__25129 = i17084;
var G__25130 = j17085;
var G__25131 = k17086;
var G__25132 = l17087;
var G__25133 = m17088;
var G__25134 = n17089;
var G__25135 = o17090;
var G__25136 = p17091;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136) : f.call(null,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136));
}
} else {
var q17092 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092);
} else {
var G__25137 = a17076;
var G__25138 = b17077;
var G__25139 = c17078;
var G__25140 = d17079;
var G__25141 = e17080;
var G__25142 = f17081;
var G__25143 = g17082;
var G__25144 = h17083;
var G__25145 = i17084;
var G__25146 = j17085;
var G__25147 = k17086;
var G__25148 = l17087;
var G__25149 = m17088;
var G__25150 = n17089;
var G__25151 = o17090;
var G__25152 = p17091;
var G__25153 = q17092;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153) : f.call(null,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153));
}
} else {
var r17093 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093);
} else {
var G__25154 = a17076;
var G__25155 = b17077;
var G__25156 = c17078;
var G__25157 = d17079;
var G__25158 = e17080;
var G__25159 = f17081;
var G__25160 = g17082;
var G__25161 = h17083;
var G__25162 = i17084;
var G__25163 = j17085;
var G__25164 = k17086;
var G__25165 = l17087;
var G__25166 = m17088;
var G__25167 = n17089;
var G__25168 = o17090;
var G__25169 = p17091;
var G__25170 = q17092;
var G__25171 = r17093;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171) : f.call(null,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171));
}
} else {
var s17094 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094);
} else {
var G__25172 = a17076;
var G__25173 = b17077;
var G__25174 = c17078;
var G__25175 = d17079;
var G__25176 = e17080;
var G__25177 = f17081;
var G__25178 = g17082;
var G__25179 = h17083;
var G__25180 = i17084;
var G__25181 = j17085;
var G__25182 = k17086;
var G__25183 = l17087;
var G__25184 = m17088;
var G__25185 = n17089;
var G__25186 = o17090;
var G__25187 = p17091;
var G__25188 = q17092;
var G__25189 = r17093;
var G__25190 = s17094;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190) : f.call(null,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190));
}
} else {
var t17095 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094,t17095);
} else {
var G__25191 = a17076;
var G__25192 = b17077;
var G__25193 = c17078;
var G__25194 = d17079;
var G__25195 = e17080;
var G__25196 = f17081;
var G__25197 = g17082;
var G__25198 = h17083;
var G__25199 = i17084;
var G__25200 = j17085;
var G__25201 = k17086;
var G__25202 = l17087;
var G__25203 = m17088;
var G__25204 = n17089;
var G__25205 = o17090;
var G__25206 = p17091;
var G__25207 = q17092;
var G__25208 = r17093;
var G__25209 = s17094;
var G__25210 = t17095;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210) : f.call(null,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25211__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25211 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25212__i = 0, G__25212__a = new Array(arguments.length -  5);
while (G__25212__i < G__25212__a.length) {G__25212__a[G__25212__i] = arguments[G__25212__i + 5]; ++G__25212__i;}
  args = new cljs.core.IndexedSeq(G__25212__a,0);
} 
return G__25211__delegate.call(this,f,a,b,c,d,args);};
G__25211.cljs$lang$maxFixedArity = 5;
G__25211.cljs$lang$applyTo = (function (arglist__25213){
var f = cljs.core.first(arglist__25213);
arglist__25213 = cljs.core.next(arglist__25213);
var a = cljs.core.first(arglist__25213);
arglist__25213 = cljs.core.next(arglist__25213);
var b = cljs.core.first(arglist__25213);
arglist__25213 = cljs.core.next(arglist__25213);
var c = cljs.core.first(arglist__25213);
arglist__25213 = cljs.core.next(arglist__25213);
var d = cljs.core.first(arglist__25213);
var args = cljs.core.rest(arglist__25213);
return G__25211__delegate(f,a,b,c,d,args);
});
G__25211.cljs$core$IFn$_invoke$arity$variadic = G__25211__delegate;
return G__25211;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25214 = null;
if (arguments.length > 5) {
var G__25215__i = 0, G__25215__a = new Array(arguments.length -  5);
while (G__25215__i < G__25215__a.length) {G__25215__a[G__25215__i] = arguments[G__25215__i + 5]; ++G__25215__i;}
G__25214 = new cljs.core.IndexedSeq(G__25215__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25231 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25231) : f.call(null,G__25231));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25232 = cljs.core.meta(obj);
var G__25233 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25232,G__25233) : f.call(null,G__25232,G__25233));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25234 = cljs.core.meta(obj);
var G__25235 = a;
var G__25236 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25234,G__25235,G__25236) : f.call(null,G__25234,G__25235,G__25236));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25237 = cljs.core.meta(obj);
var G__25238 = a;
var G__25239 = b;
var G__25240 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25237,G__25238,G__25239,G__25240) : f.call(null,G__25237,G__25238,G__25239,G__25240));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25241 = cljs.core.meta(obj);
var G__25242 = a;
var G__25243 = b;
var G__25244 = c;
var G__25245 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25241,G__25242,G__25243,G__25244,G__25245) : f.call(null,G__25241,G__25242,G__25243,G__25244,G__25245));
})());
});
var vary_meta__7 = (function() { 
var G__25246__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25246 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25247__i = 0, G__25247__a = new Array(arguments.length -  6);
while (G__25247__i < G__25247__a.length) {G__25247__a[G__25247__i] = arguments[G__25247__i + 6]; ++G__25247__i;}
  args = new cljs.core.IndexedSeq(G__25247__a,0);
} 
return G__25246__delegate.call(this,obj,f,a,b,c,d,args);};
G__25246.cljs$lang$maxFixedArity = 6;
G__25246.cljs$lang$applyTo = (function (arglist__25248){
var obj = cljs.core.first(arglist__25248);
arglist__25248 = cljs.core.next(arglist__25248);
var f = cljs.core.first(arglist__25248);
arglist__25248 = cljs.core.next(arglist__25248);
var a = cljs.core.first(arglist__25248);
arglist__25248 = cljs.core.next(arglist__25248);
var b = cljs.core.first(arglist__25248);
arglist__25248 = cljs.core.next(arglist__25248);
var c = cljs.core.first(arglist__25248);
arglist__25248 = cljs.core.next(arglist__25248);
var d = cljs.core.first(arglist__25248);
var args = cljs.core.rest(arglist__25248);
return G__25246__delegate(obj,f,a,b,c,d,args);
});
G__25246.cljs$core$IFn$_invoke$arity$variadic = G__25246__delegate;
return G__25246;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25249 = null;
if (arguments.length > 6) {
var G__25250__i = 0, G__25250__a = new Array(arguments.length -  6);
while (G__25250__i < G__25250__a.length) {G__25250__a[G__25250__i] = arguments[G__25250__i + 6]; ++G__25250__i;}
G__25249 = new cljs.core.IndexedSeq(G__25250__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25251__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25251 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25252__i = 0, G__25252__a = new Array(arguments.length -  2);
while (G__25252__i < G__25252__a.length) {G__25252__a[G__25252__i] = arguments[G__25252__i + 2]; ++G__25252__i;}
  more = new cljs.core.IndexedSeq(G__25252__a,0);
} 
return G__25251__delegate.call(this,x,y,more);};
G__25251.cljs$lang$maxFixedArity = 2;
G__25251.cljs$lang$applyTo = (function (arglist__25253){
var x = cljs.core.first(arglist__25253);
arglist__25253 = cljs.core.next(arglist__25253);
var y = cljs.core.first(arglist__25253);
var more = cljs.core.rest(arglist__25253);
return G__25251__delegate(x,y,more);
});
G__25251.cljs$core$IFn$_invoke$arity$variadic = G__25251__delegate;
return G__25251;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25254 = null;
if (arguments.length > 2) {
var G__25255__i = 0, G__25255__a = new Array(arguments.length -  2);
while (G__25255__i < G__25255__a.length) {G__25255__a[G__25255__i] = arguments[G__25255__i + 2]; ++G__25255__i;}
G__25254 = new cljs.core.IndexedSeq(G__25255__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25259 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25259 = (function (nil_iter,meta25260){
this.nil_iter = nil_iter;
this.meta25260 = meta25260;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25259.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25259.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25259.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25259.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25261){
var self__ = this;
var _25261__$1 = this;
return self__.meta25260;
});

cljs.core.t25259.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25261,meta25260__$1){
var self__ = this;
var _25261__$1 = this;
return (new cljs.core.t25259(self__.nil_iter,meta25260__$1));
});

cljs.core.t25259.cljs$lang$type = true;

cljs.core.t25259.cljs$lang$ctorStr = "cljs.core/t25259";

cljs.core.t25259.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/t25259");
});

cljs.core.__GT_t25259 = (function __GT_t25259(nil_iter__$1,meta25260){
return (new cljs.core.t25259(nil_iter__$1,meta25260));
});

}

return (new cljs.core.t25259(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return self__.iter.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25262 = lt;
var G__25263 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25262,G__25263) : self__.xform.call(null,G__25262,G__25263));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25264 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25264) : self__.xform.call(null,G__25264));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25266 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25266) : xform.call(null,G__25266));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25268 = cljs.core.next(iters__$1);
iters__$1 = G__25268;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__17032__auto___25269 = self__.iters.length;
var i_25270 = (0);
while(true){
if((i_25270 < n__17032__auto___25269)){
(self__.nexts[i_25270] = (self__.iters[i_25270]).next());

var G__25271 = (i_25270 + (1));
i_25270 = G__25271;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return this$.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25267 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25267) : self__.xform.call(null,G__25267));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25276 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25276) : xform.call(null,G__25276));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25277_25281 = cljs.core.seq(colls);
var chunk__25278_25282 = null;
var count__25279_25283 = (0);
var i__25280_25284 = (0);
while(true){
if((i__25280_25284 < count__25279_25283)){
var coll_25285 = chunk__25278_25282.cljs$core$IIndexed$_nth$arity$2(null,i__25280_25284);
iters.push(cljs.core.iter(coll_25285));

var G__25286 = seq__25277_25281;
var G__25287 = chunk__25278_25282;
var G__25288 = count__25279_25283;
var G__25289 = (i__25280_25284 + (1));
seq__25277_25281 = G__25286;
chunk__25278_25282 = G__25287;
count__25279_25283 = G__25288;
i__25280_25284 = G__25289;
continue;
} else {
var temp__4126__auto___25290 = cljs.core.seq(seq__25277_25281);
if(temp__4126__auto___25290){
var seq__25277_25291__$1 = temp__4126__auto___25290;
if(cljs.core.chunked_seq_QMARK_(seq__25277_25291__$1)){
var c__16932__auto___25292 = cljs.core.chunk_first(seq__25277_25291__$1);
var G__25293 = cljs.core.chunk_rest(seq__25277_25291__$1);
var G__25294 = c__16932__auto___25292;
var G__25295 = cljs.core.count(c__16932__auto___25292);
var G__25296 = (0);
seq__25277_25281 = G__25293;
chunk__25278_25282 = G__25294;
count__25279_25283 = G__25295;
i__25280_25284 = G__25296;
continue;
} else {
var coll_25297 = cljs.core.first(seq__25277_25291__$1);
iters.push(cljs.core.iter(coll_25297));

var G__25298 = cljs.core.next(seq__25277_25291__$1);
var G__25299 = null;
var G__25300 = (0);
var G__25301 = (0);
seq__25277_25281 = G__25298;
chunk__25278_25282 = G__25299;
count__25279_25283 = G__25300;
i__25280_25284 = G__25301;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__16145__auto__ = cljs.core.seq(coll);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25302__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25302 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25303__i = 0, G__25303__a = new Array(arguments.length -  2);
while (G__25303__i < G__25303__a.length) {G__25303__a[G__25303__i] = arguments[G__25303__i + 2]; ++G__25303__i;}
  colls = new cljs.core.IndexedSeq(G__25303__a,0);
} 
return G__25302__delegate.call(this,xform,coll,colls);};
G__25302.cljs$lang$maxFixedArity = 2;
G__25302.cljs$lang$applyTo = (function (arglist__25304){
var xform = cljs.core.first(arglist__25304);
arglist__25304 = cljs.core.next(arglist__25304);
var coll = cljs.core.first(arglist__25304);
var colls = cljs.core.rest(arglist__25304);
return G__25302__delegate(xform,coll,colls);
});
G__25302.cljs$core$IFn$_invoke$arity$variadic = G__25302__delegate;
return G__25302;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25305 = null;
if (arguments.length > 2) {
var G__25306__i = 0, G__25306__a = new Array(arguments.length -  2);
while (G__25306__i < G__25306__a.length) {G__25306__a[G__25306__i] = arguments[G__25306__i + 2]; ++G__25306__i;}
G__25305 = new cljs.core.IndexedSeq(G__25306__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25308 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25308) : pred.call(null,G__25308));
})())){
var G__25309 = pred;
var G__25310 = cljs.core.next(coll);
pred = G__25309;
coll = G__25310;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__16145__auto__ = (function (){var G__25314 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25314) : pred.call(null,G__25314));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__25315 = pred;
var G__25316 = cljs.core.next(coll);
pred = G__25315;
coll = G__25316;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25323 = null;
var G__25323__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25323__1 = (function (x){
return cljs.core.not((function (){var G__25320 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25320) : f.call(null,G__25320));
})());
});
var G__25323__2 = (function (x,y){
return cljs.core.not((function (){var G__25321 = x;
var G__25322 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25321,G__25322) : f.call(null,G__25321,G__25322));
})());
});
var G__25323__3 = (function() { 
var G__25324__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25324 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25325__i = 0, G__25325__a = new Array(arguments.length -  2);
while (G__25325__i < G__25325__a.length) {G__25325__a[G__25325__i] = arguments[G__25325__i + 2]; ++G__25325__i;}
  zs = new cljs.core.IndexedSeq(G__25325__a,0);
} 
return G__25324__delegate.call(this,x,y,zs);};
G__25324.cljs$lang$maxFixedArity = 2;
G__25324.cljs$lang$applyTo = (function (arglist__25326){
var x = cljs.core.first(arglist__25326);
arglist__25326 = cljs.core.next(arglist__25326);
var y = cljs.core.first(arglist__25326);
var zs = cljs.core.rest(arglist__25326);
return G__25324__delegate(x,y,zs);
});
G__25324.cljs$core$IFn$_invoke$arity$variadic = G__25324__delegate;
return G__25324;
})()
;
G__25323 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25323__0.call(this);
case 1:
return G__25323__1.call(this,x);
case 2:
return G__25323__2.call(this,x,y);
default:
var G__25327 = null;
if (arguments.length > 2) {
var G__25328__i = 0, G__25328__a = new Array(arguments.length -  2);
while (G__25328__i < G__25328__a.length) {G__25328__a[G__25328__i] = arguments[G__25328__i + 2]; ++G__25328__i;}
G__25327 = new cljs.core.IndexedSeq(G__25328__a,0);
}
return G__25323__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25323.cljs$lang$maxFixedArity = 2;
G__25323.cljs$lang$applyTo = G__25323__3.cljs$lang$applyTo;
G__25323.cljs$core$IFn$_invoke$arity$0 = G__25323__0;
G__25323.cljs$core$IFn$_invoke$arity$1 = G__25323__1;
G__25323.cljs$core$IFn$_invoke$arity$2 = G__25323__2;
G__25323.cljs$core$IFn$_invoke$arity$variadic = G__25323__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25323;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25329__delegate = function (args){
return x;
};
var G__25329 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25330__i = 0, G__25330__a = new Array(arguments.length -  0);
while (G__25330__i < G__25330__a.length) {G__25330__a[G__25330__i] = arguments[G__25330__i + 0]; ++G__25330__i;}
  args = new cljs.core.IndexedSeq(G__25330__a,0);
} 
return G__25329__delegate.call(this,args);};
G__25329.cljs$lang$maxFixedArity = 0;
G__25329.cljs$lang$applyTo = (function (arglist__25331){
var args = cljs.core.seq(arglist__25331);
return G__25329__delegate(args);
});
G__25329.cljs$core$IFn$_invoke$arity$variadic = G__25329__delegate;
return G__25329;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25386 = null;
var G__25386__0 = (function (){
var G__25359 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25359) : f.call(null,G__25359));
});
var G__25386__1 = (function (x){
var G__25360 = (function (){var G__25361 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25361) : g.call(null,G__25361));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25360) : f.call(null,G__25360));
});
var G__25386__2 = (function (x,y){
var G__25362 = (function (){var G__25363 = x;
var G__25364 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25363,G__25364) : g.call(null,G__25363,G__25364));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25362) : f.call(null,G__25362));
});
var G__25386__3 = (function (x,y,z){
var G__25365 = (function (){var G__25366 = x;
var G__25367 = y;
var G__25368 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25366,G__25367,G__25368) : g.call(null,G__25366,G__25367,G__25368));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25365) : f.call(null,G__25365));
});
var G__25386__4 = (function() { 
var G__25387__delegate = function (x,y,z,args){
var G__25369 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25369) : f.call(null,G__25369));
};
var G__25387 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25388__i = 0, G__25388__a = new Array(arguments.length -  3);
while (G__25388__i < G__25388__a.length) {G__25388__a[G__25388__i] = arguments[G__25388__i + 3]; ++G__25388__i;}
  args = new cljs.core.IndexedSeq(G__25388__a,0);
} 
return G__25387__delegate.call(this,x,y,z,args);};
G__25387.cljs$lang$maxFixedArity = 3;
G__25387.cljs$lang$applyTo = (function (arglist__25389){
var x = cljs.core.first(arglist__25389);
arglist__25389 = cljs.core.next(arglist__25389);
var y = cljs.core.first(arglist__25389);
arglist__25389 = cljs.core.next(arglist__25389);
var z = cljs.core.first(arglist__25389);
var args = cljs.core.rest(arglist__25389);
return G__25387__delegate(x,y,z,args);
});
G__25387.cljs$core$IFn$_invoke$arity$variadic = G__25387__delegate;
return G__25387;
})()
;
G__25386 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25386__0.call(this);
case 1:
return G__25386__1.call(this,x);
case 2:
return G__25386__2.call(this,x,y);
case 3:
return G__25386__3.call(this,x,y,z);
default:
var G__25390 = null;
if (arguments.length > 3) {
var G__25391__i = 0, G__25391__a = new Array(arguments.length -  3);
while (G__25391__i < G__25391__a.length) {G__25391__a[G__25391__i] = arguments[G__25391__i + 3]; ++G__25391__i;}
G__25390 = new cljs.core.IndexedSeq(G__25391__a,0);
}
return G__25386__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25386.cljs$lang$maxFixedArity = 3;
G__25386.cljs$lang$applyTo = G__25386__4.cljs$lang$applyTo;
G__25386.cljs$core$IFn$_invoke$arity$0 = G__25386__0;
G__25386.cljs$core$IFn$_invoke$arity$1 = G__25386__1;
G__25386.cljs$core$IFn$_invoke$arity$2 = G__25386__2;
G__25386.cljs$core$IFn$_invoke$arity$3 = G__25386__3;
G__25386.cljs$core$IFn$_invoke$arity$variadic = G__25386__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25386;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25392 = null;
var G__25392__0 = (function (){
var G__25370 = (function (){var G__25371 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25371) : g.call(null,G__25371));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25370) : f.call(null,G__25370));
});
var G__25392__1 = (function (x){
var G__25372 = (function (){var G__25373 = (function (){var G__25374 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25374) : h.call(null,G__25374));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25373) : g.call(null,G__25373));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25372) : f.call(null,G__25372));
});
var G__25392__2 = (function (x,y){
var G__25375 = (function (){var G__25376 = (function (){var G__25377 = x;
var G__25378 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25377,G__25378) : h.call(null,G__25377,G__25378));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25376) : g.call(null,G__25376));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25375) : f.call(null,G__25375));
});
var G__25392__3 = (function (x,y,z){
var G__25379 = (function (){var G__25380 = (function (){var G__25381 = x;
var G__25382 = y;
var G__25383 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25381,G__25382,G__25383) : h.call(null,G__25381,G__25382,G__25383));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25380) : g.call(null,G__25380));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25379) : f.call(null,G__25379));
});
var G__25392__4 = (function() { 
var G__25393__delegate = function (x,y,z,args){
var G__25384 = (function (){var G__25385 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25385) : g.call(null,G__25385));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25384) : f.call(null,G__25384));
};
var G__25393 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25394__i = 0, G__25394__a = new Array(arguments.length -  3);
while (G__25394__i < G__25394__a.length) {G__25394__a[G__25394__i] = arguments[G__25394__i + 3]; ++G__25394__i;}
  args = new cljs.core.IndexedSeq(G__25394__a,0);
} 
return G__25393__delegate.call(this,x,y,z,args);};
G__25393.cljs$lang$maxFixedArity = 3;
G__25393.cljs$lang$applyTo = (function (arglist__25395){
var x = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var y = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var z = cljs.core.first(arglist__25395);
var args = cljs.core.rest(arglist__25395);
return G__25393__delegate(x,y,z,args);
});
G__25393.cljs$core$IFn$_invoke$arity$variadic = G__25393__delegate;
return G__25393;
})()
;
G__25392 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25392__0.call(this);
case 1:
return G__25392__1.call(this,x);
case 2:
return G__25392__2.call(this,x,y);
case 3:
return G__25392__3.call(this,x,y,z);
default:
var G__25396 = null;
if (arguments.length > 3) {
var G__25397__i = 0, G__25397__a = new Array(arguments.length -  3);
while (G__25397__i < G__25397__a.length) {G__25397__a[G__25397__i] = arguments[G__25397__i + 3]; ++G__25397__i;}
G__25396 = new cljs.core.IndexedSeq(G__25397__a,0);
}
return G__25392__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25392.cljs$lang$maxFixedArity = 3;
G__25392.cljs$lang$applyTo = G__25392__4.cljs$lang$applyTo;
G__25392.cljs$core$IFn$_invoke$arity$0 = G__25392__0;
G__25392.cljs$core$IFn$_invoke$arity$1 = G__25392__1;
G__25392.cljs$core$IFn$_invoke$arity$2 = G__25392__2;
G__25392.cljs$core$IFn$_invoke$arity$3 = G__25392__3;
G__25392.cljs$core$IFn$_invoke$arity$variadic = G__25392__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25392;
})()
});
var comp__4 = (function() { 
var G__25398__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25399__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25400 = cljs.core.first(fs__$2).call(null,ret);
var G__25401 = cljs.core.next(fs__$2);
ret = G__25400;
fs__$2 = G__25401;
continue;
} else {
return ret;
}
break;
}
};
var G__25399 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25402__i = 0, G__25402__a = new Array(arguments.length -  0);
while (G__25402__i < G__25402__a.length) {G__25402__a[G__25402__i] = arguments[G__25402__i + 0]; ++G__25402__i;}
  args = new cljs.core.IndexedSeq(G__25402__a,0);
} 
return G__25399__delegate.call(this,args);};
G__25399.cljs$lang$maxFixedArity = 0;
G__25399.cljs$lang$applyTo = (function (arglist__25403){
var args = cljs.core.seq(arglist__25403);
return G__25399__delegate(args);
});
G__25399.cljs$core$IFn$_invoke$arity$variadic = G__25399__delegate;
return G__25399;
})()
;
;})(fs__$1))
};
var G__25398 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25404__i = 0, G__25404__a = new Array(arguments.length -  3);
while (G__25404__i < G__25404__a.length) {G__25404__a[G__25404__i] = arguments[G__25404__i + 3]; ++G__25404__i;}
  fs = new cljs.core.IndexedSeq(G__25404__a,0);
} 
return G__25398__delegate.call(this,f1,f2,f3,fs);};
G__25398.cljs$lang$maxFixedArity = 3;
G__25398.cljs$lang$applyTo = (function (arglist__25405){
var f1 = cljs.core.first(arglist__25405);
arglist__25405 = cljs.core.next(arglist__25405);
var f2 = cljs.core.first(arglist__25405);
arglist__25405 = cljs.core.next(arglist__25405);
var f3 = cljs.core.first(arglist__25405);
var fs = cljs.core.rest(arglist__25405);
return G__25398__delegate(f1,f2,f3,fs);
});
G__25398.cljs$core$IFn$_invoke$arity$variadic = G__25398__delegate;
return G__25398;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25406 = null;
if (arguments.length > 3) {
var G__25407__i = 0, G__25407__a = new Array(arguments.length -  3);
while (G__25407__i < G__25407__a.length) {G__25407__a[G__25407__i] = arguments[G__25407__i + 3]; ++G__25407__i;}
G__25406 = new cljs.core.IndexedSeq(G__25407__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25492 = null;
var G__25492__0 = (function (){
var G__25450 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25450) : f.call(null,G__25450));
});
var G__25492__1 = (function (x){
var G__25451 = arg1;
var G__25452 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25451,G__25452) : f.call(null,G__25451,G__25452));
});
var G__25492__2 = (function (x,y){
var G__25453 = arg1;
var G__25454 = x;
var G__25455 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25453,G__25454,G__25455) : f.call(null,G__25453,G__25454,G__25455));
});
var G__25492__3 = (function (x,y,z){
var G__25456 = arg1;
var G__25457 = x;
var G__25458 = y;
var G__25459 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25456,G__25457,G__25458,G__25459) : f.call(null,G__25456,G__25457,G__25458,G__25459));
});
var G__25492__4 = (function() { 
var G__25493__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25493 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25494__i = 0, G__25494__a = new Array(arguments.length -  3);
while (G__25494__i < G__25494__a.length) {G__25494__a[G__25494__i] = arguments[G__25494__i + 3]; ++G__25494__i;}
  args = new cljs.core.IndexedSeq(G__25494__a,0);
} 
return G__25493__delegate.call(this,x,y,z,args);};
G__25493.cljs$lang$maxFixedArity = 3;
G__25493.cljs$lang$applyTo = (function (arglist__25495){
var x = cljs.core.first(arglist__25495);
arglist__25495 = cljs.core.next(arglist__25495);
var y = cljs.core.first(arglist__25495);
arglist__25495 = cljs.core.next(arglist__25495);
var z = cljs.core.first(arglist__25495);
var args = cljs.core.rest(arglist__25495);
return G__25493__delegate(x,y,z,args);
});
G__25493.cljs$core$IFn$_invoke$arity$variadic = G__25493__delegate;
return G__25493;
})()
;
G__25492 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25492__0.call(this);
case 1:
return G__25492__1.call(this,x);
case 2:
return G__25492__2.call(this,x,y);
case 3:
return G__25492__3.call(this,x,y,z);
default:
var G__25496 = null;
if (arguments.length > 3) {
var G__25497__i = 0, G__25497__a = new Array(arguments.length -  3);
while (G__25497__i < G__25497__a.length) {G__25497__a[G__25497__i] = arguments[G__25497__i + 3]; ++G__25497__i;}
G__25496 = new cljs.core.IndexedSeq(G__25497__a,0);
}
return G__25492__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25492.cljs$lang$maxFixedArity = 3;
G__25492.cljs$lang$applyTo = G__25492__4.cljs$lang$applyTo;
G__25492.cljs$core$IFn$_invoke$arity$0 = G__25492__0;
G__25492.cljs$core$IFn$_invoke$arity$1 = G__25492__1;
G__25492.cljs$core$IFn$_invoke$arity$2 = G__25492__2;
G__25492.cljs$core$IFn$_invoke$arity$3 = G__25492__3;
G__25492.cljs$core$IFn$_invoke$arity$variadic = G__25492__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25492;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25498 = null;
var G__25498__0 = (function (){
var G__25460 = arg1;
var G__25461 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25460,G__25461) : f.call(null,G__25460,G__25461));
});
var G__25498__1 = (function (x){
var G__25462 = arg1;
var G__25463 = arg2;
var G__25464 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25462,G__25463,G__25464) : f.call(null,G__25462,G__25463,G__25464));
});
var G__25498__2 = (function (x,y){
var G__25465 = arg1;
var G__25466 = arg2;
var G__25467 = x;
var G__25468 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25465,G__25466,G__25467,G__25468) : f.call(null,G__25465,G__25466,G__25467,G__25468));
});
var G__25498__3 = (function (x,y,z){
var G__25469 = arg1;
var G__25470 = arg2;
var G__25471 = x;
var G__25472 = y;
var G__25473 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25469,G__25470,G__25471,G__25472,G__25473) : f.call(null,G__25469,G__25470,G__25471,G__25472,G__25473));
});
var G__25498__4 = (function() { 
var G__25499__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25499 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25500__i = 0, G__25500__a = new Array(arguments.length -  3);
while (G__25500__i < G__25500__a.length) {G__25500__a[G__25500__i] = arguments[G__25500__i + 3]; ++G__25500__i;}
  args = new cljs.core.IndexedSeq(G__25500__a,0);
} 
return G__25499__delegate.call(this,x,y,z,args);};
G__25499.cljs$lang$maxFixedArity = 3;
G__25499.cljs$lang$applyTo = (function (arglist__25501){
var x = cljs.core.first(arglist__25501);
arglist__25501 = cljs.core.next(arglist__25501);
var y = cljs.core.first(arglist__25501);
arglist__25501 = cljs.core.next(arglist__25501);
var z = cljs.core.first(arglist__25501);
var args = cljs.core.rest(arglist__25501);
return G__25499__delegate(x,y,z,args);
});
G__25499.cljs$core$IFn$_invoke$arity$variadic = G__25499__delegate;
return G__25499;
})()
;
G__25498 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25498__0.call(this);
case 1:
return G__25498__1.call(this,x);
case 2:
return G__25498__2.call(this,x,y);
case 3:
return G__25498__3.call(this,x,y,z);
default:
var G__25502 = null;
if (arguments.length > 3) {
var G__25503__i = 0, G__25503__a = new Array(arguments.length -  3);
while (G__25503__i < G__25503__a.length) {G__25503__a[G__25503__i] = arguments[G__25503__i + 3]; ++G__25503__i;}
G__25502 = new cljs.core.IndexedSeq(G__25503__a,0);
}
return G__25498__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25498.cljs$lang$maxFixedArity = 3;
G__25498.cljs$lang$applyTo = G__25498__4.cljs$lang$applyTo;
G__25498.cljs$core$IFn$_invoke$arity$0 = G__25498__0;
G__25498.cljs$core$IFn$_invoke$arity$1 = G__25498__1;
G__25498.cljs$core$IFn$_invoke$arity$2 = G__25498__2;
G__25498.cljs$core$IFn$_invoke$arity$3 = G__25498__3;
G__25498.cljs$core$IFn$_invoke$arity$variadic = G__25498__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25498;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25504 = null;
var G__25504__0 = (function (){
var G__25474 = arg1;
var G__25475 = arg2;
var G__25476 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25474,G__25475,G__25476) : f.call(null,G__25474,G__25475,G__25476));
});
var G__25504__1 = (function (x){
var G__25477 = arg1;
var G__25478 = arg2;
var G__25479 = arg3;
var G__25480 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25477,G__25478,G__25479,G__25480) : f.call(null,G__25477,G__25478,G__25479,G__25480));
});
var G__25504__2 = (function (x,y){
var G__25481 = arg1;
var G__25482 = arg2;
var G__25483 = arg3;
var G__25484 = x;
var G__25485 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25481,G__25482,G__25483,G__25484,G__25485) : f.call(null,G__25481,G__25482,G__25483,G__25484,G__25485));
});
var G__25504__3 = (function (x,y,z){
var G__25486 = arg1;
var G__25487 = arg2;
var G__25488 = arg3;
var G__25489 = x;
var G__25490 = y;
var G__25491 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25486,G__25487,G__25488,G__25489,G__25490,G__25491) : f.call(null,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491));
});
var G__25504__4 = (function() { 
var G__25505__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25505 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25506__i = 0, G__25506__a = new Array(arguments.length -  3);
while (G__25506__i < G__25506__a.length) {G__25506__a[G__25506__i] = arguments[G__25506__i + 3]; ++G__25506__i;}
  args = new cljs.core.IndexedSeq(G__25506__a,0);
} 
return G__25505__delegate.call(this,x,y,z,args);};
G__25505.cljs$lang$maxFixedArity = 3;
G__25505.cljs$lang$applyTo = (function (arglist__25507){
var x = cljs.core.first(arglist__25507);
arglist__25507 = cljs.core.next(arglist__25507);
var y = cljs.core.first(arglist__25507);
arglist__25507 = cljs.core.next(arglist__25507);
var z = cljs.core.first(arglist__25507);
var args = cljs.core.rest(arglist__25507);
return G__25505__delegate(x,y,z,args);
});
G__25505.cljs$core$IFn$_invoke$arity$variadic = G__25505__delegate;
return G__25505;
})()
;
G__25504 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25504__0.call(this);
case 1:
return G__25504__1.call(this,x);
case 2:
return G__25504__2.call(this,x,y);
case 3:
return G__25504__3.call(this,x,y,z);
default:
var G__25508 = null;
if (arguments.length > 3) {
var G__25509__i = 0, G__25509__a = new Array(arguments.length -  3);
while (G__25509__i < G__25509__a.length) {G__25509__a[G__25509__i] = arguments[G__25509__i + 3]; ++G__25509__i;}
G__25508 = new cljs.core.IndexedSeq(G__25509__a,0);
}
return G__25504__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25504.cljs$lang$maxFixedArity = 3;
G__25504.cljs$lang$applyTo = G__25504__4.cljs$lang$applyTo;
G__25504.cljs$core$IFn$_invoke$arity$0 = G__25504__0;
G__25504.cljs$core$IFn$_invoke$arity$1 = G__25504__1;
G__25504.cljs$core$IFn$_invoke$arity$2 = G__25504__2;
G__25504.cljs$core$IFn$_invoke$arity$3 = G__25504__3;
G__25504.cljs$core$IFn$_invoke$arity$variadic = G__25504__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25504;
})()
});
var partial__5 = (function() { 
var G__25510__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25511__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25511 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25512__i = 0, G__25512__a = new Array(arguments.length -  0);
while (G__25512__i < G__25512__a.length) {G__25512__a[G__25512__i] = arguments[G__25512__i + 0]; ++G__25512__i;}
  args = new cljs.core.IndexedSeq(G__25512__a,0);
} 
return G__25511__delegate.call(this,args);};
G__25511.cljs$lang$maxFixedArity = 0;
G__25511.cljs$lang$applyTo = (function (arglist__25513){
var args = cljs.core.seq(arglist__25513);
return G__25511__delegate(args);
});
G__25511.cljs$core$IFn$_invoke$arity$variadic = G__25511__delegate;
return G__25511;
})()
;
};
var G__25510 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25514__i = 0, G__25514__a = new Array(arguments.length -  4);
while (G__25514__i < G__25514__a.length) {G__25514__a[G__25514__i] = arguments[G__25514__i + 4]; ++G__25514__i;}
  more = new cljs.core.IndexedSeq(G__25514__a,0);
} 
return G__25510__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25510.cljs$lang$maxFixedArity = 4;
G__25510.cljs$lang$applyTo = (function (arglist__25515){
var f = cljs.core.first(arglist__25515);
arglist__25515 = cljs.core.next(arglist__25515);
var arg1 = cljs.core.first(arglist__25515);
arglist__25515 = cljs.core.next(arglist__25515);
var arg2 = cljs.core.first(arglist__25515);
arglist__25515 = cljs.core.next(arglist__25515);
var arg3 = cljs.core.first(arglist__25515);
var more = cljs.core.rest(arglist__25515);
return G__25510__delegate(f,arg1,arg2,arg3,more);
});
G__25510.cljs$core$IFn$_invoke$arity$variadic = G__25510__delegate;
return G__25510;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25516 = null;
if (arguments.length > 4) {
var G__25517__i = 0, G__25517__a = new Array(arguments.length -  4);
while (G__25517__i < G__25517__a.length) {G__25517__a[G__25517__i] = arguments[G__25517__i + 4]; ++G__25517__i;}
G__25516 = new cljs.core.IndexedSeq(G__25517__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25550 = null;
var G__25550__1 = (function (a){
var G__25534 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25534) : f.call(null,G__25534));
});
var G__25550__2 = (function (a,b){
var G__25535 = (((a == null))?x:a);
var G__25536 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25535,G__25536) : f.call(null,G__25535,G__25536));
});
var G__25550__3 = (function (a,b,c){
var G__25537 = (((a == null))?x:a);
var G__25538 = b;
var G__25539 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25537,G__25538,G__25539) : f.call(null,G__25537,G__25538,G__25539));
});
var G__25550__4 = (function() { 
var G__25551__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25551 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25552__i = 0, G__25552__a = new Array(arguments.length -  3);
while (G__25552__i < G__25552__a.length) {G__25552__a[G__25552__i] = arguments[G__25552__i + 3]; ++G__25552__i;}
  ds = new cljs.core.IndexedSeq(G__25552__a,0);
} 
return G__25551__delegate.call(this,a,b,c,ds);};
G__25551.cljs$lang$maxFixedArity = 3;
G__25551.cljs$lang$applyTo = (function (arglist__25553){
var a = cljs.core.first(arglist__25553);
arglist__25553 = cljs.core.next(arglist__25553);
var b = cljs.core.first(arglist__25553);
arglist__25553 = cljs.core.next(arglist__25553);
var c = cljs.core.first(arglist__25553);
var ds = cljs.core.rest(arglist__25553);
return G__25551__delegate(a,b,c,ds);
});
G__25551.cljs$core$IFn$_invoke$arity$variadic = G__25551__delegate;
return G__25551;
})()
;
G__25550 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25550__1.call(this,a);
case 2:
return G__25550__2.call(this,a,b);
case 3:
return G__25550__3.call(this,a,b,c);
default:
var G__25554 = null;
if (arguments.length > 3) {
var G__25555__i = 0, G__25555__a = new Array(arguments.length -  3);
while (G__25555__i < G__25555__a.length) {G__25555__a[G__25555__i] = arguments[G__25555__i + 3]; ++G__25555__i;}
G__25554 = new cljs.core.IndexedSeq(G__25555__a,0);
}
return G__25550__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25550.cljs$lang$maxFixedArity = 3;
G__25550.cljs$lang$applyTo = G__25550__4.cljs$lang$applyTo;
G__25550.cljs$core$IFn$_invoke$arity$1 = G__25550__1;
G__25550.cljs$core$IFn$_invoke$arity$2 = G__25550__2;
G__25550.cljs$core$IFn$_invoke$arity$3 = G__25550__3;
G__25550.cljs$core$IFn$_invoke$arity$variadic = G__25550__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25550;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25556 = null;
var G__25556__2 = (function (a,b){
var G__25540 = (((a == null))?x:a);
var G__25541 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25540,G__25541) : f.call(null,G__25540,G__25541));
});
var G__25556__3 = (function (a,b,c){
var G__25542 = (((a == null))?x:a);
var G__25543 = (((b == null))?y:b);
var G__25544 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25542,G__25543,G__25544) : f.call(null,G__25542,G__25543,G__25544));
});
var G__25556__4 = (function() { 
var G__25557__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25557 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25558__i = 0, G__25558__a = new Array(arguments.length -  3);
while (G__25558__i < G__25558__a.length) {G__25558__a[G__25558__i] = arguments[G__25558__i + 3]; ++G__25558__i;}
  ds = new cljs.core.IndexedSeq(G__25558__a,0);
} 
return G__25557__delegate.call(this,a,b,c,ds);};
G__25557.cljs$lang$maxFixedArity = 3;
G__25557.cljs$lang$applyTo = (function (arglist__25559){
var a = cljs.core.first(arglist__25559);
arglist__25559 = cljs.core.next(arglist__25559);
var b = cljs.core.first(arglist__25559);
arglist__25559 = cljs.core.next(arglist__25559);
var c = cljs.core.first(arglist__25559);
var ds = cljs.core.rest(arglist__25559);
return G__25557__delegate(a,b,c,ds);
});
G__25557.cljs$core$IFn$_invoke$arity$variadic = G__25557__delegate;
return G__25557;
})()
;
G__25556 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25556__2.call(this,a,b);
case 3:
return G__25556__3.call(this,a,b,c);
default:
var G__25560 = null;
if (arguments.length > 3) {
var G__25561__i = 0, G__25561__a = new Array(arguments.length -  3);
while (G__25561__i < G__25561__a.length) {G__25561__a[G__25561__i] = arguments[G__25561__i + 3]; ++G__25561__i;}
G__25560 = new cljs.core.IndexedSeq(G__25561__a,0);
}
return G__25556__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25556.cljs$lang$maxFixedArity = 3;
G__25556.cljs$lang$applyTo = G__25556__4.cljs$lang$applyTo;
G__25556.cljs$core$IFn$_invoke$arity$2 = G__25556__2;
G__25556.cljs$core$IFn$_invoke$arity$3 = G__25556__3;
G__25556.cljs$core$IFn$_invoke$arity$variadic = G__25556__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25556;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25562 = null;
var G__25562__2 = (function (a,b){
var G__25545 = (((a == null))?x:a);
var G__25546 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25545,G__25546) : f.call(null,G__25545,G__25546));
});
var G__25562__3 = (function (a,b,c){
var G__25547 = (((a == null))?x:a);
var G__25548 = (((b == null))?y:b);
var G__25549 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25547,G__25548,G__25549) : f.call(null,G__25547,G__25548,G__25549));
});
var G__25562__4 = (function() { 
var G__25563__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25563 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25564__i = 0, G__25564__a = new Array(arguments.length -  3);
while (G__25564__i < G__25564__a.length) {G__25564__a[G__25564__i] = arguments[G__25564__i + 3]; ++G__25564__i;}
  ds = new cljs.core.IndexedSeq(G__25564__a,0);
} 
return G__25563__delegate.call(this,a,b,c,ds);};
G__25563.cljs$lang$maxFixedArity = 3;
G__25563.cljs$lang$applyTo = (function (arglist__25565){
var a = cljs.core.first(arglist__25565);
arglist__25565 = cljs.core.next(arglist__25565);
var b = cljs.core.first(arglist__25565);
arglist__25565 = cljs.core.next(arglist__25565);
var c = cljs.core.first(arglist__25565);
var ds = cljs.core.rest(arglist__25565);
return G__25563__delegate(a,b,c,ds);
});
G__25563.cljs$core$IFn$_invoke$arity$variadic = G__25563__delegate;
return G__25563;
})()
;
G__25562 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25562__2.call(this,a,b);
case 3:
return G__25562__3.call(this,a,b,c);
default:
var G__25566 = null;
if (arguments.length > 3) {
var G__25567__i = 0, G__25567__a = new Array(arguments.length -  3);
while (G__25567__i < G__25567__a.length) {G__25567__a[G__25567__i] = arguments[G__25567__i + 3]; ++G__25567__i;}
G__25566 = new cljs.core.IndexedSeq(G__25567__a,0);
}
return G__25562__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25562.cljs$lang$maxFixedArity = 3;
G__25562.cljs$lang$applyTo = G__25562__4.cljs$lang$applyTo;
G__25562.cljs$core$IFn$_invoke$arity$2 = G__25562__2;
G__25562.cljs$core$IFn$_invoke$arity$3 = G__25562__3;
G__25562.cljs$core$IFn$_invoke$arity$variadic = G__25562__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25562;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25598 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25598) : cljs.core.volatile_BANG_.call(null,G__25598));
})();
return ((function (i){
return (function() {
var G__25628 = null;
var G__25628__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25628__1 = (function (result){
var G__25599 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25599) : rf.call(null,G__25599));
});
var G__25628__2 = (function (result,input){
var G__25600 = result;
var G__25601 = (function (){var G__25602 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25603 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25602,G__25603) : f.call(null,G__25602,G__25603));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25600,G__25601) : rf.call(null,G__25600,G__25601));
});
G__25628 = function(result,input){
switch(arguments.length){
case 0:
return G__25628__0.call(this);
case 1:
return G__25628__1.call(this,result);
case 2:
return G__25628__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25628.cljs$core$IFn$_invoke$arity$0 = G__25628__0;
G__25628.cljs$core$IFn$_invoke$arity$1 = G__25628__1;
G__25628.cljs$core$IFn$_invoke$arity$2 = G__25628__2;
return G__25628;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25629 = size;
var i_25630 = (0);
while(true){
if((i_25630 < n__17032__auto___25629)){
cljs.core.chunk_append(b,(function (){var G__25624 = (idx + i_25630);
var G__25625 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25630);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25624,G__25625) : f.call(null,G__25624,G__25625));
})());

var G__25631 = (i_25630 + (1));
i_25630 = G__25631;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25626 = idx;
var G__25627 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25626,G__25627) : f.call(null,G__25626,G__25627));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25650 = null;
var G__25650__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25650__1 = (function (result){
var G__25644 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25644) : rf.call(null,G__25644));
});
var G__25650__2 = (function (result,input){
var v = (function (){var G__25645 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25645) : f.call(null,G__25645));
})();
if((v == null)){
return result;
} else {
var G__25646 = result;
var G__25647 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25646,G__25647) : rf.call(null,G__25646,G__25647));
}
});
G__25650 = function(result,input){
switch(arguments.length){
case 0:
return G__25650__0.call(this);
case 1:
return G__25650__1.call(this,result);
case 2:
return G__25650__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25650.cljs$core$IFn$_invoke$arity$0 = G__25650__0;
G__25650.cljs$core$IFn$_invoke$arity$1 = G__25650__1;
G__25650.cljs$core$IFn$_invoke$arity$2 = G__25650__2;
return G__25650;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25651 = size;
var i_25652 = (0);
while(true){
if((i_25652 < n__17032__auto___25651)){
var x_25653 = (function (){var G__25648 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25652);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25648) : f.call(null,G__25648));
})();
if((x_25653 == null)){
} else {
cljs.core.chunk_append(b,x_25653);
}

var G__25654 = (i_25652 + (1));
i_25652 = G__25654;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25649 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25649) : f.call(null,G__25649));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25655 = this$__$1;
return goog.getUid(G__25655);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25656 = cljs.core.seq(self__.watches);
var chunk__25657 = null;
var count__25658 = (0);
var i__25659 = (0);
while(true){
if((i__25659 < count__25658)){
var vec__25660 = chunk__25657.cljs$core$IIndexed$_nth$arity$2(null,i__25659);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25660,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25660,(1),null);
var G__25661_25670 = key;
var G__25662_25671 = this$__$1;
var G__25663_25672 = oldval;
var G__25664_25673 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25661_25670,G__25662_25671,G__25663_25672,G__25664_25673) : f.call(null,G__25661_25670,G__25662_25671,G__25663_25672,G__25664_25673));

var G__25674 = seq__25656;
var G__25675 = chunk__25657;
var G__25676 = count__25658;
var G__25677 = (i__25659 + (1));
seq__25656 = G__25674;
chunk__25657 = G__25675;
count__25658 = G__25676;
i__25659 = G__25677;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25656);
if(temp__4126__auto__){
var seq__25656__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25656__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__25656__$1);
var G__25678 = cljs.core.chunk_rest(seq__25656__$1);
var G__25679 = c__16932__auto__;
var G__25680 = cljs.core.count(c__16932__auto__);
var G__25681 = (0);
seq__25656 = G__25678;
chunk__25657 = G__25679;
count__25658 = G__25680;
i__25659 = G__25681;
continue;
} else {
var vec__25665 = cljs.core.first(seq__25656__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25665,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25665,(1),null);
var G__25666_25682 = key;
var G__25667_25683 = this$__$1;
var G__25668_25684 = oldval;
var G__25669_25685 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25666_25682,G__25667_25683,G__25668_25684,G__25669_25685) : f.call(null,G__25666_25682,G__25667_25683,G__25668_25684,G__25669_25685));

var G__25686 = cljs.core.next(seq__25656__$1);
var G__25687 = null;
var G__25688 = (0);
var G__25689 = (0);
seq__25656 = G__25686;
chunk__25657 = G__25687;
count__25658 = G__25688;
i__25659 = G__25689;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25693__delegate = function (x,p__25690){
var map__25692 = p__25690;
var map__25692__$1 = ((cljs.core.seq_QMARK_(map__25692))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25692):map__25692);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25692__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25692__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25693 = function (x,var_args){
var p__25690 = null;
if (arguments.length > 1) {
var G__25694__i = 0, G__25694__a = new Array(arguments.length -  1);
while (G__25694__i < G__25694__a.length) {G__25694__a[G__25694__i] = arguments[G__25694__i + 1]; ++G__25694__i;}
  p__25690 = new cljs.core.IndexedSeq(G__25694__a,0);
} 
return G__25693__delegate.call(this,x,p__25690);};
G__25693.cljs$lang$maxFixedArity = 1;
G__25693.cljs$lang$applyTo = (function (arglist__25695){
var x = cljs.core.first(arglist__25695);
var p__25690 = cljs.core.rest(arglist__25695);
return G__25693__delegate(x,p__25690);
});
G__25693.cljs$core$IFn$_invoke$arity$variadic = G__25693__delegate;
return G__25693;
})()
;
atom = function(x,var_args){
var p__25690 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25696 = null;
if (arguments.length > 1) {
var G__25697__i = 0, G__25697__a = new Array(arguments.length -  1);
while (G__25697__i < G__25697__a.length) {G__25697__a[G__25697__i] = arguments[G__25697__i + 1]; ++G__25697__i;}
G__25696 = new cljs.core.IndexedSeq(G__25697__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25700 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25700) : validate.call(null,G__25700));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25701 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25701) : cljs.core.pr_str.call(null,G__25701));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25708 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25708) : f.call(null,G__25708));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25709 = a.state;
var G__25710 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25709,G__25710) : f.call(null,G__25709,G__25710));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25711 = a.state;
var G__25712 = x;
var G__25713 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25711,G__25712,G__25713) : f.call(null,G__25711,G__25712,G__25713));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25714__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25714 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25715__i = 0, G__25715__a = new Array(arguments.length -  4);
while (G__25715__i < G__25715__a.length) {G__25715__a[G__25715__i] = arguments[G__25715__i + 4]; ++G__25715__i;}
  more = new cljs.core.IndexedSeq(G__25715__a,0);
} 
return G__25714__delegate.call(this,a,f,x,y,more);};
G__25714.cljs$lang$maxFixedArity = 4;
G__25714.cljs$lang$applyTo = (function (arglist__25716){
var a = cljs.core.first(arglist__25716);
arglist__25716 = cljs.core.next(arglist__25716);
var f = cljs.core.first(arglist__25716);
arglist__25716 = cljs.core.next(arglist__25716);
var x = cljs.core.first(arglist__25716);
arglist__25716 = cljs.core.next(arglist__25716);
var y = cljs.core.first(arglist__25716);
var more = cljs.core.rest(arglist__25716);
return G__25714__delegate(a,f,x,y,more);
});
G__25714.cljs$core$IFn$_invoke$arity$variadic = G__25714__delegate;
return G__25714;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25717 = null;
if (arguments.length > 4) {
var G__25718__i = 0, G__25718__a = new Array(arguments.length -  4);
while (G__25718__i < G__25718__a.length) {G__25718__a[G__25718__i] = arguments[G__25718__i + 4]; ++G__25718__i;}
G__25717 = new cljs.core.IndexedSeq(G__25718__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25785 = null;
var G__25785__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25785__1 = (function (result){
var G__25752 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25752) : rf.call(null,G__25752));
});
var G__25785__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25753 = i;
var G__25754 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25753,G__25754) : f.call(null,G__25753,G__25754));
})();
if((v == null)){
return result;
} else {
var G__25755 = result;
var G__25756 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25755,G__25756) : rf.call(null,G__25755,G__25756));
}
});
G__25785 = function(result,input){
switch(arguments.length){
case 0:
return G__25785__0.call(this);
case 1:
return G__25785__1.call(this,result);
case 2:
return G__25785__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25785.cljs$core$IFn$_invoke$arity$0 = G__25785__0;
G__25785.cljs$core$IFn$_invoke$arity$1 = G__25785__1;
G__25785.cljs$core$IFn$_invoke$arity$2 = G__25785__2;
return G__25785;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25786 = size;
var i_25787 = (0);
while(true){
if((i_25787 < n__17032__auto___25786)){
var x_25788 = (function (){var G__25781 = (idx + i_25787);
var G__25782 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25787);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25781,G__25782) : f.call(null,G__25781,G__25782));
})();
if((x_25788 == null)){
} else {
cljs.core.chunk_append(b,x_25788);
}

var G__25789 = (i_25787 + (1));
i_25787 = G__25789;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25783 = idx;
var G__25784 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25783,G__25784) : f.call(null,G__25783,G__25784));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26003 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26003) : p.call(null,G__26003));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26005 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26005) : p.call(null,G__26005));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26006 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26006) : p.call(null,G__26006));
} else {
return and__16133__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26008 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26008) : p.call(null,G__26008));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26010 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26010) : p.call(null,G__26010));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26011 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26011) : p.call(null,G__26011));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26180__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26180 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26181__i = 0, G__26181__a = new Array(arguments.length -  3);
while (G__26181__i < G__26181__a.length) {G__26181__a[G__26181__i] = arguments[G__26181__i + 3]; ++G__26181__i;}
  args = new cljs.core.IndexedSeq(G__26181__a,0);
} 
return G__26180__delegate.call(this,x,y,z,args);};
G__26180.cljs$lang$maxFixedArity = 3;
G__26180.cljs$lang$applyTo = (function (arglist__26182){
var x = cljs.core.first(arglist__26182);
arglist__26182 = cljs.core.next(arglist__26182);
var y = cljs.core.first(arglist__26182);
arglist__26182 = cljs.core.next(arglist__26182);
var z = cljs.core.first(arglist__26182);
var args = cljs.core.rest(arglist__26182);
return G__26180__delegate(x,y,z,args);
});
G__26180.cljs$core$IFn$_invoke$arity$variadic = G__26180__delegate;
return G__26180;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26183 = null;
if (arguments.length > 3) {
var G__26184__i = 0, G__26184__a = new Array(arguments.length -  3);
while (G__26184__i < G__26184__a.length) {G__26184__a[G__26184__i] = arguments[G__26184__i + 3]; ++G__26184__i;}
G__26183 = new cljs.core.IndexedSeq(G__26184__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26043 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26043) : p1.call(null,G__26043));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26044 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26044) : p2.call(null,G__26044));
} else {
return and__16133__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26046 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26046) : p1.call(null,G__26046));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26048 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26048) : p1.call(null,G__26048));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26050 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26050) : p2.call(null,G__26050));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var G__26051 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26051) : p2.call(null,G__26051));
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26053 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26053) : p1.call(null,G__26053));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26055 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26055) : p1.call(null,G__26055));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26057 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26057) : p1.call(null,G__26057));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26059 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26059) : p2.call(null,G__26059));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26061 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26061) : p2.call(null,G__26061));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__26062 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26062) : p2.call(null,G__26062));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26185__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25790_SHARP_){
var and__16133__auto__ = (function (){var G__26067 = p1__25790_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26067) : p1.call(null,G__26067));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26068 = p1__25790_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26068) : p2.call(null,G__26068));
} else {
return and__16133__auto__;
}
}),args)));
};
var G__26185 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26186__i = 0, G__26186__a = new Array(arguments.length -  3);
while (G__26186__i < G__26186__a.length) {G__26186__a[G__26186__i] = arguments[G__26186__i + 3]; ++G__26186__i;}
  args = new cljs.core.IndexedSeq(G__26186__a,0);
} 
return G__26185__delegate.call(this,x,y,z,args);};
G__26185.cljs$lang$maxFixedArity = 3;
G__26185.cljs$lang$applyTo = (function (arglist__26187){
var x = cljs.core.first(arglist__26187);
arglist__26187 = cljs.core.next(arglist__26187);
var y = cljs.core.first(arglist__26187);
arglist__26187 = cljs.core.next(arglist__26187);
var z = cljs.core.first(arglist__26187);
var args = cljs.core.rest(arglist__26187);
return G__26185__delegate(x,y,z,args);
});
G__26185.cljs$core$IFn$_invoke$arity$variadic = G__26185__delegate;
return G__26185;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26188 = null;
if (arguments.length > 3) {
var G__26189__i = 0, G__26189__a = new Array(arguments.length -  3);
while (G__26189__i < G__26189__a.length) {G__26189__a[G__26189__i] = arguments[G__26189__i + 3]; ++G__26189__i;}
G__26188 = new cljs.core.IndexedSeq(G__26189__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26114 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26114) : p1.call(null,G__26114));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26116 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26116) : p2.call(null,G__26116));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26117 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26117) : p3.call(null,G__26117));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26119 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26119) : p1.call(null,G__26119));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26121 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26121) : p2.call(null,G__26121));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26123 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26123) : p3.call(null,G__26123));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26125 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26125) : p1.call(null,G__26125));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26127 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26127) : p2.call(null,G__26127));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__26128 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26128) : p3.call(null,G__26128));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26130 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26130) : p1.call(null,G__26130));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26132 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26132) : p2.call(null,G__26132));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26134 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26134) : p3.call(null,G__26134));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26136 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26136) : p1.call(null,G__26136));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26138 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26138) : p2.call(null,G__26138));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var and__16133__auto____$5 = (function (){var G__26140 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26140) : p3.call(null,G__26140));
})();
if(cljs.core.truth_(and__16133__auto____$5)){
var and__16133__auto____$6 = (function (){var G__26142 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26142) : p1.call(null,G__26142));
})();
if(cljs.core.truth_(and__16133__auto____$6)){
var and__16133__auto____$7 = (function (){var G__26144 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26144) : p2.call(null,G__26144));
})();
if(cljs.core.truth_(and__16133__auto____$7)){
var G__26145 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26145) : p3.call(null,G__26145));
} else {
return and__16133__auto____$7;
}
} else {
return and__16133__auto____$6;
}
} else {
return and__16133__auto____$5;
}
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26190__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25791_SHARP_){
var and__16133__auto__ = (function (){var G__26152 = p1__25791_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26152) : p1.call(null,G__26152));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26154 = p1__25791_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26154) : p2.call(null,G__26154));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26155 = p1__25791_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26155) : p3.call(null,G__26155));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}),args)));
};
var G__26190 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26191__i = 0, G__26191__a = new Array(arguments.length -  3);
while (G__26191__i < G__26191__a.length) {G__26191__a[G__26191__i] = arguments[G__26191__i + 3]; ++G__26191__i;}
  args = new cljs.core.IndexedSeq(G__26191__a,0);
} 
return G__26190__delegate.call(this,x,y,z,args);};
G__26190.cljs$lang$maxFixedArity = 3;
G__26190.cljs$lang$applyTo = (function (arglist__26192){
var x = cljs.core.first(arglist__26192);
arglist__26192 = cljs.core.next(arglist__26192);
var y = cljs.core.first(arglist__26192);
arglist__26192 = cljs.core.next(arglist__26192);
var z = cljs.core.first(arglist__26192);
var args = cljs.core.rest(arglist__26192);
return G__26190__delegate(x,y,z,args);
});
G__26190.cljs$core$IFn$_invoke$arity$variadic = G__26190__delegate;
return G__26190;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26193 = null;
if (arguments.length > 3) {
var G__26194__i = 0, G__26194__a = new Array(arguments.length -  3);
while (G__26194__i < G__26194__a.length) {G__26194__a[G__26194__i] = arguments[G__26194__i + 3]; ++G__26194__i;}
G__26193 = new cljs.core.IndexedSeq(G__26194__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26195__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25792_SHARP_){
var G__26171 = x;
return (p1__25792_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25792_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26171) : p1__25792_SHARP_.call(null,G__26171));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25793_SHARP_){
var and__16133__auto__ = (function (){var G__26173 = x;
return (p1__25793_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25793_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26173) : p1__25793_SHARP_.call(null,G__26173));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26174 = y;
return (p1__25793_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25793_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26174) : p1__25793_SHARP_.call(null,G__26174));
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25794_SHARP_){
var and__16133__auto__ = (function (){var G__26176 = x;
return (p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26176) : p1__25794_SHARP_.call(null,G__26176));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26178 = y;
return (p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26178) : p1__25794_SHARP_.call(null,G__26178));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26179 = z;
return (p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25794_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26179) : p1__25794_SHARP_.call(null,G__26179));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26196__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25795_SHARP_){
return cljs.core.every_QMARK_(p1__25795_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26196 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26197__i = 0, G__26197__a = new Array(arguments.length -  3);
while (G__26197__i < G__26197__a.length) {G__26197__a[G__26197__i] = arguments[G__26197__i + 3]; ++G__26197__i;}
  args = new cljs.core.IndexedSeq(G__26197__a,0);
} 
return G__26196__delegate.call(this,x,y,z,args);};
G__26196.cljs$lang$maxFixedArity = 3;
G__26196.cljs$lang$applyTo = (function (arglist__26198){
var x = cljs.core.first(arglist__26198);
arglist__26198 = cljs.core.next(arglist__26198);
var y = cljs.core.first(arglist__26198);
arglist__26198 = cljs.core.next(arglist__26198);
var z = cljs.core.first(arglist__26198);
var args = cljs.core.rest(arglist__26198);
return G__26196__delegate(x,y,z,args);
});
G__26196.cljs$core$IFn$_invoke$arity$variadic = G__26196__delegate;
return G__26196;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26199 = null;
if (arguments.length > 3) {
var G__26200__i = 0, G__26200__a = new Array(arguments.length -  3);
while (G__26200__i < G__26200__a.length) {G__26200__a[G__26200__i] = arguments[G__26200__i + 3]; ++G__26200__i;}
G__26199 = new cljs.core.IndexedSeq(G__26200__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26195 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26201__i = 0, G__26201__a = new Array(arguments.length -  3);
while (G__26201__i < G__26201__a.length) {G__26201__a[G__26201__i] = arguments[G__26201__i + 3]; ++G__26201__i;}
  ps = new cljs.core.IndexedSeq(G__26201__a,0);
} 
return G__26195__delegate.call(this,p1,p2,p3,ps);};
G__26195.cljs$lang$maxFixedArity = 3;
G__26195.cljs$lang$applyTo = (function (arglist__26202){
var p1 = cljs.core.first(arglist__26202);
arglist__26202 = cljs.core.next(arglist__26202);
var p2 = cljs.core.first(arglist__26202);
arglist__26202 = cljs.core.next(arglist__26202);
var p3 = cljs.core.first(arglist__26202);
var ps = cljs.core.rest(arglist__26202);
return G__26195__delegate(p1,p2,p3,ps);
});
G__26195.cljs$core$IFn$_invoke$arity$variadic = G__26195__delegate;
return G__26195;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26203 = null;
if (arguments.length > 3) {
var G__26204__i = 0, G__26204__a = new Array(arguments.length -  3);
while (G__26204__i < G__26204__a.length) {G__26204__a[G__26204__i] = arguments[G__26204__i + 3]; ++G__26204__i;}
G__26203 = new cljs.core.IndexedSeq(G__26204__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26410 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26410) : p.call(null,G__26410));
});
var sp1__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26412 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26412) : p.call(null,G__26412));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26413 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26413) : p.call(null,G__26413));
}
});
var sp1__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26415 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26415) : p.call(null,G__26415));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26417 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26417) : p.call(null,G__26417));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26418 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26418) : p.call(null,G__26418));
}
}
});
var sp1__4 = (function() { 
var G__26579__delegate = function (x,y,z,args){
var or__16145__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26579 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26580__i = 0, G__26580__a = new Array(arguments.length -  3);
while (G__26580__i < G__26580__a.length) {G__26580__a[G__26580__i] = arguments[G__26580__i + 3]; ++G__26580__i;}
  args = new cljs.core.IndexedSeq(G__26580__a,0);
} 
return G__26579__delegate.call(this,x,y,z,args);};
G__26579.cljs$lang$maxFixedArity = 3;
G__26579.cljs$lang$applyTo = (function (arglist__26581){
var x = cljs.core.first(arglist__26581);
arglist__26581 = cljs.core.next(arglist__26581);
var y = cljs.core.first(arglist__26581);
arglist__26581 = cljs.core.next(arglist__26581);
var z = cljs.core.first(arglist__26581);
var args = cljs.core.rest(arglist__26581);
return G__26579__delegate(x,y,z,args);
});
G__26579.cljs$core$IFn$_invoke$arity$variadic = G__26579__delegate;
return G__26579;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26582 = null;
if (arguments.length > 3) {
var G__26583__i = 0, G__26583__a = new Array(arguments.length -  3);
while (G__26583__i < G__26583__a.length) {G__26583__a[G__26583__i] = arguments[G__26583__i + 3]; ++G__26583__i;}
G__26582 = new cljs.core.IndexedSeq(G__26583__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__16145__auto__ = (function (){var G__26450 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26450) : p1.call(null,G__26450));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26451 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26451) : p2.call(null,G__26451));
}
});
var sp2__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26453 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26453) : p1.call(null,G__26453));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26455 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26455) : p1.call(null,G__26455));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26457 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26457) : p2.call(null,G__26457));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__26458 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26458) : p2.call(null,G__26458));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26460 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26460) : p1.call(null,G__26460));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26462 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26462) : p1.call(null,G__26462));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26464 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26464) : p1.call(null,G__26464));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26466 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26466) : p2.call(null,G__26466));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26468 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26468) : p2.call(null,G__26468));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__26469 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26469) : p2.call(null,G__26469));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26584__delegate = function (x,y,z,args){
var or__16145__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__26205_SHARP_){
var or__16145__auto____$1 = (function (){var G__26471 = p1__26205_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26471) : p1.call(null,G__26471));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26472 = p1__26205_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26472) : p2.call(null,G__26472));
}
});})(or__16145__auto__))
,args);
}
};
var G__26584 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26585__i = 0, G__26585__a = new Array(arguments.length -  3);
while (G__26585__i < G__26585__a.length) {G__26585__a[G__26585__i] = arguments[G__26585__i + 3]; ++G__26585__i;}
  args = new cljs.core.IndexedSeq(G__26585__a,0);
} 
return G__26584__delegate.call(this,x,y,z,args);};
G__26584.cljs$lang$maxFixedArity = 3;
G__26584.cljs$lang$applyTo = (function (arglist__26586){
var x = cljs.core.first(arglist__26586);
arglist__26586 = cljs.core.next(arglist__26586);
var y = cljs.core.first(arglist__26586);
arglist__26586 = cljs.core.next(arglist__26586);
var z = cljs.core.first(arglist__26586);
var args = cljs.core.rest(arglist__26586);
return G__26584__delegate(x,y,z,args);
});
G__26584.cljs$core$IFn$_invoke$arity$variadic = G__26584__delegate;
return G__26584;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26587 = null;
if (arguments.length > 3) {
var G__26588__i = 0, G__26588__a = new Array(arguments.length -  3);
while (G__26588__i < G__26588__a.length) {G__26588__a[G__26588__i] = arguments[G__26588__i + 3]; ++G__26588__i;}
G__26587 = new cljs.core.IndexedSeq(G__26588__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__16145__auto__ = (function (){var G__26518 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26518) : p1.call(null,G__26518));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26520 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26520) : p2.call(null,G__26520));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26521 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26521) : p3.call(null,G__26521));
}
}
});
var sp3__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26523 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26523) : p1.call(null,G__26523));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26525 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26525) : p2.call(null,G__26525));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26527 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26527) : p3.call(null,G__26527));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26529 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26529) : p1.call(null,G__26529));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26531 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26531) : p2.call(null,G__26531));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__26532 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26532) : p3.call(null,G__26532));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26534 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26534) : p1.call(null,G__26534));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26536 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26536) : p2.call(null,G__26536));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26538 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26538) : p3.call(null,G__26538));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26540 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26540) : p1.call(null,G__26540));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26542 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26542) : p2.call(null,G__26542));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var or__16145__auto____$5 = (function (){var G__26544 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26544) : p3.call(null,G__26544));
})();
if(cljs.core.truth_(or__16145__auto____$5)){
return or__16145__auto____$5;
} else {
var or__16145__auto____$6 = (function (){var G__26546 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26546) : p1.call(null,G__26546));
})();
if(cljs.core.truth_(or__16145__auto____$6)){
return or__16145__auto____$6;
} else {
var or__16145__auto____$7 = (function (){var G__26548 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26548) : p2.call(null,G__26548));
})();
if(cljs.core.truth_(or__16145__auto____$7)){
return or__16145__auto____$7;
} else {
var G__26549 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26549) : p3.call(null,G__26549));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26589__delegate = function (x,y,z,args){
var or__16145__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__26206_SHARP_){
var or__16145__auto____$1 = (function (){var G__26551 = p1__26206_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26551) : p1.call(null,G__26551));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26553 = p1__26206_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26553) : p2.call(null,G__26553));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__26554 = p1__26206_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26554) : p3.call(null,G__26554));
}
}
});})(or__16145__auto__))
,args);
}
};
var G__26589 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26590__i = 0, G__26590__a = new Array(arguments.length -  3);
while (G__26590__i < G__26590__a.length) {G__26590__a[G__26590__i] = arguments[G__26590__i + 3]; ++G__26590__i;}
  args = new cljs.core.IndexedSeq(G__26590__a,0);
} 
return G__26589__delegate.call(this,x,y,z,args);};
G__26589.cljs$lang$maxFixedArity = 3;
G__26589.cljs$lang$applyTo = (function (arglist__26591){
var x = cljs.core.first(arglist__26591);
arglist__26591 = cljs.core.next(arglist__26591);
var y = cljs.core.first(arglist__26591);
arglist__26591 = cljs.core.next(arglist__26591);
var z = cljs.core.first(arglist__26591);
var args = cljs.core.rest(arglist__26591);
return G__26589__delegate(x,y,z,args);
});
G__26589.cljs$core$IFn$_invoke$arity$variadic = G__26589__delegate;
return G__26589;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26592 = null;
if (arguments.length > 3) {
var G__26593__i = 0, G__26593__a = new Array(arguments.length -  3);
while (G__26593__i < G__26593__a.length) {G__26593__a[G__26593__i] = arguments[G__26593__i + 3]; ++G__26593__i;}
G__26592 = new cljs.core.IndexedSeq(G__26593__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26594__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26207_SHARP_){
var G__26570 = x;
return (p1__26207_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26207_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26570) : p1__26207_SHARP_.call(null,G__26570));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26208_SHARP_){
var or__16145__auto__ = (function (){var G__26572 = x;
return (p1__26208_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26208_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26572) : p1__26208_SHARP_.call(null,G__26572));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26573 = y;
return (p1__26208_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26208_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26573) : p1__26208_SHARP_.call(null,G__26573));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26209_SHARP_){
var or__16145__auto__ = (function (){var G__26575 = x;
return (p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26575) : p1__26209_SHARP_.call(null,G__26575));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26577 = y;
return (p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26577) : p1__26209_SHARP_.call(null,G__26577));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26578 = z;
return (p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26209_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26578) : p1__26209_SHARP_.call(null,G__26578));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26595__delegate = function (x,y,z,args){
var or__16145__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__,ps__$1){
return (function (p1__26210_SHARP_){
return cljs.core.some(p1__26210_SHARP_,args);
});})(or__16145__auto__,ps__$1))
,ps__$1);
}
};
var G__26595 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26596__i = 0, G__26596__a = new Array(arguments.length -  3);
while (G__26596__i < G__26596__a.length) {G__26596__a[G__26596__i] = arguments[G__26596__i + 3]; ++G__26596__i;}
  args = new cljs.core.IndexedSeq(G__26596__a,0);
} 
return G__26595__delegate.call(this,x,y,z,args);};
G__26595.cljs$lang$maxFixedArity = 3;
G__26595.cljs$lang$applyTo = (function (arglist__26597){
var x = cljs.core.first(arglist__26597);
arglist__26597 = cljs.core.next(arglist__26597);
var y = cljs.core.first(arglist__26597);
arglist__26597 = cljs.core.next(arglist__26597);
var z = cljs.core.first(arglist__26597);
var args = cljs.core.rest(arglist__26597);
return G__26595__delegate(x,y,z,args);
});
G__26595.cljs$core$IFn$_invoke$arity$variadic = G__26595__delegate;
return G__26595;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26598 = null;
if (arguments.length > 3) {
var G__26599__i = 0, G__26599__a = new Array(arguments.length -  3);
while (G__26599__i < G__26599__a.length) {G__26599__a[G__26599__i] = arguments[G__26599__i + 3]; ++G__26599__i;}
G__26598 = new cljs.core.IndexedSeq(G__26599__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26594 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26600__i = 0, G__26600__a = new Array(arguments.length -  3);
while (G__26600__i < G__26600__a.length) {G__26600__a[G__26600__i] = arguments[G__26600__i + 3]; ++G__26600__i;}
  ps = new cljs.core.IndexedSeq(G__26600__a,0);
} 
return G__26594__delegate.call(this,p1,p2,p3,ps);};
G__26594.cljs$lang$maxFixedArity = 3;
G__26594.cljs$lang$applyTo = (function (arglist__26601){
var p1 = cljs.core.first(arglist__26601);
arglist__26601 = cljs.core.next(arglist__26601);
var p2 = cljs.core.first(arglist__26601);
arglist__26601 = cljs.core.next(arglist__26601);
var p3 = cljs.core.first(arglist__26601);
var ps = cljs.core.rest(arglist__26601);
return G__26594__delegate(p1,p2,p3,ps);
});
G__26594.cljs$core$IFn$_invoke$arity$variadic = G__26594__delegate;
return G__26594;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26602 = null;
if (arguments.length > 3) {
var G__26603__i = 0, G__26603__a = new Array(arguments.length -  3);
while (G__26603__i < G__26603__a.length) {G__26603__a[G__26603__i] = arguments[G__26603__i + 3]; ++G__26603__i;}
G__26602 = new cljs.core.IndexedSeq(G__26603__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26658 = null;
var G__26658__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26658__1 = (function (result){
var G__26644 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26644) : rf.call(null,G__26644));
});
var G__26658__2 = (function (result,input){
var G__26645 = result;
var G__26646 = (function (){var G__26647 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26647) : f.call(null,G__26647));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26645,G__26646) : rf.call(null,G__26645,G__26646));
});
var G__26658__3 = (function() { 
var G__26659__delegate = function (result,input,inputs){
var G__26648 = result;
var G__26649 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26648,G__26649) : rf.call(null,G__26648,G__26649));
};
var G__26659 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26660__i = 0, G__26660__a = new Array(arguments.length -  2);
while (G__26660__i < G__26660__a.length) {G__26660__a[G__26660__i] = arguments[G__26660__i + 2]; ++G__26660__i;}
  inputs = new cljs.core.IndexedSeq(G__26660__a,0);
} 
return G__26659__delegate.call(this,result,input,inputs);};
G__26659.cljs$lang$maxFixedArity = 2;
G__26659.cljs$lang$applyTo = (function (arglist__26661){
var result = cljs.core.first(arglist__26661);
arglist__26661 = cljs.core.next(arglist__26661);
var input = cljs.core.first(arglist__26661);
var inputs = cljs.core.rest(arglist__26661);
return G__26659__delegate(result,input,inputs);
});
G__26659.cljs$core$IFn$_invoke$arity$variadic = G__26659__delegate;
return G__26659;
})()
;
G__26658 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26658__0.call(this);
case 1:
return G__26658__1.call(this,result);
case 2:
return G__26658__2.call(this,result,input);
default:
var G__26662 = null;
if (arguments.length > 2) {
var G__26663__i = 0, G__26663__a = new Array(arguments.length -  2);
while (G__26663__i < G__26663__a.length) {G__26663__a[G__26663__i] = arguments[G__26663__i + 2]; ++G__26663__i;}
G__26662 = new cljs.core.IndexedSeq(G__26663__a,0);
}
return G__26658__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26658.cljs$lang$maxFixedArity = 2;
G__26658.cljs$lang$applyTo = G__26658__3.cljs$lang$applyTo;
G__26658.cljs$core$IFn$_invoke$arity$0 = G__26658__0;
G__26658.cljs$core$IFn$_invoke$arity$1 = G__26658__1;
G__26658.cljs$core$IFn$_invoke$arity$2 = G__26658__2;
G__26658.cljs$core$IFn$_invoke$arity$variadic = G__26658__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26658;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26664 = size;
var i_26665 = (0);
while(true){
if((i_26665 < n__17032__auto___26664)){
cljs.core.chunk_append(b,(function (){var G__26650 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26665);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26650) : f.call(null,G__26650));
})());

var G__26666 = (i_26665 + (1));
i_26665 = G__26666;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26651 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26651) : f.call(null,G__26651));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26652 = cljs.core.first(s1);
var G__26653 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26652,G__26653) : f.call(null,G__26652,G__26653));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26654 = cljs.core.first(s1);
var G__26655 = cljs.core.first(s2);
var G__26656 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26654,G__26655,G__26656) : f.call(null,G__26654,G__26655,G__26656));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26667__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26604_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26604_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26667 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26668__i = 0, G__26668__a = new Array(arguments.length -  4);
while (G__26668__i < G__26668__a.length) {G__26668__a[G__26668__i] = arguments[G__26668__i + 4]; ++G__26668__i;}
  colls = new cljs.core.IndexedSeq(G__26668__a,0);
} 
return G__26667__delegate.call(this,f,c1,c2,c3,colls);};
G__26667.cljs$lang$maxFixedArity = 4;
G__26667.cljs$lang$applyTo = (function (arglist__26669){
var f = cljs.core.first(arglist__26669);
arglist__26669 = cljs.core.next(arglist__26669);
var c1 = cljs.core.first(arglist__26669);
arglist__26669 = cljs.core.next(arglist__26669);
var c2 = cljs.core.first(arglist__26669);
arglist__26669 = cljs.core.next(arglist__26669);
var c3 = cljs.core.first(arglist__26669);
var colls = cljs.core.rest(arglist__26669);
return G__26667__delegate(f,c1,c2,c3,colls);
});
G__26667.cljs$core$IFn$_invoke$arity$variadic = G__26667__delegate;
return G__26667;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26670 = null;
if (arguments.length > 4) {
var G__26671__i = 0, G__26671__a = new Array(arguments.length -  4);
while (G__26671__i < G__26671__a.length) {G__26671__a[G__26671__i] = arguments[G__26671__i + 4]; ++G__26671__i;}
G__26670 = new cljs.core.IndexedSeq(G__26671__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26680 = null;
var G__26680__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26680__1 = (function (result){
var G__26677 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26677) : rf.call(null,G__26677));
});
var G__26680__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26678 = result;
var G__26679 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26678,G__26679) : rf.call(null,G__26678,G__26679));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26680 = function(result,input){
switch(arguments.length){
case 0:
return G__26680__0.call(this);
case 1:
return G__26680__1.call(this,result);
case 2:
return G__26680__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26680.cljs$core$IFn$_invoke$arity$0 = G__26680__0;
G__26680.cljs$core$IFn$_invoke$arity$1 = G__26680__1;
G__26680.cljs$core$IFn$_invoke$arity$2 = G__26680__2;
return G__26680;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26687 = null;
var G__26687__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26687__1 = (function (result){
var G__26684 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26684) : rf.call(null,G__26684));
});
var G__26687__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26685 = result;
var G__26686 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26685,G__26686) : rf.call(null,G__26685,G__26686));
}
});
G__26687 = function(result,input){
switch(arguments.length){
case 0:
return G__26687__0.call(this);
case 1:
return G__26687__1.call(this,result);
case 2:
return G__26687__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26687.cljs$core$IFn$_invoke$arity$0 = G__26687__0;
G__26687.cljs$core$IFn$_invoke$arity$1 = G__26687__1;
G__26687.cljs$core$IFn$_invoke$arity$2 = G__26687__2;
return G__26687;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26688 = (n__$1 - (1));
var G__26689 = cljs.core.rest(s);
n__$1 = G__26688;
coll__$1 = G__26689;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26692 = cljs.core.next(s);
var G__26693 = cljs.core.next(lead);
s = G__26692;
lead = G__26693;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26706 = null;
var G__26706__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26706__1 = (function (result){
var G__26700 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26700) : rf.call(null,G__26700));
});
var G__26706__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__16133__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__16133__auto__)){
var G__26701 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26701) : pred.call(null,G__26701));
} else {
return and__16133__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26702 = result;
var G__26703 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26702,G__26703) : rf.call(null,G__26702,G__26703));
}
});
G__26706 = function(result,input){
switch(arguments.length){
case 0:
return G__26706__0.call(this);
case 1:
return G__26706__1.call(this,result);
case 2:
return G__26706__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26706.cljs$core$IFn$_invoke$arity$0 = G__26706__0;
G__26706.cljs$core$IFn$_invoke$arity$1 = G__26706__1;
G__26706.cljs$core$IFn$_invoke$arity$2 = G__26706__2;
return G__26706;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__16133__auto__ = s;
if(and__16133__auto__){
var G__26705 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26705) : pred__$1.call(null,G__26705));
} else {
return and__16133__auto__;
}
})())){
var G__26707 = pred__$1;
var G__26708 = cljs.core.rest(s);
pred__$1 = G__26707;
coll__$1 = G__26708;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26717 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26717) : f.call(null,G__26717));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26720__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26720 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26721__i = 0, G__26721__a = new Array(arguments.length -  2);
while (G__26721__i < G__26721__a.length) {G__26721__a[G__26721__i] = arguments[G__26721__i + 2]; ++G__26721__i;}
  colls = new cljs.core.IndexedSeq(G__26721__a,0);
} 
return G__26720__delegate.call(this,c1,c2,colls);};
G__26720.cljs$lang$maxFixedArity = 2;
G__26720.cljs$lang$applyTo = (function (arglist__26722){
var c1 = cljs.core.first(arglist__26722);
arglist__26722 = cljs.core.next(arglist__26722);
var c2 = cljs.core.first(arglist__26722);
var colls = cljs.core.rest(arglist__26722);
return G__26720__delegate(c1,c2,colls);
});
G__26720.cljs$core$IFn$_invoke$arity$variadic = G__26720__delegate;
return G__26720;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26723 = null;
if (arguments.length > 2) {
var G__26724__i = 0, G__26724__a = new Array(arguments.length -  2);
while (G__26724__i < G__26724__a.length) {G__26724__a[G__26724__i] = arguments[G__26724__i + 2]; ++G__26724__i;}
G__26723 = new cljs.core.IndexedSeq(G__26724__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26739 = null;
var G__26739__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26739__1 = (function (result){
var G__26732 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26732) : rf.call(null,G__26732));
});
var G__26739__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26733 = result;
var G__26734 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26733,G__26734) : rf.call(null,G__26733,G__26734));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26735 = sepr;
var G__26736 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26735,G__26736) : rf.call(null,G__26735,G__26736));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26737 = result;
var G__26738 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26737,G__26738) : rf.call(null,G__26737,G__26738));
}
});
G__26739 = function(result,input){
switch(arguments.length){
case 0:
return G__26739__0.call(this);
case 1:
return G__26739__1.call(this,result);
case 2:
return G__26739__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26739.cljs$core$IFn$_invoke$arity$0 = G__26739__0;
G__26739.cljs$core$IFn$_invoke$arity$1 = G__26739__1;
G__26739.cljs$core$IFn$_invoke$arity$2 = G__26739__2;
return G__26739;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26748__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26748 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26749__i = 0, G__26749__a = new Array(arguments.length -  1);
while (G__26749__i < G__26749__a.length) {G__26749__a[G__26749__i] = arguments[G__26749__i + 1]; ++G__26749__i;}
  colls = new cljs.core.IndexedSeq(G__26749__a,0);
} 
return G__26748__delegate.call(this,f,colls);};
G__26748.cljs$lang$maxFixedArity = 1;
G__26748.cljs$lang$applyTo = (function (arglist__26750){
var f = cljs.core.first(arglist__26750);
var colls = cljs.core.rest(arglist__26750);
return G__26748__delegate(f,colls);
});
G__26748.cljs$core$IFn$_invoke$arity$variadic = G__26748__delegate;
return G__26748;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26751 = null;
if (arguments.length > 1) {
var G__26752__i = 0, G__26752__a = new Array(arguments.length -  1);
while (G__26752__i < G__26752__a.length) {G__26752__a[G__26752__i] = arguments[G__26752__i + 1]; ++G__26752__i;}
G__26751 = new cljs.core.IndexedSeq(G__26752__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26771 = null;
var G__26771__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26771__1 = (function (result){
var G__26765 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26765) : rf.call(null,G__26765));
});
var G__26771__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26766 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26766) : pred.call(null,G__26766));
})())){
var G__26767 = result;
var G__26768 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26767,G__26768) : rf.call(null,G__26767,G__26768));
} else {
return result;
}
});
G__26771 = function(result,input){
switch(arguments.length){
case 0:
return G__26771__0.call(this);
case 1:
return G__26771__1.call(this,result);
case 2:
return G__26771__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26771.cljs$core$IFn$_invoke$arity$0 = G__26771__0;
G__26771.cljs$core$IFn$_invoke$arity$1 = G__26771__1;
G__26771.cljs$core$IFn$_invoke$arity$2 = G__26771__2;
return G__26771;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26772 = size;
var i_26773 = (0);
while(true){
if((i_26773 < n__17032__auto___26772)){
if(cljs.core.truth_((function (){var G__26769 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26773);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26769) : pred.call(null,G__26769));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26773));
} else {
}

var G__26774 = (i_26773 + (1));
i_26773 = G__26774;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26770 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26770) : pred.call(null,G__26770));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26781 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26781) : branch_QMARK_.call(null,G__26781));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26782 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26782) : children.call(null,G__26782));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26783_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26783_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26786 = to;
if(G__26786){
var bit__16819__auto__ = (G__26786.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__26786.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26787 = to;
if(G__26787){
var bit__16819__auto__ = (G__26787.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__26787.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26789 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26789) : f.call(null,G__26789));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26790__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26790 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26791__i = 0, G__26791__a = new Array(arguments.length -  4);
while (G__26791__i < G__26791__a.length) {G__26791__a[G__26791__i] = arguments[G__26791__i + 4]; ++G__26791__i;}
  colls = new cljs.core.IndexedSeq(G__26791__a,0);
} 
return G__26790__delegate.call(this,f,c1,c2,c3,colls);};
G__26790.cljs$lang$maxFixedArity = 4;
G__26790.cljs$lang$applyTo = (function (arglist__26792){
var f = cljs.core.first(arglist__26792);
arglist__26792 = cljs.core.next(arglist__26792);
var c1 = cljs.core.first(arglist__26792);
arglist__26792 = cljs.core.next(arglist__26792);
var c2 = cljs.core.first(arglist__26792);
arglist__26792 = cljs.core.next(arglist__26792);
var c3 = cljs.core.first(arglist__26792);
var colls = cljs.core.rest(arglist__26792);
return G__26790__delegate(f,c1,c2,c3,colls);
});
G__26790.cljs$core$IFn$_invoke$arity$variadic = G__26790__delegate;
return G__26790;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26793 = null;
if (arguments.length > 4) {
var G__26794__i = 0, G__26794__a = new Array(arguments.length -  4);
while (G__26794__i < G__26794__a.length) {G__26794__a[G__26794__i] = arguments[G__26794__i + 4]; ++G__26794__i;}
G__26793 = new cljs.core.IndexedSeq(G__26794__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26793);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26796 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26796) : pred.call(null,G__26796));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26811 = m__$1;
if(G__26811){
var bit__16826__auto__ = (G__26811.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16826__auto__) || (G__26811.cljs$core$ILookup$)){
return true;
} else {
if((!G__26811.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26811);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26811);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26812 = sentinel;
var G__26813 = m__$2;
var G__26814 = cljs.core.next(ks__$1);
sentinel = G__26812;
m__$1 = G__26813;
ks__$1 = G__26814;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26815,v){
var vec__26820 = p__26815;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26820,(0),null);
var ks = cljs.core.nthnext(vec__26820,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26821,f){
var vec__26859 = p__26821;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26859,(0),null);
var ks = cljs.core.nthnext(vec__26859,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26860 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26860) : f.call(null,G__26860));
})());
}
});
var update_in__4 = (function (m,p__26822,f,a){
var vec__26861 = p__26822;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26861,(0),null);
var ks = cljs.core.nthnext(vec__26861,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26862 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26863 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26862,G__26863) : f.call(null,G__26862,G__26863));
})());
}
});
var update_in__5 = (function (m,p__26823,f,a,b){
var vec__26864 = p__26823;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26864,(0),null);
var ks = cljs.core.nthnext(vec__26864,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26865 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26866 = a;
var G__26867 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26865,G__26866,G__26867) : f.call(null,G__26865,G__26866,G__26867));
})());
}
});
var update_in__6 = (function (m,p__26824,f,a,b,c){
var vec__26868 = p__26824;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26868,(0),null);
var ks = cljs.core.nthnext(vec__26868,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26869 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26870 = a;
var G__26871 = b;
var G__26872 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26869,G__26870,G__26871,G__26872) : f.call(null,G__26869,G__26870,G__26871,G__26872));
})());
}
});
var update_in__7 = (function() { 
var G__26874__delegate = function (m,p__26825,f,a,b,c,args){
var vec__26873 = p__26825;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26873,(0),null);
var ks = cljs.core.nthnext(vec__26873,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__26874 = function (m,p__26825,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__26875__i = 0, G__26875__a = new Array(arguments.length -  6);
while (G__26875__i < G__26875__a.length) {G__26875__a[G__26875__i] = arguments[G__26875__i + 6]; ++G__26875__i;}
  args = new cljs.core.IndexedSeq(G__26875__a,0);
} 
return G__26874__delegate.call(this,m,p__26825,f,a,b,c,args);};
G__26874.cljs$lang$maxFixedArity = 6;
G__26874.cljs$lang$applyTo = (function (arglist__26876){
var m = cljs.core.first(arglist__26876);
arglist__26876 = cljs.core.next(arglist__26876);
var p__26825 = cljs.core.first(arglist__26876);
arglist__26876 = cljs.core.next(arglist__26876);
var f = cljs.core.first(arglist__26876);
arglist__26876 = cljs.core.next(arglist__26876);
var a = cljs.core.first(arglist__26876);
arglist__26876 = cljs.core.next(arglist__26876);
var b = cljs.core.first(arglist__26876);
arglist__26876 = cljs.core.next(arglist__26876);
var c = cljs.core.first(arglist__26876);
var args = cljs.core.rest(arglist__26876);
return G__26874__delegate(m,p__26825,f,a,b,c,args);
});
G__26874.cljs$core$IFn$_invoke$arity$variadic = G__26874__delegate;
return G__26874;
})()
;
update_in = function(m,p__26825,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26825,f);
case 4:
return update_in__4.call(this,m,p__26825,f,a);
case 5:
return update_in__5.call(this,m,p__26825,f,a,b);
case 6:
return update_in__6.call(this,m,p__26825,f,a,b,c);
default:
var G__26877 = null;
if (arguments.length > 6) {
var G__26878__i = 0, G__26878__a = new Array(arguments.length -  6);
while (G__26878__i < G__26878__a.length) {G__26878__a[G__26878__i] = arguments[G__26878__i + 6]; ++G__26878__i;}
G__26877 = new cljs.core.IndexedSeq(G__26878__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26825,f,a,b,c, G__26877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26889 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26889) : f.call(null,G__26889));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26890 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26891 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26890,G__26891) : f.call(null,G__26890,G__26891));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26892 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26893 = x;
var G__26894 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26892,G__26893,G__26894) : f.call(null,G__26892,G__26893,G__26894));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26895 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26896 = x;
var G__26897 = y;
var G__26898 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26895,G__26896,G__26897,G__26898) : f.call(null,G__26895,G__26896,G__26897,G__26898));
})());
});
var update__7 = (function() { 
var G__26899__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__26899 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__26900__i = 0, G__26900__a = new Array(arguments.length -  6);
while (G__26900__i < G__26900__a.length) {G__26900__a[G__26900__i] = arguments[G__26900__i + 6]; ++G__26900__i;}
  more = new cljs.core.IndexedSeq(G__26900__a,0);
} 
return G__26899__delegate.call(this,m,k,f,x,y,z,more);};
G__26899.cljs$lang$maxFixedArity = 6;
G__26899.cljs$lang$applyTo = (function (arglist__26901){
var m = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var k = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var f = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var x = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var y = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var z = cljs.core.first(arglist__26901);
var more = cljs.core.rest(arglist__26901);
return G__26899__delegate(m,k,f,x,y,z,more);
});
G__26899.cljs$core$IFn$_invoke$arity$variadic = G__26899__delegate;
return G__26899;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__26902 = null;
if (arguments.length > 6) {
var G__26903__i = 0, G__26903__a = new Array(arguments.length -  6);
while (G__26903__i < G__26903__a.length) {G__26903__a[G__26903__i] = arguments[G__26903__i + 6]; ++G__26903__i;}
G__26902 = new cljs.core.IndexedSeq(G__26903__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__26902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__26904 = (ll - (5));
var G__26905 = r;
ll = G__26904;
ret = G__26905;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26910 = cljs.core.pv_aget(node,(0));
var G__26911 = (level - (5));
node = G__26910;
level = G__26911;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26912 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__26913 = (level - (5));
node = G__26912;
level = G__26913;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26923 = init__$2;
var G__26924 = (j + i);
var G__26925 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26923,G__26924,G__26925) : f.call(null,G__26923,G__26924,G__26925));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26936 = (j + (1));
var G__26937 = init__$3;
j = G__26936;
init__$2 = G__26937;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26926 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26926) : cljs.core.deref.call(null,G__26926));
} else {
var G__26938 = (i + len);
var G__26939 = init__$2;
i = G__26938;
init__$1 = G__26939;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__26927 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__26927) : cljs.core.tv_editable_root.call(null,G__26927));
})(),(function (){var G__26928 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__26928) : cljs.core.tv_editable_tail.call(null,G__26928));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26929 = init__$2;
var G__26930 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26929,G__26930) : f.call(null,G__26929,G__26930));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26940 = (j + (1));
var G__26941 = init__$3;
j = G__26940;
init__$2 = G__26941;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26931 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26931) : cljs.core.deref.call(null,G__26931));
} else {
var G__26942 = (i + len);
var G__26943 = init__$2;
i = G__26942;
init__$1 = G__26943;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__26932 = coll__$1;
var G__26933 = cljs.core.first_array_for_longvec(coll__$1);
var G__26934 = (0);
var G__26935 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26932,G__26933,G__26934,G__26935) : cljs.core.chunked_seq.call(null,G__26932,G__26933,G__26934,G__26935));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__17032__auto___26944 = len;
var i_26945 = (0);
while(true){
if((i_26945 < n__17032__auto___26944)){
(new_tail[i_26945] = (self__.tail[i_26945]));

var G__26946 = (i_26945 + (1));
i_26945 = G__26946;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__26947 = null;
var G__26947__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26947__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26947 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26947__2.call(this,self__,k);
case 3:
return G__26947__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26947.cljs$core$IFn$_invoke$arity$2 = G__26947__2;
G__26947.cljs$core$IFn$_invoke$arity$3 = G__26947__3;
return G__26947;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args26922){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26922)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__26948 = (i + (1));
var G__26949 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__26948;
out = G__26949;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26950__i = 0, G__26950__a = new Array(arguments.length -  0);
while (G__26950__i < G__26950__a.length) {G__26950__a[G__26950__i] = arguments[G__26950__i + 0]; ++G__26950__i;}
  args = new cljs.core.IndexedSeq(G__26950__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__26951){
var args = cljs.core.seq(arglist__26951);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26952 = self__.vec;
var G__26953 = self__.node;
var G__26954 = self__.i;
var G__26955 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26952,G__26953,G__26954,G__26955) : cljs.core.chunked_seq.call(null,G__26952,G__26953,G__26954,G__26955));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__26956 = self__.vec;
var G__26957 = (self__.i + self__.off);
var G__26958 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26956,G__26957,G__26958) : cljs.core.subvec.call(null,G__26956,G__26957,G__26958));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__26959 = self__.vec;
var G__26960 = (self__.i + self__.off);
var G__26961 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26959,G__26960,G__26961) : cljs.core.subvec.call(null,G__26959,G__26960,G__26961));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26962 = self__.vec;
var G__26963 = self__.node;
var G__26964 = self__.i;
var G__26965 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26962,G__26963,G__26964,G__26965) : cljs.core.chunked_seq.call(null,G__26962,G__26963,G__26964,G__26965));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26966 = self__.vec;
var G__26967 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26968 = end;
var G__26969 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26966,G__26967,G__26968,G__26969) : cljs.core.chunked_seq.call(null,G__26966,G__26967,G__26968,G__26969));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__26970 = self__.vec;
var G__26971 = self__.node;
var G__26972 = self__.i;
var G__26973 = self__.off;
var G__26974 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__26970,G__26971,G__26972,G__26973,G__26974) : cljs.core.chunked_seq.call(null,G__26970,G__26971,G__26972,G__26973,G__26974));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26975 = self__.vec;
var G__26976 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26977 = end;
var G__26978 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26975,G__26976,G__26977,G__26978) : cljs.core.chunked_seq.call(null,G__26975,G__26976,G__26977,G__26978));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26980 = self__.meta;
var G__26981 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26982 = self__.start;
var G__26983 = (function (){var x__16462__auto__ = self__.end;
var y__16463__auto__ = (v_pos + (1));
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})();
var G__26984 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26980,G__26981,G__26982,G__26983,G__26984) : cljs.core.build_subvec.call(null,G__26980,G__26981,G__26982,G__26983,G__26984));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26985 = self__.meta;
var G__26986 = self__.v;
var G__26987 = self__.start;
var G__26988 = (self__.end - (1));
var G__26989 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26985,G__26986,G__26987,G__26988,G__26989) : cljs.core.build_subvec.call(null,G__26985,G__26986,G__26987,G__26988,G__26989));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26991 = meta__$1;
var G__26992 = self__.v;
var G__26993 = self__.start;
var G__26994 = self__.end;
var G__26995 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26991,G__26992,G__26993,G__26994,G__26995) : cljs.core.build_subvec.call(null,G__26991,G__26992,G__26993,G__26994,G__26995));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26996 = self__.meta;
var G__26997 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26998 = self__.start;
var G__26999 = (self__.end + (1));
var G__27000 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26996,G__26997,G__26998,G__26999,G__27000) : cljs.core.build_subvec.call(null,G__26996,G__26997,G__26998,G__26999,G__27000));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27001 = null;
var G__27001__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27001__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27001 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27001__2.call(this,self__,k);
case 3:
return G__27001__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27001.cljs$core$IFn$_invoke$arity$2 = G__27001__2;
G__27001.cljs$core$IFn$_invoke$arity$3 = G__27001__3;
return G__27001;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26979){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26979)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27002 = meta;
var G__27003 = v.v;
var G__27004 = (v.start + start);
var G__27005 = (v.start + end);
var G__27006 = __hash;
meta = G__27002;
v = G__27003;
start = G__27004;
end = G__27005;
__hash = G__27006;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27013 = {};
return obj27013;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27021 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27022 = (level - (5));
node = G__27021;
level = G__27022;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27026 = null;
var G__27026__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27026__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27026 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27026__2.call(this,self__,k);
case 3:
return G__27026__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27026.cljs$core$IFn$_invoke$arity$2 = G__27026__2;
G__27026.cljs$core$IFn$_invoke$arity$3 = G__27026__3;
return G__27026;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27023){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27023)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__16145__auto__ = self__.front;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = self__.rear;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27027 = (i + incr);
i = G__27027;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27028 = (i + (1));
var G__27029 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27028;
out = G__27029;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27033 = {};
return obj27033;
})();
var l = ks.length;
var i_27034 = (0);
while(true){
if((i_27034 < l)){
var k_27035 = (ks[i_27034]);
(new_obj[k_27035] = (obj[k_27035]));

var G__27036 = (i_27034 + (1));
i_27034 = G__27036;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27040 = k;
return goog.isString(G__27040);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__27041 = init__$1;
var G__27042 = k;
var G__27043 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27041,G__27042,G__27043) : f.call(null,G__27041,G__27042,G__27043));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27044 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27044) : cljs.core.deref.call(null,G__27044));
} else {
var G__27050 = cljs.core.rest(keys__$1);
var G__27051 = init__$2;
keys__$1 = G__27050;
init__$1 = G__27051;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27046 = k;
return goog.isString(G__27046);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__27047 = k;
return goog.isString(G__27047);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27049 = k;
return goog.isString(G__27049);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27037_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27037_SHARP_,(self__.strobj[p1__27037_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__27052 = null;
var G__27052__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27052__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27052 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27052__2.call(this,self__,k);
case 3:
return G__27052__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27052.cljs$core$IFn$_invoke$arity$2 = G__27052__2;
G__27052.cljs$core$IFn$_invoke$arity$3 = G__27052__3;
return G__27052;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27038){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27038)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj27054 = {};
return obj27054;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__27055 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27055,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27055,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__27056 = (i + (2));
i = G__27056;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__27057 = (i + (2));
i = G__27057;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__27058 = (i + (2));
i = G__27058;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__27059 = (i + (2));
i = G__27059;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__27060 = (i + (2));
i = G__27060;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__16145__auto__ = (function (){var G__27064 = k;
return goog.isString(G__27064);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_27065 = (0);
while(true){
if((i_27065 < l)){
(narr[i_27065] = (arr[i_27065]));

var G__27066 = (i_27065 + (1));
i_27065 = G__27066;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27068 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27068) : cljs.core.keys.call(null,G__27068));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27069 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27069) : cljs.core.vals.call(null,G__27069));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27070 = cljs.core.seq(coll);
var chunk__27071 = null;
var count__27072 = (0);
var i__27073 = (0);
while(true){
if((i__27073 < count__27072)){
var vec__27074 = chunk__27071.cljs$core$IIndexed$_nth$arity$2(null,i__27073);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27074,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27074,(1),null);
var G__27075_27088 = v;
var G__27076_27089 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27075_27088,G__27076_27089) : f.call(null,G__27075_27088,G__27076_27089));

var G__27090 = seq__27070;
var G__27091 = chunk__27071;
var G__27092 = count__27072;
var G__27093 = (i__27073 + (1));
seq__27070 = G__27090;
chunk__27071 = G__27091;
count__27072 = G__27092;
i__27073 = G__27093;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27070);
if(temp__4126__auto__){
var seq__27070__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27070__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27070__$1);
var G__27094 = cljs.core.chunk_rest(seq__27070__$1);
var G__27095 = c__16932__auto__;
var G__27096 = cljs.core.count(c__16932__auto__);
var G__27097 = (0);
seq__27070 = G__27094;
chunk__27071 = G__27095;
count__27072 = G__27096;
i__27073 = G__27097;
continue;
} else {
var vec__27077 = cljs.core.first(seq__27070__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27077,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27077,(1),null);
var G__27078_27098 = v;
var G__27079_27099 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27078_27098,G__27079_27099) : f.call(null,G__27078_27098,G__27079_27099));

var G__27100 = cljs.core.next(seq__27070__$1);
var G__27101 = null;
var G__27102 = (0);
var G__27103 = (0);
seq__27070 = G__27100;
chunk__27071 = G__27101;
count__27072 = G__27102;
i__27073 = G__27103;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27080 = init__$1;
var G__27081 = (self__.arr[i]);
var G__27082 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27080,G__27081,G__27082) : f.call(null,G__27080,G__27081,G__27082));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27083 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27083) : cljs.core.deref.call(null,G__27083));
} else {
var G__27104 = (i + (2));
var G__27105 = init__$2;
i = G__27104;
init__$1 = G__27105;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27084 = other;
if(G__27084){
var bit__16819__auto__ = (G__27084.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16819__auto__) || (G__27084.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27106 = (i + (2));
i = G__27106;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27086 = {};
return obj27086;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27107 = (s + (2));
var G__27108 = d;
s = G__27107;
d = G__27108;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27109 = (s + (2));
var G__27110 = (d + (2));
s = G__27109;
d = G__27110;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27087 = cljs.core.aclone(self__.arr);
(G__27087[(idx + (1))] = v);

return G__27087;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27111 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27112 = cljs.core.next(es);
ret = G__27111;
es = G__27112;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27113 = null;
var G__27113__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27113__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27113 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27113__2.call(this,self__,k);
case 3:
return G__27113__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27113.cljs$core$IFn$_invoke$arity$2 = G__27113__2;
G__27113.cljs$core$IFn$_invoke$arity$3 = G__27113__3;
return G__27113;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args27067){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27067)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27114 = (i + (2));
var G__27115 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27114;
ret = G__27115;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27116_27124 = self__.arr;
G__27116_27124.pop();

G__27116_27124.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27117 = self__.len;
var G__27118 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27117,G__27118) : cljs.core.array__GT_transient_hash_map.call(null,G__27117,G__27118));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27119 = o;
if(G__27119){
var bit__16826__auto__ = (G__27119.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__27119.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27119.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27119);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27119);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27120 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27120) : cljs.core.key.call(null,G__27120));
})(),(function (){var G__27121 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27121) : cljs.core.val.call(null,G__27121));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27125 = cljs.core.next(es);
var G__27126 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27122 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27122) : cljs.core.key.call(null,G__27122));
})(),(function (){var G__27123 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27123) : cljs.core.val.call(null,G__27123));
})());
es = G__27125;
tcoll__$2 = G__27126;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27127 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27128 = (i + (2));
out = G__27127;
i = G__27128;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27131 = cljs.core.aclone(arr);
(G__27131[i] = a);

return G__27131;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27132 = cljs.core.aclone(arr);
(G__27132[i] = a);

(G__27132[j] = b);

return G__27132;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27137 = init__$1;
var G__27138 = k;
var G__27139 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27137,G__27138,G__27139) : f.call(null,G__27137,G__27138,G__27139));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27140 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27140) : cljs.core.deref.call(null,G__27140));
} else {
var G__27141 = (i + (2));
var G__27142 = init__$2;
i = G__27141;
init__$1 = G__27142;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27143 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27143) : cljs.core.create_inode_seq.call(null,G__27143));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27157 = (0);
var j_27158 = (0);
while(true){
if((i_27157 < (32))){
if((((self__.bitmap >>> i_27157) & (1)) === (0))){
var G__27159 = (i_27157 + (1));
var G__27160 = j_27158;
i_27157 = G__27159;
j_27158 = G__27160;
continue;
} else {
(nodes[i_27157] = ((!(((self__.arr[j_27158]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27158])),(self__.arr[j_27158]),(self__.arr[(j_27158 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27158 + (1))])));

var G__27161 = (i_27157 + (1));
var G__27162 = (j_27158 + (2));
i_27157 = G__27161;
j_27158 = G__27162;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27144 = edit__$1;
var G__27145 = (shift + (5));
var G__27146 = key_or_nil;
var G__27147 = val_or_node;
var G__27148 = hash;
var G__27149 = key;
var G__27150 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27144,G__27145,G__27146,G__27147,G__27148,G__27149,G__27150) : cljs.core.create_node.call(null,G__27144,G__27145,G__27146,G__27147,G__27148,G__27149,G__27150));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27163 = (0);
var j_27164 = (0);
while(true){
if((i_27163 < (32))){
if((((self__.bitmap >>> i_27163) & (1)) === (0))){
var G__27165 = (i_27163 + (1));
var G__27166 = j_27164;
i_27163 = G__27165;
j_27164 = G__27166;
continue;
} else {
(nodes[i_27163] = ((!(((self__.arr[j_27164]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27164])),(self__.arr[j_27164]),(self__.arr[(j_27164 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27164 + (1))])));

var G__27167 = (i_27163 + (1));
var G__27168 = (j_27164 + (2));
i_27163 = G__27167;
j_27164 = G__27168;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27151 = (shift + (5));
var G__27152 = key_or_nil;
var G__27153 = val_or_node;
var G__27154 = hash;
var G__27155 = key;
var G__27156 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27151,G__27152,G__27153,G__27154,G__27155,G__27156) : cljs.core.create_node.call(null,G__27151,G__27152,G__27153,G__27154,G__27155,G__27156));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27169 = (i + (1));
var G__27170 = (j + (2));
var G__27171 = (bitmap | ((1) << i));
i = G__27169;
j = G__27170;
bitmap = G__27171;
continue;
} else {
var G__27172 = (i + (1));
var G__27173 = j;
var G__27174 = bitmap;
i = G__27172;
j = G__27173;
bitmap = G__27174;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27175 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27175) : cljs.core.create_array_node_seq.call(null,G__27175));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27176 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27176) : cljs.core.deref.call(null,G__27176));
} else {
var G__27177 = (i + (1));
var G__27178 = init__$2;
i = G__27177;
init__$1 = G__27178;
continue;
}
} else {
var G__27179 = (i + (1));
var G__27180 = init__$1;
i = G__27179;
init__$1 = G__27180;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27181 = (i + (2));
i = G__27181;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27182 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27182) : cljs.core.create_inode_seq.call(null,G__27182));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27183 = self__.nodes;
var G__27184 = (self__.i + (2));
var G__27185 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27183,G__27184,G__27185) : cljs.core.create_inode_seq.call(null,G__27183,G__27184,G__27185));
} else {
var G__27186 = self__.nodes;
var G__27187 = self__.i;
var G__27188 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27186,G__27187,G__27188) : cljs.core.create_inode_seq.call(null,G__27186,G__27187,G__27188));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27192 = (j + (2));
j = G__27192;
continue;
}
} else {
var G__27193 = (j + (2));
j = G__27193;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27194 = null;
var G__27195 = self__.nodes;
var G__27196 = self__.i;
var G__27197 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27194,G__27195,G__27196,G__27197) : cljs.core.create_array_node_seq.call(null,G__27194,G__27195,G__27196,G__27197));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27202 = (j + (1));
j = G__27202;
continue;
}
} else {
var G__27203 = (j + (1));
j = G__27203;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27205 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27205) : cljs.core.keys.call(null,G__27205));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27206 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27206) : cljs.core.vals.call(null,G__27206));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27207 = cljs.core.seq(coll);
var chunk__27208 = null;
var count__27209 = (0);
var i__27210 = (0);
while(true){
if((i__27210 < count__27209)){
var vec__27211 = chunk__27208.cljs$core$IIndexed$_nth$arity$2(null,i__27210);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27211,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27211,(1),null);
var G__27212_27223 = v;
var G__27213_27224 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27212_27223,G__27213_27224) : f.call(null,G__27212_27223,G__27213_27224));

var G__27225 = seq__27207;
var G__27226 = chunk__27208;
var G__27227 = count__27209;
var G__27228 = (i__27210 + (1));
seq__27207 = G__27225;
chunk__27208 = G__27226;
count__27209 = G__27227;
i__27210 = G__27228;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27207);
if(temp__4126__auto__){
var seq__27207__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27207__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27207__$1);
var G__27229 = cljs.core.chunk_rest(seq__27207__$1);
var G__27230 = c__16932__auto__;
var G__27231 = cljs.core.count(c__16932__auto__);
var G__27232 = (0);
seq__27207 = G__27229;
chunk__27208 = G__27230;
count__27209 = G__27231;
i__27210 = G__27232;
continue;
} else {
var vec__27214 = cljs.core.first(seq__27207__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27214,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27214,(1),null);
var G__27215_27233 = v;
var G__27216_27234 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27215_27233,G__27216_27234) : f.call(null,G__27215_27233,G__27216_27234));

var G__27235 = cljs.core.next(seq__27207__$1);
var G__27236 = null;
var G__27237 = (0);
var G__27238 = (0);
seq__27207 = G__27235;
chunk__27208 = G__27236;
count__27209 = G__27237;
i__27210 = G__27238;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27217 = init;
var G__27218 = null;
var G__27219 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27217,G__27218,G__27219) : f.call(null,G__27217,G__27218,G__27219));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27220 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27220) : cljs.core.deref.call(null,G__27220));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27222 = {};
return obj27222;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27239 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27240 = cljs.core.next(es);
ret = G__27239;
es = G__27240;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27241 = null;
var G__27241__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27241__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27241 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27241__2.call(this,self__,k);
case 3:
return G__27241__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27241.cljs$core$IFn$_invoke$arity$2 = G__27241__2;
G__27241.cljs$core$IFn$_invoke$arity$3 = G__27241__3;
return G__27241;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27204){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27204)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27242 = (i + (2));
var G__27243 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27242;
ret = G__27243;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27244 = (i + (1));
var G__27245 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27244;
out = G__27245;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27246 = o;
if(G__27246){
var bit__16826__auto__ = (G__27246.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__27246.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27246.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27246);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27246);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27247 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27247) : cljs.core.key.call(null,G__27247));
})(),(function (){var G__27248 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27248) : cljs.core.val.call(null,G__27248));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27251 = cljs.core.next(es);
var G__27252 = tcoll__$1.assoc_BANG_((function (){var G__27249 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27249) : cljs.core.key.call(null,G__27249));
})(),(function (){var G__27250 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27250) : cljs.core.val.call(null,G__27250));
})());
es = G__27251;
tcoll__$1 = G__27252;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27253 = ((ascending_QMARK_)?t.left:t.right);
var G__27254 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27253;
stack__$1 = G__27254;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27267 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27267) : cljs.core.deref.call(null,G__27267));
} else {
var init__$2 = (function (){var G__27268 = init__$1;
var G__27269 = node.key;
var G__27270 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27268,G__27269,G__27270) : f.call(null,G__27268,G__27269,G__27270));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27271 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27271) : cljs.core.deref.call(null,G__27271));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27272 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27272) : cljs.core.deref.call(null,G__27272));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27274 = null;
var G__27274__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27274__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27274 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27274__2.call(this,self__,k);
case 3:
return G__27274__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27274.cljs$core$IFn$_invoke$arity$2 = G__27274__2;
G__27274.cljs$core$IFn$_invoke$arity$3 = G__27274__3;
return G__27274;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27273){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27273)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27276 = null;
var G__27276__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27276__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27276 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27276__2.call(this,self__,k);
case 3:
return G__27276__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27276.cljs$core$IFn$_invoke$arity$2 = G__27276__2;
G__27276.cljs$core$IFn$_invoke$arity$3 = G__27276__3;
return G__27276;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27275){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27275)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27289 = k;
var G__27290 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27289,G__27290) : comp.call(null,G__27289,G__27290));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27309 = k;
var G__27310 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27309,G__27310) : comp.call(null,G__27309,G__27310));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27321 = k;
var G__27322 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27321,G__27322) : comp.call(null,G__27321,G__27322));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27324 = cljs.core.seq(coll);
var chunk__27325 = null;
var count__27326 = (0);
var i__27327 = (0);
while(true){
if((i__27327 < count__27326)){
var vec__27328 = chunk__27325.cljs$core$IIndexed$_nth$arity$2(null,i__27327);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27328,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27328,(1),null);
var G__27329_27341 = v;
var G__27330_27342 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27329_27341,G__27330_27342) : f.call(null,G__27329_27341,G__27330_27342));

var G__27343 = seq__27324;
var G__27344 = chunk__27325;
var G__27345 = count__27326;
var G__27346 = (i__27327 + (1));
seq__27324 = G__27343;
chunk__27325 = G__27344;
count__27326 = G__27345;
i__27327 = G__27346;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27324);
if(temp__4126__auto__){
var seq__27324__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27324__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27324__$1);
var G__27347 = cljs.core.chunk_rest(seq__27324__$1);
var G__27348 = c__16932__auto__;
var G__27349 = cljs.core.count(c__16932__auto__);
var G__27350 = (0);
seq__27324 = G__27347;
chunk__27325 = G__27348;
count__27326 = G__27349;
i__27327 = G__27350;
continue;
} else {
var vec__27331 = cljs.core.first(seq__27324__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27331,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27331,(1),null);
var G__27332_27351 = v;
var G__27333_27352 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27332_27351,G__27333_27352) : f.call(null,G__27332_27351,G__27333_27352));

var G__27353 = cljs.core.next(seq__27324__$1);
var G__27354 = null;
var G__27355 = (0);
var G__27356 = (0);
seq__27324 = G__27353;
chunk__27325 = G__27354;
count__27326 = G__27355;
i__27327 = G__27356;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27334 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27334) : cljs.core.keys.call(null,G__27334));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27335 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27335) : cljs.core.vals.call(null,G__27335));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27336 = k;
var G__27337 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27336,G__27337) : self__.comp.call(null,G__27336,G__27337));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27357 = t.left;
t = G__27357;
continue;
} else {
var G__27358 = t.right;
t = G__27358;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27359 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27360 = cljs.core.next(es);
ret = G__27359;
es = G__27360;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27361 = null;
var G__27361__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27361__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27361 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27361__2.call(this,self__,k);
case 3:
return G__27361__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27361.cljs$core$IFn$_invoke$arity$2 = G__27361__2;
G__27361.cljs$core$IFn$_invoke$arity$3 = G__27361__3;
return G__27361;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27323){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27323)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27338 = k;
var G__27339 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27338,G__27339) : self__.comp.call(null,G__27338,G__27339));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27362 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27363 = t.left;
stack = G__27362;
t = G__27363;
continue;
} else {
var G__27364 = stack;
var G__27365 = t.right;
stack = G__27364;
t = G__27365;
continue;
}
} else {
if((c > (0))){
var G__27366 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27367 = t.right;
stack = G__27366;
t = G__27367;
continue;
} else {
var G__27368 = stack;
var G__27369 = t.left;
stack = G__27368;
t = G__27369;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27340 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27340) : cljs.core.key.call(null,G__27340));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27370 = cljs.core.nnext(in$);
var G__27371 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27370;
out = G__27371;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27372__i = 0, G__27372__a = new Array(arguments.length -  0);
while (G__27372__i < G__27372__a.length) {G__27372__a[G__27372__i] = arguments[G__27372__i + 0]; ++G__27372__i;}
  keyvals = new cljs.core.IndexedSeq(G__27372__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27373){
var keyvals = cljs.core.seq(arglist__27373);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27374__i = 0, G__27374__a = new Array(arguments.length -  0);
while (G__27374__i < G__27374__a.length) {G__27374__a[G__27374__i] = arguments[G__27374__i + 0]; ++G__27374__i;}
  keyvals = new cljs.core.IndexedSeq(G__27374__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27375){
var keyvals = cljs.core.seq(arglist__27375);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27379 = {};
return obj27379;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27380 = cljs.core.nnext(kvs);
kvs = G__27380;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27381__i = 0, G__27381__a = new Array(arguments.length -  0);
while (G__27381__i < G__27381__a.length) {G__27381__a[G__27381__i] = arguments[G__27381__i + 0]; ++G__27381__i;}
  keyvals = new cljs.core.IndexedSeq(G__27381__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27382){
var keyvals = cljs.core.seq(arglist__27382);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27383 = cljs.core.nnext(in$);
var G__27384 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27383;
out = G__27384;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27385__i = 0, G__27385__a = new Array(arguments.length -  0);
while (G__27385__i < G__27385__a.length) {G__27385__a[G__27385__i] = arguments[G__27385__i + 0]; ++G__27385__i;}
  keyvals = new cljs.core.IndexedSeq(G__27385__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27386){
var keyvals = cljs.core.seq(arglist__27386);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27387 = cljs.core.nnext(in$);
var G__27388 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27387;
out = G__27388;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27389__i = 0, G__27389__a = new Array(arguments.length -  1);
while (G__27389__i < G__27389__a.length) {G__27389__a[G__27389__i] = arguments[G__27389__i + 1]; ++G__27389__i;}
  keyvals = new cljs.core.IndexedSeq(G__27389__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27390){
var comparator = cljs.core.first(arglist__27390);
var keyvals = cljs.core.rest(arglist__27390);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27391 = self__.mseq;
if(G__27391){
var bit__16826__auto__ = (G__27391.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27391.cljs$core$INext$)){
return true;
} else {
if((!G__27391.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27391);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27391);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27392 = self__.mseq;
if(G__27392){
var bit__16826__auto__ = (G__27392.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27392.cljs$core$INext$)){
return true;
} else {
if((!G__27392.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27392);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27392);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27393 = self__.mseq;
if(G__27393){
var bit__16826__auto__ = (G__27393.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27393.cljs$core$INext$)){
return true;
} else {
if((!G__27393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27393);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27394 = self__.mseq;
if(G__27394){
var bit__16826__auto__ = (G__27394.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27394.cljs$core$INext$)){
return true;
} else {
if((!G__27394.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27394);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27394);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27395_SHARP_,p2__27396_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = p1__27395_SHARP_;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27396_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27397__i = 0, G__27397__a = new Array(arguments.length -  0);
while (G__27397__i < G__27397__a.length) {G__27397__a[G__27397__i] = arguments[G__27397__i + 0]; ++G__27397__i;}
  maps = new cljs.core.IndexedSeq(G__27397__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27398){
var maps = cljs.core.seq(arglist__27398);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27401 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27402 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27401,G__27402) : f.call(null,G__27401,G__27402));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__16145__auto__ = m1;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27403__i = 0, G__27403__a = new Array(arguments.length -  1);
while (G__27403__i < G__27403__a.length) {G__27403__a[G__27403__i] = arguments[G__27403__i + 1]; ++G__27403__i;}
  maps = new cljs.core.IndexedSeq(G__27403__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27404){
var f = cljs.core.first(arglist__27404);
var maps = cljs.core.rest(arglist__27404);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27405 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27406 = cljs.core.next(keys);
ret = G__27405;
keys = G__27406;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27409 = cljs.core.seq(coll);
var chunk__27410 = null;
var count__27411 = (0);
var i__27412 = (0);
while(true){
if((i__27412 < count__27411)){
var vec__27413 = chunk__27410.cljs$core$IIndexed$_nth$arity$2(null,i__27412);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27413,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27413,(1),null);
var G__27414_27419 = v;
var G__27415_27420 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27414_27419,G__27415_27420) : f.call(null,G__27414_27419,G__27415_27420));

var G__27421 = seq__27409;
var G__27422 = chunk__27410;
var G__27423 = count__27411;
var G__27424 = (i__27412 + (1));
seq__27409 = G__27421;
chunk__27410 = G__27422;
count__27411 = G__27423;
i__27412 = G__27424;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27409);
if(temp__4126__auto__){
var seq__27409__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27409__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27409__$1);
var G__27425 = cljs.core.chunk_rest(seq__27409__$1);
var G__27426 = c__16932__auto__;
var G__27427 = cljs.core.count(c__16932__auto__);
var G__27428 = (0);
seq__27409 = G__27425;
chunk__27410 = G__27426;
count__27411 = G__27427;
i__27412 = G__27428;
continue;
} else {
var vec__27416 = cljs.core.first(seq__27409__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27416,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27416,(1),null);
var G__27417_27429 = v;
var G__27418_27430 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27417_27429,G__27418_27430) : f.call(null,G__27417_27429,G__27418_27430));

var G__27431 = cljs.core.next(seq__27409__$1);
var G__27432 = null;
var G__27433 = (0);
var G__27434 = (0);
seq__27409 = G__27431;
chunk__27410 = G__27432;
count__27411 = G__27433;
i__27412 = G__27434;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27407_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27407_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27435 = null;
var G__27435__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27435__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27435 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27435__2.call(this,self__,k);
case 3:
return G__27435__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27435.cljs$core$IFn$_invoke$arity$2 = G__27435__2;
G__27435.cljs$core$IFn$_invoke$arity$3 = G__27435__3;
return G__27435;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27408){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27408)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27436 = (i + (1));
var G__27437 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27436;
out = G__27437;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27438 = (i + (1));
var G__27439 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27438;
out = G__27439;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27441 = null;
var G__27441__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27441__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27441 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27441__2.call(this,self__,k);
case 3:
return G__27441__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27441.cljs$core$IFn$_invoke$arity$2 = G__27441__2;
G__27441.cljs$core$IFn$_invoke$arity$3 = G__27441__3;
return G__27441;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27440){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27440)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27444 = cljs.core.seq(coll);
var chunk__27445 = null;
var count__27446 = (0);
var i__27447 = (0);
while(true){
if((i__27447 < count__27446)){
var vec__27448 = chunk__27445.cljs$core$IIndexed$_nth$arity$2(null,i__27447);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27448,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27448,(1),null);
var G__27449_27454 = v;
var G__27450_27455 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27449_27454,G__27450_27455) : f.call(null,G__27449_27454,G__27450_27455));

var G__27456 = seq__27444;
var G__27457 = chunk__27445;
var G__27458 = count__27446;
var G__27459 = (i__27447 + (1));
seq__27444 = G__27456;
chunk__27445 = G__27457;
count__27446 = G__27458;
i__27447 = G__27459;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27444);
if(temp__4126__auto__){
var seq__27444__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27444__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27444__$1);
var G__27460 = cljs.core.chunk_rest(seq__27444__$1);
var G__27461 = c__16932__auto__;
var G__27462 = cljs.core.count(c__16932__auto__);
var G__27463 = (0);
seq__27444 = G__27460;
chunk__27445 = G__27461;
count__27446 = G__27462;
i__27447 = G__27463;
continue;
} else {
var vec__27451 = cljs.core.first(seq__27444__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27451,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27451,(1),null);
var G__27452_27464 = v;
var G__27453_27465 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27452_27464,G__27453_27465) : f.call(null,G__27452_27464,G__27453_27465));

var G__27466 = cljs.core.next(seq__27444__$1);
var G__27467 = null;
var G__27468 = (0);
var G__27469 = (0);
seq__27444 = G__27466;
chunk__27445 = G__27467;
count__27446 = G__27468;
i__27447 = G__27469;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27442_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27442_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27470 = null;
var G__27470__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27470__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27470 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27470__2.call(this,self__,k);
case 3:
return G__27470__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27470.cljs$core$IFn$_invoke$arity$2 = G__27470__2;
G__27470.cljs$core$IFn$_invoke$arity$3 = G__27470__3;
return G__27470;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27443){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27443)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__17026__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__17026__auto__.length)){
var G__27471 = (i + (1));
var G__27472 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27471;
res = G__27472;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27473 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27474 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27473;
out = G__27474;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27475__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27475 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27476__i = 0, G__27476__a = new Array(arguments.length -  0);
while (G__27476__i < G__27476__a.length) {G__27476__a[G__27476__i] = arguments[G__27476__i + 0]; ++G__27476__i;}
  keys = new cljs.core.IndexedSeq(G__27476__a,0);
} 
return G__27475__delegate.call(this,keys);};
G__27475.cljs$lang$maxFixedArity = 0;
G__27475.cljs$lang$applyTo = (function (arglist__27477){
var keys = cljs.core.seq(arglist__27477);
return G__27475__delegate(keys);
});
G__27475.cljs$core$IFn$_invoke$arity$variadic = G__27475__delegate;
return G__27475;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27478 = null;
if (arguments.length > 0) {
var G__27479__i = 0, G__27479__a = new Array(arguments.length -  0);
while (G__27479__i < G__27479__a.length) {G__27479__a[G__27479__i] = arguments[G__27479__i + 0]; ++G__27479__i;}
G__27478 = new cljs.core.IndexedSeq(G__27479__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27480__i = 0, G__27480__a = new Array(arguments.length -  0);
while (G__27480__i < G__27480__a.length) {G__27480__a[G__27480__i] = arguments[G__27480__i + 0]; ++G__27480__i;}
  keys = new cljs.core.IndexedSeq(G__27480__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27481){
var keys = cljs.core.seq(arglist__27481);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27482__i = 0, G__27482__a = new Array(arguments.length -  1);
while (G__27482__i < G__27482__a.length) {G__27482__a[G__27482__i] = arguments[G__27482__i + 1]; ++G__27482__i;}
  keys = new cljs.core.IndexedSeq(G__27482__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27483){
var comparator = cljs.core.first(arglist__27483);
var keys = cljs.core.rest(arglist__27483);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27484_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27484_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27484_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27485_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27485_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27485_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27506 = null;
var G__27506__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27506__1 = (function (result){
var G__27496 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27496) : rf.call(null,G__27496));
});
var G__27506__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27497 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27497) : cljs.core.deref.call(null,G__27497));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27498 = result;
var G__27499 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27498,G__27499) : rf.call(null,G__27498,G__27499));
}
});
G__27506 = function(result,input){
switch(arguments.length){
case 0:
return G__27506__0.call(this);
case 1:
return G__27506__1.call(this,result);
case 2:
return G__27506__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27506.cljs$core$IFn$_invoke$arity$0 = G__27506__0;
G__27506.cljs$core$IFn$_invoke$arity$1 = G__27506__1;
G__27506.cljs$core$IFn$_invoke$arity$2 = G__27506__2;
return G__27506;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27504,seen__$1){
while(true){
var vec__27505 = p__27504;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27505,(0),null);
var xs__$1 = vec__27505;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27507 = cljs.core.rest(s);
var G__27508 = seen__$1;
p__27504 = G__27507;
seen__$1 = G__27508;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27509 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27510 = cljs.core.next(s__$1);
ret = G__27509;
s__$1 = G__27510;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27512 = x;
if(G__27512){
var bit__16819__auto__ = (G__27512.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__27512.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27513 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27514 = cljs.core.next(ks);
var G__27515 = cljs.core.next(vs);
map = G__27513;
ks = G__27514;
vs = G__27515;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27526 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27526) : k.call(null,G__27526));
})() > (function (){var G__27527 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27527) : k.call(null,G__27527));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27528__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27516_SHARP_,p2__27517_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27516_SHARP_,p2__27517_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27528 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27529__i = 0, G__27529__a = new Array(arguments.length -  3);
while (G__27529__i < G__27529__a.length) {G__27529__a[G__27529__i] = arguments[G__27529__i + 3]; ++G__27529__i;}
  more = new cljs.core.IndexedSeq(G__27529__a,0);
} 
return G__27528__delegate.call(this,k,x,y,more);};
G__27528.cljs$lang$maxFixedArity = 3;
G__27528.cljs$lang$applyTo = (function (arglist__27530){
var k = cljs.core.first(arglist__27530);
arglist__27530 = cljs.core.next(arglist__27530);
var x = cljs.core.first(arglist__27530);
arglist__27530 = cljs.core.next(arglist__27530);
var y = cljs.core.first(arglist__27530);
var more = cljs.core.rest(arglist__27530);
return G__27528__delegate(k,x,y,more);
});
G__27528.cljs$core$IFn$_invoke$arity$variadic = G__27528__delegate;
return G__27528;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27531 = null;
if (arguments.length > 3) {
var G__27532__i = 0, G__27532__a = new Array(arguments.length -  3);
while (G__27532__i < G__27532__a.length) {G__27532__a[G__27532__i] = arguments[G__27532__i + 3]; ++G__27532__i;}
G__27531 = new cljs.core.IndexedSeq(G__27532__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27543 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27543) : k.call(null,G__27543));
})() < (function (){var G__27544 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27544) : k.call(null,G__27544));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27545__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27533_SHARP_,p2__27534_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27533_SHARP_,p2__27534_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27545 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27546__i = 0, G__27546__a = new Array(arguments.length -  3);
while (G__27546__i < G__27546__a.length) {G__27546__a[G__27546__i] = arguments[G__27546__i + 3]; ++G__27546__i;}
  more = new cljs.core.IndexedSeq(G__27546__a,0);
} 
return G__27545__delegate.call(this,k,x,y,more);};
G__27545.cljs$lang$maxFixedArity = 3;
G__27545.cljs$lang$applyTo = (function (arglist__27547){
var k = cljs.core.first(arglist__27547);
arglist__27547 = cljs.core.next(arglist__27547);
var x = cljs.core.first(arglist__27547);
arglist__27547 = cljs.core.next(arglist__27547);
var y = cljs.core.first(arglist__27547);
var more = cljs.core.rest(arglist__27547);
return G__27545__delegate(k,x,y,more);
});
G__27545.cljs$core$IFn$_invoke$arity$variadic = G__27545__delegate;
return G__27545;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27548 = null;
if (arguments.length > 3) {
var G__27549__i = 0, G__27549__a = new Array(arguments.length -  3);
while (G__27549__i < G__27549__a.length) {G__27549__a[G__27549__i] = arguments[G__27549__i + 3]; ++G__27549__i;}
G__27548 = new cljs.core.IndexedSeq(G__27549__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27566 = null;
var G__27566__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27566__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27561 = result;
var G__27562 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27561,G__27562) : rf.call(null,G__27561,G__27562));
})());
})());
var G__27563 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27563) : rf.call(null,G__27563));
});
var G__27566__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27564 = result;
var G__27565 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27564,G__27565) : rf.call(null,G__27564,G__27565));
} else {
return result;
}
});
G__27566 = function(result,input){
switch(arguments.length){
case 0:
return G__27566__0.call(this);
case 1:
return G__27566__1.call(this,result);
case 2:
return G__27566__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27566.cljs$core$IFn$_invoke$arity$0 = G__27566__0;
G__27566.cljs$core$IFn$_invoke$arity$1 = G__27566__1;
G__27566.cljs$core$IFn$_invoke$arity$2 = G__27566__2;
return G__27566;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27579 = null;
var G__27579__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27579__1 = (function (result){
var G__27574 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27574) : rf.call(null,G__27574));
});
var G__27579__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27575 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27575) : pred.call(null,G__27575));
})())){
var G__27576 = result;
var G__27577 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27576,G__27577) : rf.call(null,G__27576,G__27577));
} else {
return cljs.core.reduced(result);
}
});
G__27579 = function(result,input){
switch(arguments.length){
case 0:
return G__27579__0.call(this);
case 1:
return G__27579__1.call(this,result);
case 2:
return G__27579__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27579.cljs$core$IFn$_invoke$arity$0 = G__27579__0;
G__27579.cljs$core$IFn$_invoke$arity$1 = G__27579__1;
G__27579.cljs$core$IFn$_invoke$arity$2 = G__27579__2;
return G__27579;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27578 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27578) : pred.call(null,G__27578));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27584 = (function (){var G__27586 = cljs.core._entry_key(sc,e);
var G__27587 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27586,G__27587) : comp.call(null,G__27586,G__27587));
})();
var G__27585 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27584,G__27585) : test.call(null,G__27584,G__27585));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27591 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27591,(0),null);
var s = vec__27591;
if(cljs.core.truth_((function (){var G__27592 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27592) : include.call(null,G__27592));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27593 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27593,(0),null);
var s = vec__27593;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27597 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27597,(0),null);
var s = vec__27597;
if(cljs.core.truth_((function (){var G__27598 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27598) : include.call(null,G__27598));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27599 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27599,(0),null);
var s = vec__27599;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27600 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27600) : Math.ceil.call(null,G__27600));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27601 = ret;
var G__27602 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27601,G__27602) : f.call(null,G__27601,G__27602));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27603 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27603) : cljs.core.deref.call(null,G__27603));
} else {
var G__27604 = (i + self__.step);
var G__27605 = ret__$1;
i = G__27604;
ret = G__27605;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27623 = null;
var G__27623__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27623__1 = (function (result){
var G__27620 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27620) : rf.call(null,G__27620));
});
var G__27623__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27621 = result;
var G__27622 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27621,G__27622) : rf.call(null,G__27621,G__27622));
} else {
return result;
}
});
G__27623 = function(result,input){
switch(arguments.length){
case 0:
return G__27623__0.call(this);
case 1:
return G__27623__1.call(this,result);
case 2:
return G__27623__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27623.cljs$core$IFn$_invoke$arity$0 = G__27623__0;
G__27623.cljs$core$IFn$_invoke$arity$1 = G__27623__1;
G__27623.cljs$core$IFn$_invoke$arity$2 = G__27623__2;
return G__27623;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__27645 = null;
var G__27645__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27645__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27636 = result;
var G__27637 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27636,G__27637) : rf.call(null,G__27636,G__27637));
})());
})());
var G__27638 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27638) : rf.call(null,G__27638));
});
var G__27645__2 = (function (result,input){
var pval = (function (){var G__27639 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27639) : cljs.core.deref.call(null,G__27639));
})();
var val = (function (){var G__27640 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27640) : f.call(null,G__27640));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27641 = result;
var G__27642 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27641,G__27642) : rf.call(null,G__27641,G__27642));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27645 = function(result,input){
switch(arguments.length){
case 0:
return G__27645__0.call(this);
case 1:
return G__27645__1.call(this,result);
case 2:
return G__27645__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27645.cljs$core$IFn$_invoke$arity$0 = G__27645__0;
G__27645.cljs$core$IFn$_invoke$arity$1 = G__27645__1;
G__27645.cljs$core$IFn$_invoke$arity$2 = G__27645__2;
return G__27645;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27643 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27643) : f.call(null,G__27643));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27624_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27644 = p1__27624_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27644) : f.call(null,G__27644));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27654 = init;
var G__27655 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27654,G__27655) : f.call(null,G__27654,G__27655));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27750 = null;
var G__27750__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27750__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27708 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27708) : f.call(null,G__27708));
})()],null));
});
var G__27750__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27709 = x;
var G__27710 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27709,G__27710) : f.call(null,G__27709,G__27710));
})()],null));
});
var G__27750__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27711 = x;
var G__27712 = y;
var G__27713 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27711,G__27712,G__27713) : f.call(null,G__27711,G__27712,G__27713));
})()],null));
});
var G__27750__4 = (function() { 
var G__27751__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27751 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27752__i = 0, G__27752__a = new Array(arguments.length -  3);
while (G__27752__i < G__27752__a.length) {G__27752__a[G__27752__i] = arguments[G__27752__i + 3]; ++G__27752__i;}
  args = new cljs.core.IndexedSeq(G__27752__a,0);
} 
return G__27751__delegate.call(this,x,y,z,args);};
G__27751.cljs$lang$maxFixedArity = 3;
G__27751.cljs$lang$applyTo = (function (arglist__27753){
var x = cljs.core.first(arglist__27753);
arglist__27753 = cljs.core.next(arglist__27753);
var y = cljs.core.first(arglist__27753);
arglist__27753 = cljs.core.next(arglist__27753);
var z = cljs.core.first(arglist__27753);
var args = cljs.core.rest(arglist__27753);
return G__27751__delegate(x,y,z,args);
});
G__27751.cljs$core$IFn$_invoke$arity$variadic = G__27751__delegate;
return G__27751;
})()
;
G__27750 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27750__0.call(this);
case 1:
return G__27750__1.call(this,x);
case 2:
return G__27750__2.call(this,x,y);
case 3:
return G__27750__3.call(this,x,y,z);
default:
var G__27754 = null;
if (arguments.length > 3) {
var G__27755__i = 0, G__27755__a = new Array(arguments.length -  3);
while (G__27755__i < G__27755__a.length) {G__27755__a[G__27755__i] = arguments[G__27755__i + 3]; ++G__27755__i;}
G__27754 = new cljs.core.IndexedSeq(G__27755__a,0);
}
return G__27750__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27750.cljs$lang$maxFixedArity = 3;
G__27750.cljs$lang$applyTo = G__27750__4.cljs$lang$applyTo;
G__27750.cljs$core$IFn$_invoke$arity$0 = G__27750__0;
G__27750.cljs$core$IFn$_invoke$arity$1 = G__27750__1;
G__27750.cljs$core$IFn$_invoke$arity$2 = G__27750__2;
G__27750.cljs$core$IFn$_invoke$arity$3 = G__27750__3;
G__27750.cljs$core$IFn$_invoke$arity$variadic = G__27750__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27750;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27756 = null;
var G__27756__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27756__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27714 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27714) : f.call(null,G__27714));
})(),(function (){var G__27715 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27715) : g.call(null,G__27715));
})()],null));
});
var G__27756__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27716 = x;
var G__27717 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27716,G__27717) : f.call(null,G__27716,G__27717));
})(),(function (){var G__27718 = x;
var G__27719 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27718,G__27719) : g.call(null,G__27718,G__27719));
})()],null));
});
var G__27756__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27720 = x;
var G__27721 = y;
var G__27722 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27720,G__27721,G__27722) : f.call(null,G__27720,G__27721,G__27722));
})(),(function (){var G__27723 = x;
var G__27724 = y;
var G__27725 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27723,G__27724,G__27725) : g.call(null,G__27723,G__27724,G__27725));
})()],null));
});
var G__27756__4 = (function() { 
var G__27757__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27757 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27758__i = 0, G__27758__a = new Array(arguments.length -  3);
while (G__27758__i < G__27758__a.length) {G__27758__a[G__27758__i] = arguments[G__27758__i + 3]; ++G__27758__i;}
  args = new cljs.core.IndexedSeq(G__27758__a,0);
} 
return G__27757__delegate.call(this,x,y,z,args);};
G__27757.cljs$lang$maxFixedArity = 3;
G__27757.cljs$lang$applyTo = (function (arglist__27759){
var x = cljs.core.first(arglist__27759);
arglist__27759 = cljs.core.next(arglist__27759);
var y = cljs.core.first(arglist__27759);
arglist__27759 = cljs.core.next(arglist__27759);
var z = cljs.core.first(arglist__27759);
var args = cljs.core.rest(arglist__27759);
return G__27757__delegate(x,y,z,args);
});
G__27757.cljs$core$IFn$_invoke$arity$variadic = G__27757__delegate;
return G__27757;
})()
;
G__27756 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27756__0.call(this);
case 1:
return G__27756__1.call(this,x);
case 2:
return G__27756__2.call(this,x,y);
case 3:
return G__27756__3.call(this,x,y,z);
default:
var G__27760 = null;
if (arguments.length > 3) {
var G__27761__i = 0, G__27761__a = new Array(arguments.length -  3);
while (G__27761__i < G__27761__a.length) {G__27761__a[G__27761__i] = arguments[G__27761__i + 3]; ++G__27761__i;}
G__27760 = new cljs.core.IndexedSeq(G__27761__a,0);
}
return G__27756__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27756.cljs$lang$maxFixedArity = 3;
G__27756.cljs$lang$applyTo = G__27756__4.cljs$lang$applyTo;
G__27756.cljs$core$IFn$_invoke$arity$0 = G__27756__0;
G__27756.cljs$core$IFn$_invoke$arity$1 = G__27756__1;
G__27756.cljs$core$IFn$_invoke$arity$2 = G__27756__2;
G__27756.cljs$core$IFn$_invoke$arity$3 = G__27756__3;
G__27756.cljs$core$IFn$_invoke$arity$variadic = G__27756__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27756;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27762 = null;
var G__27762__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27762__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27726 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27726) : f.call(null,G__27726));
})(),(function (){var G__27727 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27727) : g.call(null,G__27727));
})(),(function (){var G__27728 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27728) : h.call(null,G__27728));
})()],null));
});
var G__27762__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27729 = x;
var G__27730 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27729,G__27730) : f.call(null,G__27729,G__27730));
})(),(function (){var G__27731 = x;
var G__27732 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27731,G__27732) : g.call(null,G__27731,G__27732));
})(),(function (){var G__27733 = x;
var G__27734 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27733,G__27734) : h.call(null,G__27733,G__27734));
})()],null));
});
var G__27762__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27735 = x;
var G__27736 = y;
var G__27737 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27735,G__27736,G__27737) : f.call(null,G__27735,G__27736,G__27737));
})(),(function (){var G__27738 = x;
var G__27739 = y;
var G__27740 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27738,G__27739,G__27740) : g.call(null,G__27738,G__27739,G__27740));
})(),(function (){var G__27741 = x;
var G__27742 = y;
var G__27743 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27741,G__27742,G__27743) : h.call(null,G__27741,G__27742,G__27743));
})()],null));
});
var G__27762__4 = (function() { 
var G__27763__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27763 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27764__i = 0, G__27764__a = new Array(arguments.length -  3);
while (G__27764__i < G__27764__a.length) {G__27764__a[G__27764__i] = arguments[G__27764__i + 3]; ++G__27764__i;}
  args = new cljs.core.IndexedSeq(G__27764__a,0);
} 
return G__27763__delegate.call(this,x,y,z,args);};
G__27763.cljs$lang$maxFixedArity = 3;
G__27763.cljs$lang$applyTo = (function (arglist__27765){
var x = cljs.core.first(arglist__27765);
arglist__27765 = cljs.core.next(arglist__27765);
var y = cljs.core.first(arglist__27765);
arglist__27765 = cljs.core.next(arglist__27765);
var z = cljs.core.first(arglist__27765);
var args = cljs.core.rest(arglist__27765);
return G__27763__delegate(x,y,z,args);
});
G__27763.cljs$core$IFn$_invoke$arity$variadic = G__27763__delegate;
return G__27763;
})()
;
G__27762 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27762__0.call(this);
case 1:
return G__27762__1.call(this,x);
case 2:
return G__27762__2.call(this,x,y);
case 3:
return G__27762__3.call(this,x,y,z);
default:
var G__27766 = null;
if (arguments.length > 3) {
var G__27767__i = 0, G__27767__a = new Array(arguments.length -  3);
while (G__27767__i < G__27767__a.length) {G__27767__a[G__27767__i] = arguments[G__27767__i + 3]; ++G__27767__i;}
G__27766 = new cljs.core.IndexedSeq(G__27767__a,0);
}
return G__27762__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27762.cljs$lang$maxFixedArity = 3;
G__27762.cljs$lang$applyTo = G__27762__4.cljs$lang$applyTo;
G__27762.cljs$core$IFn$_invoke$arity$0 = G__27762__0;
G__27762.cljs$core$IFn$_invoke$arity$1 = G__27762__1;
G__27762.cljs$core$IFn$_invoke$arity$2 = G__27762__2;
G__27762.cljs$core$IFn$_invoke$arity$3 = G__27762__3;
G__27762.cljs$core$IFn$_invoke$arity$variadic = G__27762__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27762;
})()
});
var juxt__4 = (function() { 
var G__27768__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27769 = null;
var G__27769__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27656_SHARP_,p2__27657_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27656_SHARP_,(function (){return (p2__27657_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27657_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27657_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27769__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27658_SHARP_,p2__27659_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27658_SHARP_,(function (){var G__27744 = x;
return (p2__27659_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27659_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27744) : p2__27659_SHARP_.call(null,G__27744));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27769__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27660_SHARP_,p2__27661_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27660_SHARP_,(function (){var G__27745 = x;
var G__27746 = y;
return (p2__27661_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27661_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27745,G__27746) : p2__27661_SHARP_.call(null,G__27745,G__27746));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27769__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27662_SHARP_,p2__27663_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27662_SHARP_,(function (){var G__27747 = x;
var G__27748 = y;
var G__27749 = z;
return (p2__27663_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27663_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27747,G__27748,G__27749) : p2__27663_SHARP_.call(null,G__27747,G__27748,G__27749));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27769__4 = (function() { 
var G__27770__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27664_SHARP_,p2__27665_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27664_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27665_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27770 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27771__i = 0, G__27771__a = new Array(arguments.length -  3);
while (G__27771__i < G__27771__a.length) {G__27771__a[G__27771__i] = arguments[G__27771__i + 3]; ++G__27771__i;}
  args = new cljs.core.IndexedSeq(G__27771__a,0);
} 
return G__27770__delegate.call(this,x,y,z,args);};
G__27770.cljs$lang$maxFixedArity = 3;
G__27770.cljs$lang$applyTo = (function (arglist__27772){
var x = cljs.core.first(arglist__27772);
arglist__27772 = cljs.core.next(arglist__27772);
var y = cljs.core.first(arglist__27772);
arglist__27772 = cljs.core.next(arglist__27772);
var z = cljs.core.first(arglist__27772);
var args = cljs.core.rest(arglist__27772);
return G__27770__delegate(x,y,z,args);
});
G__27770.cljs$core$IFn$_invoke$arity$variadic = G__27770__delegate;
return G__27770;
})()
;
G__27769 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27769__0.call(this);
case 1:
return G__27769__1.call(this,x);
case 2:
return G__27769__2.call(this,x,y);
case 3:
return G__27769__3.call(this,x,y,z);
default:
var G__27773 = null;
if (arguments.length > 3) {
var G__27774__i = 0, G__27774__a = new Array(arguments.length -  3);
while (G__27774__i < G__27774__a.length) {G__27774__a[G__27774__i] = arguments[G__27774__i + 3]; ++G__27774__i;}
G__27773 = new cljs.core.IndexedSeq(G__27774__a,0);
}
return G__27769__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27769.cljs$lang$maxFixedArity = 3;
G__27769.cljs$lang$applyTo = G__27769__4.cljs$lang$applyTo;
G__27769.cljs$core$IFn$_invoke$arity$0 = G__27769__0;
G__27769.cljs$core$IFn$_invoke$arity$1 = G__27769__1;
G__27769.cljs$core$IFn$_invoke$arity$2 = G__27769__2;
G__27769.cljs$core$IFn$_invoke$arity$3 = G__27769__3;
G__27769.cljs$core$IFn$_invoke$arity$variadic = G__27769__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27769;
})()
;})(fs__$1))
};
var G__27768 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27775__i = 0, G__27775__a = new Array(arguments.length -  3);
while (G__27775__i < G__27775__a.length) {G__27775__a[G__27775__i] = arguments[G__27775__i + 3]; ++G__27775__i;}
  fs = new cljs.core.IndexedSeq(G__27775__a,0);
} 
return G__27768__delegate.call(this,f,g,h,fs);};
G__27768.cljs$lang$maxFixedArity = 3;
G__27768.cljs$lang$applyTo = (function (arglist__27776){
var f = cljs.core.first(arglist__27776);
arglist__27776 = cljs.core.next(arglist__27776);
var g = cljs.core.first(arglist__27776);
arglist__27776 = cljs.core.next(arglist__27776);
var h = cljs.core.first(arglist__27776);
var fs = cljs.core.rest(arglist__27776);
return G__27768__delegate(f,g,h,fs);
});
G__27768.cljs$core$IFn$_invoke$arity$variadic = G__27768__delegate;
return G__27768;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27777 = null;
if (arguments.length > 3) {
var G__27778__i = 0, G__27778__a = new Array(arguments.length -  3);
while (G__27778__i < G__27778__a.length) {G__27778__a[G__27778__i] = arguments[G__27778__i + 3]; ++G__27778__i;}
G__27777 = new cljs.core.IndexedSeq(G__27778__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27779 = cljs.core.next(coll);
coll = G__27779;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27780 = (n - (1));
var G__27781 = cljs.core.next(coll);
n = G__27780;
coll = G__27781;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27785 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27785,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27785,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27785,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27793 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27794_27800 = cljs.core.first(coll);
var G__27795_27801 = writer;
var G__27796_27802 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27794_27800,G__27795_27801,G__27796_27802) : print_one.call(null,G__27794_27800,G__27795_27801,G__27796_27802));
} else {
}

var coll_27803__$1 = cljs.core.next(coll);
var n_27804 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27803__$1) && (((n_27804 == null)) || (!((n_27804 === (0)))))){
cljs.core._write(writer,sep);

var G__27797_27805 = cljs.core.first(coll_27803__$1);
var G__27798_27806 = writer;
var G__27799_27807 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27797_27805,G__27798_27806,G__27799_27807) : print_one.call(null,G__27797_27805,G__27798_27806,G__27799_27807));

var G__27808 = cljs.core.next(coll_27803__$1);
var G__27809 = (n_27804 - (1));
coll_27803__$1 = G__27808;
n_27804 = G__27809;
continue;
} else {
if((cljs.core.seq(coll_27803__$1)) && ((n_27804 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27793;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27814 = cljs.core.seq(ss);
var chunk__27815 = null;
var count__27816 = (0);
var i__27817 = (0);
while(true){
if((i__27817 < count__27816)){
var s = chunk__27815.cljs$core$IIndexed$_nth$arity$2(null,i__27817);
cljs.core._write(writer,s);

var G__27818 = seq__27814;
var G__27819 = chunk__27815;
var G__27820 = count__27816;
var G__27821 = (i__27817 + (1));
seq__27814 = G__27818;
chunk__27815 = G__27819;
count__27816 = G__27820;
i__27817 = G__27821;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27814);
if(temp__4126__auto__){
var seq__27814__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27814__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27814__$1);
var G__27822 = cljs.core.chunk_rest(seq__27814__$1);
var G__27823 = c__16932__auto__;
var G__27824 = cljs.core.count(c__16932__auto__);
var G__27825 = (0);
seq__27814 = G__27822;
chunk__27815 = G__27823;
count__27816 = G__27824;
i__27817 = G__27825;
continue;
} else {
var s = cljs.core.first(seq__27814__$1);
cljs.core._write(writer,s);

var G__27826 = cljs.core.next(seq__27814__$1);
var G__27827 = null;
var G__27828 = (0);
var G__27829 = (0);
seq__27814 = G__27826;
chunk__27815 = G__27827;
count__27816 = G__27828;
i__27817 = G__27829;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27830__i = 0, G__27830__a = new Array(arguments.length -  1);
while (G__27830__i < G__27830__a.length) {G__27830__a[G__27830__i] = arguments[G__27830__i + 1]; ++G__27830__i;}
  ss = new cljs.core.IndexedSeq(G__27830__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27831){
var writer = cljs.core.first(arglist__27831);
var ss = cljs.core.rest(arglist__27831);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27833 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27833;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27836 = "[\\\\\"\b\f\n\r\t]";
var G__27837 = "g";
return RegExp(G__27836,G__27837);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__27851 = obj;
if(G__27851){
var bit__16826__auto__ = (G__27851.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__27851.cljs$core$IMeta$)){
return true;
} else {
if((!G__27851.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27851);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27851);
}
})();
if(and__16133__auto____$1){
return cljs.core.meta(obj);
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27852_27862 = cljs.core.meta(obj);
var G__27853_27863 = writer;
var G__27854_27864 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27852_27862,G__27853_27863,G__27854_27864) : cljs.core.pr_writer.call(null,G__27852_27862,G__27853_27863,G__27854_27864));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__27855 = obj;
if(G__27855){
var bit__16819__auto__ = (G__27855.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16819__auto__) || (G__27855.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__27856 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__27857 = cljs.core.pr_writer;
var G__27858 = writer;
var G__27859 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__27856,G__27857,G__27858,G__27859) : cljs.core.print_map.call(null,G__27856,G__27857,G__27858,G__27859));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__27860 = obj;
return goog.isString(G__27860);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__27865 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__27865;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__27861 = obj;
if(G__27861){
var bit__16826__auto__ = (G__27861.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16826__auto__) || (G__27861.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__27861.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27861);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27861);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__27869 = obj;
var G__27870 = writer;
var G__27871 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__27869,G__27870,G__27871) : alt_impl.call(null,G__27869,G__27870,G__27871));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__27876 = cljs.core.seq(cljs.core.next(objs));
var chunk__27877 = null;
var count__27878 = (0);
var i__27879 = (0);
while(true){
if((i__27879 < count__27878)){
var obj = chunk__27877.cljs$core$IIndexed$_nth$arity$2(null,i__27879);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27880 = seq__27876;
var G__27881 = chunk__27877;
var G__27882 = count__27878;
var G__27883 = (i__27879 + (1));
seq__27876 = G__27880;
chunk__27877 = G__27881;
count__27878 = G__27882;
i__27879 = G__27883;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27876);
if(temp__4126__auto__){
var seq__27876__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27876__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27876__$1);
var G__27884 = cljs.core.chunk_rest(seq__27876__$1);
var G__27885 = c__16932__auto__;
var G__27886 = cljs.core.count(c__16932__auto__);
var G__27887 = (0);
seq__27876 = G__27884;
chunk__27877 = G__27885;
count__27878 = G__27886;
i__27879 = G__27887;
continue;
} else {
var obj = cljs.core.first(seq__27876__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27888 = cljs.core.next(seq__27876__$1);
var G__27889 = null;
var G__27890 = (0);
var G__27891 = (0);
seq__27876 = G__27888;
chunk__27877 = G__27889;
count__27878 = G__27890;
i__27879 = G__27891;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27892__i = 0, G__27892__a = new Array(arguments.length -  0);
while (G__27892__i < G__27892__a.length) {G__27892__a[G__27892__i] = arguments[G__27892__i + 0]; ++G__27892__i;}
  objs = new cljs.core.IndexedSeq(G__27892__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__27893){
var objs = cljs.core.seq(arglist__27893);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27894__i = 0, G__27894__a = new Array(arguments.length -  0);
while (G__27894__i < G__27894__a.length) {G__27894__a[G__27894__i] = arguments[G__27894__i + 0]; ++G__27894__i;}
  objs = new cljs.core.IndexedSeq(G__27894__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__27895){
var objs = cljs.core.seq(arglist__27895);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27896__i = 0, G__27896__a = new Array(arguments.length -  0);
while (G__27896__i < G__27896__a.length) {G__27896__a[G__27896__i] = arguments[G__27896__i + 0]; ++G__27896__i;}
  objs = new cljs.core.IndexedSeq(G__27896__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__27897){
var objs = cljs.core.seq(arglist__27897);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27898__i = 0, G__27898__a = new Array(arguments.length -  0);
while (G__27898__i < G__27898__a.length) {G__27898__a[G__27898__i] = arguments[G__27898__i + 0]; ++G__27898__i;}
  objs = new cljs.core.IndexedSeq(G__27898__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__27899){
var objs = cljs.core.seq(arglist__27899);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27900__i = 0, G__27900__a = new Array(arguments.length -  0);
while (G__27900__i < G__27900__a.length) {G__27900__a[G__27900__i] = arguments[G__27900__i + 0]; ++G__27900__i;}
  objs = new cljs.core.IndexedSeq(G__27900__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__27901){
var objs = cljs.core.seq(arglist__27901);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27902__i = 0, G__27902__a = new Array(arguments.length -  0);
while (G__27902__i < G__27902__a.length) {G__27902__a[G__27902__i] = arguments[G__27902__i + 0]; ++G__27902__i;}
  objs = new cljs.core.IndexedSeq(G__27902__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__27903){
var objs = cljs.core.seq(arglist__27903);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27904__i = 0, G__27904__a = new Array(arguments.length -  0);
while (G__27904__i < G__27904__a.length) {G__27904__a[G__27904__i] = arguments[G__27904__i + 0]; ++G__27904__i;}
  objs = new cljs.core.IndexedSeq(G__27904__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__27905){
var objs = cljs.core.seq(arglist__27905);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27906__i = 0, G__27906__a = new Array(arguments.length -  0);
while (G__27906__i < G__27906__a.length) {G__27906__a[G__27906__i] = arguments[G__27906__i + 0]; ++G__27906__i;}
  objs = new cljs.core.IndexedSeq(G__27906__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__27907){
var objs = cljs.core.seq(arglist__27907);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__27914_27920 = cljs.core.key(e);
var G__27915_27921 = w;
var G__27916_27922 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27914_27920,G__27915_27921,G__27916_27922) : print_one.call(null,G__27914_27920,G__27915_27921,G__27916_27922));

cljs.core._write(w," ");

var G__27917 = cljs.core.val(e);
var G__27918 = w;
var G__27919 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27917,G__27918,G__27919) : print_one.call(null,G__27917,G__27918,G__27919));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__27923__i = 0, G__27923__a = new Array(arguments.length -  2);
while (G__27923__i < G__27923__a.length) {G__27923__a[G__27923__i] = arguments[G__27923__i + 2]; ++G__27923__i;}
  args = new cljs.core.IndexedSeq(G__27923__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__27924){
var iref = cljs.core.first(arglist__27924);
arglist__27924 = cljs.core.next(arglist__27924);
var f = cljs.core.first(arglist__27924);
var args = cljs.core.rest(arglist__27924);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__27927 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27927) : cljs.core.atom.call(null,G__27927));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__27929 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27929) : cljs.core.deref.call(null,G__27929));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__27930_SHARP_,p2__27931_SHARP_){
var ret = (function (){var G__27934 = p1__27930_SHARP_;
var G__27935 = p2__27931_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27934,G__27935) : rf.call(null,G__27934,G__27935));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__27938 = null;
var G__27938__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27938__1 = (function (result){
var G__27937 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27937) : rf.call(null,G__27937));
});
var G__27938__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__27938 = function(result,input){
switch(arguments.length){
case 0:
return G__27938__0.call(this);
case 1:
return G__27938__1.call(this,result);
case 2:
return G__27938__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27938.cljs$core$IFn$_invoke$arity$0 = G__27938__0;
G__27938.cljs$core$IFn$_invoke$arity$1 = G__27938__1;
G__27938.cljs$core$IFn$_invoke$arity$2 = G__27938__2;
return G__27938;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__27947 = null;
var G__27947__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27947__1 = (function (result){
var G__27943 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27943) : rf.call(null,G__27943));
});
var G__27947__2 = (function (result,input){
var prior = (function (){var G__27944 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27944) : cljs.core.deref.call(null,G__27944));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__27945 = result;
var G__27946 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27945,G__27946) : rf.call(null,G__27945,G__27946));
}
});
G__27947 = function(result,input){
switch(arguments.length){
case 0:
return G__27947__0.call(this);
case 1:
return G__27947__1.call(this,result);
case 2:
return G__27947__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27947.cljs$core$IFn$_invoke$arity$0 = G__27947__0;
G__27947.cljs$core$IFn$_invoke$arity$1 = G__27947__1;
G__27947.cljs$core$IFn$_invoke$arity$2 = G__27947__2;
return G__27947;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27949_SHARP_,p2__27948_SHARP_){
var G__27951 = p2__27948_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__27951) : proc.call(null,G__27951));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj27953 = {};
return obj27953;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._clj__GT_js[(function (){var G__27957 = x__16789__auto__;
return goog.typeOf(G__27957);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._key__GT_js[(function (){var G__27961 = x__16789__auto__;
return goog.typeOf(G__27961);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__27964 = k;
if(G__27964){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__27964.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27964.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27964);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27964);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__27965 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__27965) : cljs.core.clj__GT_js.call(null,G__27965));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__27981 = x;
if(G__27981){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__27981.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27981.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27981);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj27983 = {};
return obj27983;
})();
var seq__27984_27994 = cljs.core.seq(x);
var chunk__27985_27995 = null;
var count__27986_27996 = (0);
var i__27987_27997 = (0);
while(true){
if((i__27987_27997 < count__27986_27996)){
var vec__27988_27998 = chunk__27985_27995.cljs$core$IIndexed$_nth$arity$2(null,i__27987_27997);
var k_27999 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27988_27998,(0),null);
var v_28000 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27988_27998,(1),null);
(m[cljs.core.key__GT_js(k_27999)] = clj__GT_js(v_28000));

var G__28001 = seq__27984_27994;
var G__28002 = chunk__27985_27995;
var G__28003 = count__27986_27996;
var G__28004 = (i__27987_27997 + (1));
seq__27984_27994 = G__28001;
chunk__27985_27995 = G__28002;
count__27986_27996 = G__28003;
i__27987_27997 = G__28004;
continue;
} else {
var temp__4126__auto___28005 = cljs.core.seq(seq__27984_27994);
if(temp__4126__auto___28005){
var seq__27984_28006__$1 = temp__4126__auto___28005;
if(cljs.core.chunked_seq_QMARK_(seq__27984_28006__$1)){
var c__16932__auto___28007 = cljs.core.chunk_first(seq__27984_28006__$1);
var G__28008 = cljs.core.chunk_rest(seq__27984_28006__$1);
var G__28009 = c__16932__auto___28007;
var G__28010 = cljs.core.count(c__16932__auto___28007);
var G__28011 = (0);
seq__27984_27994 = G__28008;
chunk__27985_27995 = G__28009;
count__27986_27996 = G__28010;
i__27987_27997 = G__28011;
continue;
} else {
var vec__27989_28012 = cljs.core.first(seq__27984_28006__$1);
var k_28013 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27989_28012,(0),null);
var v_28014 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27989_28012,(1),null);
(m[cljs.core.key__GT_js(k_28013)] = clj__GT_js(v_28014));

var G__28015 = cljs.core.next(seq__27984_28006__$1);
var G__28016 = null;
var G__28017 = (0);
var G__28018 = (0);
seq__27984_27994 = G__28015;
chunk__27985_27995 = G__28016;
count__27986_27996 = G__28017;
i__27987_27997 = G__28018;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27990_28019 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27991_28020 = null;
var count__27992_28021 = (0);
var i__27993_28022 = (0);
while(true){
if((i__27993_28022 < count__27992_28021)){
var x_28023__$1 = chunk__27991_28020.cljs$core$IIndexed$_nth$arity$2(null,i__27993_28022);
arr.push(x_28023__$1);

var G__28024 = seq__27990_28019;
var G__28025 = chunk__27991_28020;
var G__28026 = count__27992_28021;
var G__28027 = (i__27993_28022 + (1));
seq__27990_28019 = G__28024;
chunk__27991_28020 = G__28025;
count__27992_28021 = G__28026;
i__27993_28022 = G__28027;
continue;
} else {
var temp__4126__auto___28028 = cljs.core.seq(seq__27990_28019);
if(temp__4126__auto___28028){
var seq__27990_28029__$1 = temp__4126__auto___28028;
if(cljs.core.chunked_seq_QMARK_(seq__27990_28029__$1)){
var c__16932__auto___28030 = cljs.core.chunk_first(seq__27990_28029__$1);
var G__28031 = cljs.core.chunk_rest(seq__27990_28029__$1);
var G__28032 = c__16932__auto___28030;
var G__28033 = cljs.core.count(c__16932__auto___28030);
var G__28034 = (0);
seq__27990_28019 = G__28031;
chunk__27991_28020 = G__28032;
count__27992_28021 = G__28033;
i__27993_28022 = G__28034;
continue;
} else {
var x_28035__$1 = cljs.core.first(seq__27990_28029__$1);
arr.push(x_28035__$1);

var G__28036 = cljs.core.next(seq__27990_28029__$1);
var G__28037 = null;
var G__28038 = (0);
var G__28039 = (0);
seq__27990_28019 = G__28036;
chunk__27991_28020 = G__28037;
count__27992_28021 = G__28038;
i__27993_28022 = G__28039;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj28041 = {};
return obj28041;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._js__GT_clj[(function (){var G__28045 = x__16789__auto__;
return goog.typeOf(G__28045);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28102__delegate = function (x,opts){
var map__28075 = opts;
var map__28075__$1 = ((cljs.core.seq_QMARK_(map__28075))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28075):map__28075);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28075__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28075,map__28075__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28091 = x__$1;
if(G__28091){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__28091.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28091.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28091);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16901__auto__ = ((function (map__28075,map__28075__$1,keywordize_keys,keyfn){
return (function iter__28092(s__28093){
return (new cljs.core.LazySeq(null,((function (map__28075,map__28075__$1,keywordize_keys,keyfn){
return (function (){
var s__28093__$1 = s__28093;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28093__$1);
if(temp__4126__auto__){
var s__28093__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28093__$2)){
var c__16899__auto__ = cljs.core.chunk_first(s__28093__$2);
var size__16900__auto__ = cljs.core.count(c__16899__auto__);
var b__28095 = cljs.core.chunk_buffer(size__16900__auto__);
if((function (){var i__28094 = (0);
while(true){
if((i__28094 < size__16900__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16899__auto__,i__28094);
cljs.core.chunk_append(b__28095,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28100 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28100) : keyfn.call(null,G__28100));
})(),thisfn((x__$1[k]))], null));

var G__28103 = (i__28094 + (1));
i__28094 = G__28103;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28095),iter__28092(cljs.core.chunk_rest(s__28093__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28095),null);
}
} else {
var k = cljs.core.first(s__28093__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28101 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28101) : keyfn.call(null,G__28101));
})(),thisfn((x__$1[k]))], null),iter__28092(cljs.core.rest(s__28093__$2)));
}
} else {
return null;
}
break;
}
});})(map__28075,map__28075__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28075,map__28075__$1,keywordize_keys,keyfn))
;
return iter__16901__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28075,map__28075__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28102 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28104__i = 0, G__28104__a = new Array(arguments.length -  1);
while (G__28104__i < G__28104__a.length) {G__28104__a[G__28104__i] = arguments[G__28104__i + 1]; ++G__28104__i;}
  opts = new cljs.core.IndexedSeq(G__28104__a,0);
} 
return G__28102__delegate.call(this,x,opts);};
G__28102.cljs$lang$maxFixedArity = 1;
G__28102.cljs$lang$applyTo = (function (arglist__28105){
var x = cljs.core.first(arglist__28105);
var opts = cljs.core.rest(arglist__28105);
return G__28102__delegate(x,opts);
});
G__28102.cljs$core$IFn$_invoke$arity$variadic = G__28102__delegate;
return G__28102;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28106 = null;
if (arguments.length > 1) {
var G__28107__i = 0, G__28107__a = new Array(arguments.length -  1);
while (G__28107__i < G__28107__a.length) {G__28107__a[G__28107__i] = arguments[G__28107__i + 1]; ++G__28107__i;}
G__28106 = new cljs.core.IndexedSeq(G__28107__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28110 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28110) : cljs.core.atom.call(null,G__28110));
})();
return ((function (mem){
return (function() { 
var G__28112__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28111 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28111) : cljs.core.deref.call(null,G__28111));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28112 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28113__i = 0, G__28113__a = new Array(arguments.length -  0);
while (G__28113__i < G__28113__a.length) {G__28113__a[G__28113__i] = arguments[G__28113__i + 0]; ++G__28113__i;}
  args = new cljs.core.IndexedSeq(G__28113__a,0);
} 
return G__28112__delegate.call(this,args);};
G__28112.cljs$lang$maxFixedArity = 0;
G__28112.cljs$lang$applyTo = (function (arglist__28114){
var args = cljs.core.seq(arglist__28114);
return G__28112__delegate(args);
});
G__28112.cljs$core$IFn$_invoke$arity$variadic = G__28112__delegate;
return G__28112;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28116 = ret;
f = G__28116;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28117__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28117 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28118__i = 0, G__28118__a = new Array(arguments.length -  1);
while (G__28118__i < G__28118__a.length) {G__28118__a[G__28118__i] = arguments[G__28118__i + 1]; ++G__28118__i;}
  args = new cljs.core.IndexedSeq(G__28118__a,0);
} 
return G__28117__delegate.call(this,f,args);};
G__28117.cljs$lang$maxFixedArity = 1;
G__28117.cljs$lang$applyTo = (function (arglist__28119){
var f = cljs.core.first(arglist__28119);
var args = cljs.core.rest(arglist__28119);
return G__28117__delegate(f,args);
});
G__28117.cljs$core$IFn$_invoke$arity$variadic = G__28117__delegate;
return G__28117;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28120 = null;
if (arguments.length > 1) {
var G__28121__i = 0, G__28121__a = new Array(arguments.length -  1);
while (G__28121__i < G__28121__a.length) {G__28121__a[G__28121__i] = arguments[G__28121__i + 1]; ++G__28121__i;}
G__28120 = new cljs.core.IndexedSeq(G__28121__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28124 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28124) : Math.floor.call(null,G__28124));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28126 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28126) : f.call(null,G__28126));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28128 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28128) : cljs.core.atom.call(null,G__28128));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28129__i = 0, G__28129__a = new Array(arguments.length -  1);
while (G__28129__i < G__28129__a.length) {G__28129__a[G__28129__i] = arguments[G__28129__i + 1]; ++G__28129__i;}
  args = new cljs.core.IndexedSeq(G__28129__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28130){
var f = cljs.core.first(arglist__28130);
var args = cljs.core.rest(arglist__28130);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28195 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28195) : cljs.core.deref.call(null,G__28195));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__16145__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
var and__16133__auto__ = cljs.core.vector_QMARK_(parent);
if(and__16133__auto__){
var and__16133__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__16133__auto____$1){
var and__16133__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__16133__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28220 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28218 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28218) : child.call(null,G__28218));
})(),(function (){var G__28219 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28219) : parent.call(null,G__28219));
})());
var G__28221 = (i + (1));
ret = G__28220;
i = G__28221;
continue;
}
break;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28225 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28225) : cljs.core.deref.call(null,G__28225));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28229 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28229) : cljs.core.deref.call(null,G__28229));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28233 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28233) : cljs.core.deref.call(null,G__28233));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28242 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28242) : targets.call(null,G__28242));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28243 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28243) : sources.call(null,G__28243));
})()));
});})(tp,td,ta))
;
var or__16145__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28247 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28247) : tp.call(null,G__28247));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28248 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28248) : ta.call(null,G__28248));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28249 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28249) : ta.call(null,G__28249));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28256 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28256) : parentMap.call(null,G__28256));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28257 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28257) : parentMap.call(null,G__28257));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28250_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28250_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28250_SHARP_),cljs.core.second(p1__28250_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28258 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28258) : parentMap.call(null,G__28258));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28251_SHARP_,p2__28252_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28251_SHARP_,p2__28252_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28261 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28261) : cljs.core.deref.call(null,G__28261));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28262 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28262) : cljs.core.deref.call(null,G__28262));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28278 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28278) : cljs.core.deref.call(null,G__28278));
})().call(null,x);
var or__16145__auto__ = (cljs.core.truth_((function (){var and__16133__auto__ = xprefs;
if(cljs.core.truth_(and__16133__auto__)){
var G__28280 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28280) : xprefs.call(null,G__28280));
} else {
return and__16133__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28281 = cljs.core.rest(ps);
ps = G__28281;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28282 = cljs.core.rest(ps);
ps = G__28282;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__16145__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28296){
var vec__28297 = p__28296;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28297,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28297,(1),null);
var e = vec__28297;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28298 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28298) : cljs.core.deref.call(null,G__28298));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__16145__auto__ = (be == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28299 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28299) : cljs.core.deref.call(null,G__28299));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28300 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28300) : cljs.core.deref.call(null,G__28300));
})(),(function (){var G__28301 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28301) : cljs.core.deref.call(null,G__28301));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28303 = {};
return obj28303;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._reset[(function (){var G__28307 = x__16789__auto__;
return goog.typeOf(G__28307);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._add_method[(function (){var G__28311 = x__16789__auto__;
return goog.typeOf(G__28311);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._remove_method[(function (){var G__28315 = x__16789__auto__;
return goog.typeOf(G__28315);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefer_method[(function (){var G__28319 = x__16789__auto__;
return goog.typeOf(G__28319);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._get_method[(function (){var G__28323 = x__16789__auto__;
return goog.typeOf(G__28323);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._get_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._methods[(function (){var G__28327 = x__16789__auto__;
return goog.typeOf(G__28327);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._methods["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefers[(function (){var G__28331 = x__16789__auto__;
return goog.typeOf(G__28331);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefers["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28333 = this$__$1;
return goog.getUid(G__28333);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28334 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28334) : cljs.core.deref.call(null,G__28334));
})(),(function (){var G__28335 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28335) : cljs.core.deref.call(null,G__28335));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28336 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28336) : cljs.core.deref.call(null,G__28336));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28337 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28337) : cljs.core.deref.call(null,G__28337));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28338 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28338) : cljs.core.deref.call(null,G__28338));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28339 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28339) : cljs.core.deref.call(null,G__28339));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29180 = null;
var G__29180__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29180__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28340 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28340) : self__.dispatch_fn.call(null,G__28340));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28341 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28341) : target_fn.call(null,G__28341));
});
var G__29180__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28342 = a;
var G__28343 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28342,G__28343) : self__.dispatch_fn.call(null,G__28342,G__28343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28344 = a;
var G__28345 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28344,G__28345) : target_fn.call(null,G__28344,G__28345));
});
var G__29180__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28346 = a;
var G__28347 = b;
var G__28348 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28346,G__28347,G__28348) : self__.dispatch_fn.call(null,G__28346,G__28347,G__28348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28349 = a;
var G__28350 = b;
var G__28351 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28349,G__28350,G__28351) : target_fn.call(null,G__28349,G__28350,G__28351));
});
var G__29180__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28352 = a;
var G__28353 = b;
var G__28354 = c;
var G__28355 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28352,G__28353,G__28354,G__28355) : self__.dispatch_fn.call(null,G__28352,G__28353,G__28354,G__28355));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28356 = a;
var G__28357 = b;
var G__28358 = c;
var G__28359 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28356,G__28357,G__28358,G__28359) : target_fn.call(null,G__28356,G__28357,G__28358,G__28359));
});
var G__29180__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28360 = a;
var G__28361 = b;
var G__28362 = c;
var G__28363 = d;
var G__28364 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28360,G__28361,G__28362,G__28363,G__28364) : self__.dispatch_fn.call(null,G__28360,G__28361,G__28362,G__28363,G__28364));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28365 = a;
var G__28366 = b;
var G__28367 = c;
var G__28368 = d;
var G__28369 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28365,G__28366,G__28367,G__28368,G__28369) : target_fn.call(null,G__28365,G__28366,G__28367,G__28368,G__28369));
});
var G__29180__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28370 = a;
var G__28371 = b;
var G__28372 = c;
var G__28373 = d;
var G__28374 = e;
var G__28375 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28370,G__28371,G__28372,G__28373,G__28374,G__28375) : self__.dispatch_fn.call(null,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28376 = a;
var G__28377 = b;
var G__28378 = c;
var G__28379 = d;
var G__28380 = e;
var G__28381 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28376,G__28377,G__28378,G__28379,G__28380,G__28381) : target_fn.call(null,G__28376,G__28377,G__28378,G__28379,G__28380,G__28381));
});
var G__29180__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28382 = a;
var G__28383 = b;
var G__28384 = c;
var G__28385 = d;
var G__28386 = e;
var G__28387 = f;
var G__28388 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388) : self__.dispatch_fn.call(null,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28389 = a;
var G__28390 = b;
var G__28391 = c;
var G__28392 = d;
var G__28393 = e;
var G__28394 = f;
var G__28395 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395) : target_fn.call(null,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395));
});
var G__29180__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28396 = a;
var G__28397 = b;
var G__28398 = c;
var G__28399 = d;
var G__28400 = e;
var G__28401 = f;
var G__28402 = g;
var G__28403 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403) : self__.dispatch_fn.call(null,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28404 = a;
var G__28405 = b;
var G__28406 = c;
var G__28407 = d;
var G__28408 = e;
var G__28409 = f;
var G__28410 = g;
var G__28411 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411) : target_fn.call(null,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411));
});
var G__29180__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28412 = a;
var G__28413 = b;
var G__28414 = c;
var G__28415 = d;
var G__28416 = e;
var G__28417 = f;
var G__28418 = g;
var G__28419 = h;
var G__28420 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28412,G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419,G__28420) : self__.dispatch_fn.call(null,G__28412,G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419,G__28420));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28421 = a;
var G__28422 = b;
var G__28423 = c;
var G__28424 = d;
var G__28425 = e;
var G__28426 = f;
var G__28427 = g;
var G__28428 = h;
var G__28429 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429) : target_fn.call(null,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429));
});
var G__29180__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28430 = a;
var G__28431 = b;
var G__28432 = c;
var G__28433 = d;
var G__28434 = e;
var G__28435 = f;
var G__28436 = g;
var G__28437 = h;
var G__28438 = i;
var G__28439 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439) : self__.dispatch_fn.call(null,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28440 = a;
var G__28441 = b;
var G__28442 = c;
var G__28443 = d;
var G__28444 = e;
var G__28445 = f;
var G__28446 = g;
var G__28447 = h;
var G__28448 = i;
var G__28449 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449) : target_fn.call(null,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449));
});
var G__29180__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28450 = a;
var G__28451 = b;
var G__28452 = c;
var G__28453 = d;
var G__28454 = e;
var G__28455 = f;
var G__28456 = g;
var G__28457 = h;
var G__28458 = i;
var G__28459 = j;
var G__28460 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28450,G__28451,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460) : self__.dispatch_fn.call(null,G__28450,G__28451,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28461 = a;
var G__28462 = b;
var G__28463 = c;
var G__28464 = d;
var G__28465 = e;
var G__28466 = f;
var G__28467 = g;
var G__28468 = h;
var G__28469 = i;
var G__28470 = j;
var G__28471 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469,G__28470,G__28471) : target_fn.call(null,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469,G__28470,G__28471));
});
var G__29180__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28472 = a;
var G__28473 = b;
var G__28474 = c;
var G__28475 = d;
var G__28476 = e;
var G__28477 = f;
var G__28478 = g;
var G__28479 = h;
var G__28480 = i;
var G__28481 = j;
var G__28482 = k;
var G__28483 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483) : self__.dispatch_fn.call(null,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28484 = a;
var G__28485 = b;
var G__28486 = c;
var G__28487 = d;
var G__28488 = e;
var G__28489 = f;
var G__28490 = g;
var G__28491 = h;
var G__28492 = i;
var G__28493 = j;
var G__28494 = k;
var G__28495 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495) : target_fn.call(null,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495));
});
var G__29180__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28496 = a;
var G__28497 = b;
var G__28498 = c;
var G__28499 = d;
var G__28500 = e;
var G__28501 = f;
var G__28502 = g;
var G__28503 = h;
var G__28504 = i;
var G__28505 = j;
var G__28506 = k;
var G__28507 = l;
var G__28508 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508) : self__.dispatch_fn.call(null,G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28509 = a;
var G__28510 = b;
var G__28511 = c;
var G__28512 = d;
var G__28513 = e;
var G__28514 = f;
var G__28515 = g;
var G__28516 = h;
var G__28517 = i;
var G__28518 = j;
var G__28519 = k;
var G__28520 = l;
var G__28521 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28509,G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521) : target_fn.call(null,G__28509,G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521));
});
var G__29180__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28522 = a;
var G__28523 = b;
var G__28524 = c;
var G__28525 = d;
var G__28526 = e;
var G__28527 = f;
var G__28528 = g;
var G__28529 = h;
var G__28530 = i;
var G__28531 = j;
var G__28532 = k;
var G__28533 = l;
var G__28534 = m;
var G__28535 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28522,G__28523,G__28524,G__28525,G__28526,G__28527,G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535) : self__.dispatch_fn.call(null,G__28522,G__28523,G__28524,G__28525,G__28526,G__28527,G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28536 = a;
var G__28537 = b;
var G__28538 = c;
var G__28539 = d;
var G__28540 = e;
var G__28541 = f;
var G__28542 = g;
var G__28543 = h;
var G__28544 = i;
var G__28545 = j;
var G__28546 = k;
var G__28547 = l;
var G__28548 = m;
var G__28549 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549) : target_fn.call(null,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549));
});
var G__29180__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28550 = a;
var G__28551 = b;
var G__28552 = c;
var G__28553 = d;
var G__28554 = e;
var G__28555 = f;
var G__28556 = g;
var G__28557 = h;
var G__28558 = i;
var G__28559 = j;
var G__28560 = k;
var G__28561 = l;
var G__28562 = m;
var G__28563 = n;
var G__28564 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562,G__28563,G__28564) : self__.dispatch_fn.call(null,G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562,G__28563,G__28564));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28565 = a;
var G__28566 = b;
var G__28567 = c;
var G__28568 = d;
var G__28569 = e;
var G__28570 = f;
var G__28571 = g;
var G__28572 = h;
var G__28573 = i;
var G__28574 = j;
var G__28575 = k;
var G__28576 = l;
var G__28577 = m;
var G__28578 = n;
var G__28579 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578,G__28579) : target_fn.call(null,G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578,G__28579));
});
var G__29180__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28580 = a;
var G__28581 = b;
var G__28582 = c;
var G__28583 = d;
var G__28584 = e;
var G__28585 = f;
var G__28586 = g;
var G__28587 = h;
var G__28588 = i;
var G__28589 = j;
var G__28590 = k;
var G__28591 = l;
var G__28592 = m;
var G__28593 = n;
var G__28594 = o;
var G__28595 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594,G__28595) : self__.dispatch_fn.call(null,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594,G__28595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28596 = a;
var G__28597 = b;
var G__28598 = c;
var G__28599 = d;
var G__28600 = e;
var G__28601 = f;
var G__28602 = g;
var G__28603 = h;
var G__28604 = i;
var G__28605 = j;
var G__28606 = k;
var G__28607 = l;
var G__28608 = m;
var G__28609 = n;
var G__28610 = o;
var G__28611 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611) : target_fn.call(null,G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611));
});
var G__29180__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28612 = a;
var G__28613 = b;
var G__28614 = c;
var G__28615 = d;
var G__28616 = e;
var G__28617 = f;
var G__28618 = g;
var G__28619 = h;
var G__28620 = i;
var G__28621 = j;
var G__28622 = k;
var G__28623 = l;
var G__28624 = m;
var G__28625 = n;
var G__28626 = o;
var G__28627 = p;
var G__28628 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628) : self__.dispatch_fn.call(null,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28629 = a;
var G__28630 = b;
var G__28631 = c;
var G__28632 = d;
var G__28633 = e;
var G__28634 = f;
var G__28635 = g;
var G__28636 = h;
var G__28637 = i;
var G__28638 = j;
var G__28639 = k;
var G__28640 = l;
var G__28641 = m;
var G__28642 = n;
var G__28643 = o;
var G__28644 = p;
var G__28645 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28629,G__28630,G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645) : target_fn.call(null,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645));
});
var G__29180__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28646 = a;
var G__28647 = b;
var G__28648 = c;
var G__28649 = d;
var G__28650 = e;
var G__28651 = f;
var G__28652 = g;
var G__28653 = h;
var G__28654 = i;
var G__28655 = j;
var G__28656 = k;
var G__28657 = l;
var G__28658 = m;
var G__28659 = n;
var G__28660 = o;
var G__28661 = p;
var G__28662 = q;
var G__28663 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28646,G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663) : self__.dispatch_fn.call(null,G__28646,G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28664 = a;
var G__28665 = b;
var G__28666 = c;
var G__28667 = d;
var G__28668 = e;
var G__28669 = f;
var G__28670 = g;
var G__28671 = h;
var G__28672 = i;
var G__28673 = j;
var G__28674 = k;
var G__28675 = l;
var G__28676 = m;
var G__28677 = n;
var G__28678 = o;
var G__28679 = p;
var G__28680 = q;
var G__28681 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681) : target_fn.call(null,G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681));
});
var G__29180__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28682 = a;
var G__28683 = b;
var G__28684 = c;
var G__28685 = d;
var G__28686 = e;
var G__28687 = f;
var G__28688 = g;
var G__28689 = h;
var G__28690 = i;
var G__28691 = j;
var G__28692 = k;
var G__28693 = l;
var G__28694 = m;
var G__28695 = n;
var G__28696 = o;
var G__28697 = p;
var G__28698 = q;
var G__28699 = r;
var G__28700 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700) : self__.dispatch_fn.call(null,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28701 = a;
var G__28702 = b;
var G__28703 = c;
var G__28704 = d;
var G__28705 = e;
var G__28706 = f;
var G__28707 = g;
var G__28708 = h;
var G__28709 = i;
var G__28710 = j;
var G__28711 = k;
var G__28712 = l;
var G__28713 = m;
var G__28714 = n;
var G__28715 = o;
var G__28716 = p;
var G__28717 = q;
var G__28718 = r;
var G__28719 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715,G__28716,G__28717,G__28718,G__28719) : target_fn.call(null,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715,G__28716,G__28717,G__28718,G__28719));
});
var G__29180__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28720 = a;
var G__28721 = b;
var G__28722 = c;
var G__28723 = d;
var G__28724 = e;
var G__28725 = f;
var G__28726 = g;
var G__28727 = h;
var G__28728 = i;
var G__28729 = j;
var G__28730 = k;
var G__28731 = l;
var G__28732 = m;
var G__28733 = n;
var G__28734 = o;
var G__28735 = p;
var G__28736 = q;
var G__28737 = r;
var G__28738 = s;
var G__28739 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739) : self__.dispatch_fn.call(null,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28740 = a;
var G__28741 = b;
var G__28742 = c;
var G__28743 = d;
var G__28744 = e;
var G__28745 = f;
var G__28746 = g;
var G__28747 = h;
var G__28748 = i;
var G__28749 = j;
var G__28750 = k;
var G__28751 = l;
var G__28752 = m;
var G__28753 = n;
var G__28754 = o;
var G__28755 = p;
var G__28756 = q;
var G__28757 = r;
var G__28758 = s;
var G__28759 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759) : target_fn.call(null,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759));
});
var G__29180__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29180 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29180__1.call(this,self__);
case 2:
return G__29180__2.call(this,self__,a);
case 3:
return G__29180__3.call(this,self__,a,b);
case 4:
return G__29180__4.call(this,self__,a,b,c);
case 5:
return G__29180__5.call(this,self__,a,b,c,d);
case 6:
return G__29180__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29180__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29180__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29180__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29180__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29180__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29180__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29180__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29180__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29180__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29180__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29180__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29180__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29180__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29180__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29180__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29180__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29180.cljs$core$IFn$_invoke$arity$1 = G__29180__1;
G__29180.cljs$core$IFn$_invoke$arity$2 = G__29180__2;
G__29180.cljs$core$IFn$_invoke$arity$3 = G__29180__3;
G__29180.cljs$core$IFn$_invoke$arity$4 = G__29180__4;
G__29180.cljs$core$IFn$_invoke$arity$5 = G__29180__5;
G__29180.cljs$core$IFn$_invoke$arity$6 = G__29180__6;
G__29180.cljs$core$IFn$_invoke$arity$7 = G__29180__7;
G__29180.cljs$core$IFn$_invoke$arity$8 = G__29180__8;
G__29180.cljs$core$IFn$_invoke$arity$9 = G__29180__9;
G__29180.cljs$core$IFn$_invoke$arity$10 = G__29180__10;
G__29180.cljs$core$IFn$_invoke$arity$11 = G__29180__11;
G__29180.cljs$core$IFn$_invoke$arity$12 = G__29180__12;
G__29180.cljs$core$IFn$_invoke$arity$13 = G__29180__13;
G__29180.cljs$core$IFn$_invoke$arity$14 = G__29180__14;
G__29180.cljs$core$IFn$_invoke$arity$15 = G__29180__15;
G__29180.cljs$core$IFn$_invoke$arity$16 = G__29180__16;
G__29180.cljs$core$IFn$_invoke$arity$17 = G__29180__17;
G__29180.cljs$core$IFn$_invoke$arity$18 = G__29180__18;
G__29180.cljs$core$IFn$_invoke$arity$19 = G__29180__19;
G__29180.cljs$core$IFn$_invoke$arity$20 = G__29180__20;
G__29180.cljs$core$IFn$_invoke$arity$21 = G__29180__21;
G__29180.cljs$core$IFn$_invoke$arity$22 = G__29180__22;
return G__29180;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28332){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28332)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28760 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28760) : self__.dispatch_fn.call(null,G__28760));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28761 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28761) : target_fn.call(null,G__28761));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28762 = a;
var G__28763 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28762,G__28763) : self__.dispatch_fn.call(null,G__28762,G__28763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28764 = a;
var G__28765 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28764,G__28765) : target_fn.call(null,G__28764,G__28765));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28766 = a;
var G__28767 = b;
var G__28768 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28766,G__28767,G__28768) : self__.dispatch_fn.call(null,G__28766,G__28767,G__28768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28769 = a;
var G__28770 = b;
var G__28771 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28769,G__28770,G__28771) : target_fn.call(null,G__28769,G__28770,G__28771));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28772 = a;
var G__28773 = b;
var G__28774 = c;
var G__28775 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28772,G__28773,G__28774,G__28775) : self__.dispatch_fn.call(null,G__28772,G__28773,G__28774,G__28775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28776 = a;
var G__28777 = b;
var G__28778 = c;
var G__28779 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28776,G__28777,G__28778,G__28779) : target_fn.call(null,G__28776,G__28777,G__28778,G__28779));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28780 = a;
var G__28781 = b;
var G__28782 = c;
var G__28783 = d;
var G__28784 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28780,G__28781,G__28782,G__28783,G__28784) : self__.dispatch_fn.call(null,G__28780,G__28781,G__28782,G__28783,G__28784));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28785 = a;
var G__28786 = b;
var G__28787 = c;
var G__28788 = d;
var G__28789 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28785,G__28786,G__28787,G__28788,G__28789) : target_fn.call(null,G__28785,G__28786,G__28787,G__28788,G__28789));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28790 = a;
var G__28791 = b;
var G__28792 = c;
var G__28793 = d;
var G__28794 = e;
var G__28795 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28790,G__28791,G__28792,G__28793,G__28794,G__28795) : self__.dispatch_fn.call(null,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28796 = a;
var G__28797 = b;
var G__28798 = c;
var G__28799 = d;
var G__28800 = e;
var G__28801 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28796,G__28797,G__28798,G__28799,G__28800,G__28801) : target_fn.call(null,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28802 = a;
var G__28803 = b;
var G__28804 = c;
var G__28805 = d;
var G__28806 = e;
var G__28807 = f;
var G__28808 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808) : self__.dispatch_fn.call(null,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28809 = a;
var G__28810 = b;
var G__28811 = c;
var G__28812 = d;
var G__28813 = e;
var G__28814 = f;
var G__28815 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28809,G__28810,G__28811,G__28812,G__28813,G__28814,G__28815) : target_fn.call(null,G__28809,G__28810,G__28811,G__28812,G__28813,G__28814,G__28815));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28816 = a;
var G__28817 = b;
var G__28818 = c;
var G__28819 = d;
var G__28820 = e;
var G__28821 = f;
var G__28822 = g;
var G__28823 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823) : self__.dispatch_fn.call(null,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28824 = a;
var G__28825 = b;
var G__28826 = c;
var G__28827 = d;
var G__28828 = e;
var G__28829 = f;
var G__28830 = g;
var G__28831 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831) : target_fn.call(null,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28832 = a;
var G__28833 = b;
var G__28834 = c;
var G__28835 = d;
var G__28836 = e;
var G__28837 = f;
var G__28838 = g;
var G__28839 = h;
var G__28840 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840) : self__.dispatch_fn.call(null,G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28841 = a;
var G__28842 = b;
var G__28843 = c;
var G__28844 = d;
var G__28845 = e;
var G__28846 = f;
var G__28847 = g;
var G__28848 = h;
var G__28849 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849) : target_fn.call(null,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28850 = a;
var G__28851 = b;
var G__28852 = c;
var G__28853 = d;
var G__28854 = e;
var G__28855 = f;
var G__28856 = g;
var G__28857 = h;
var G__28858 = i;
var G__28859 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859) : self__.dispatch_fn.call(null,G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28860 = a;
var G__28861 = b;
var G__28862 = c;
var G__28863 = d;
var G__28864 = e;
var G__28865 = f;
var G__28866 = g;
var G__28867 = h;
var G__28868 = i;
var G__28869 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869) : target_fn.call(null,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28870 = a;
var G__28871 = b;
var G__28872 = c;
var G__28873 = d;
var G__28874 = e;
var G__28875 = f;
var G__28876 = g;
var G__28877 = h;
var G__28878 = i;
var G__28879 = j;
var G__28880 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880) : self__.dispatch_fn.call(null,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28881 = a;
var G__28882 = b;
var G__28883 = c;
var G__28884 = d;
var G__28885 = e;
var G__28886 = f;
var G__28887 = g;
var G__28888 = h;
var G__28889 = i;
var G__28890 = j;
var G__28891 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890,G__28891) : target_fn.call(null,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890,G__28891));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28892 = a;
var G__28893 = b;
var G__28894 = c;
var G__28895 = d;
var G__28896 = e;
var G__28897 = f;
var G__28898 = g;
var G__28899 = h;
var G__28900 = i;
var G__28901 = j;
var G__28902 = k;
var G__28903 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903) : self__.dispatch_fn.call(null,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28904 = a;
var G__28905 = b;
var G__28906 = c;
var G__28907 = d;
var G__28908 = e;
var G__28909 = f;
var G__28910 = g;
var G__28911 = h;
var G__28912 = i;
var G__28913 = j;
var G__28914 = k;
var G__28915 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915) : target_fn.call(null,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28916 = a;
var G__28917 = b;
var G__28918 = c;
var G__28919 = d;
var G__28920 = e;
var G__28921 = f;
var G__28922 = g;
var G__28923 = h;
var G__28924 = i;
var G__28925 = j;
var G__28926 = k;
var G__28927 = l;
var G__28928 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928) : self__.dispatch_fn.call(null,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28929 = a;
var G__28930 = b;
var G__28931 = c;
var G__28932 = d;
var G__28933 = e;
var G__28934 = f;
var G__28935 = g;
var G__28936 = h;
var G__28937 = i;
var G__28938 = j;
var G__28939 = k;
var G__28940 = l;
var G__28941 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941) : target_fn.call(null,G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28942 = a;
var G__28943 = b;
var G__28944 = c;
var G__28945 = d;
var G__28946 = e;
var G__28947 = f;
var G__28948 = g;
var G__28949 = h;
var G__28950 = i;
var G__28951 = j;
var G__28952 = k;
var G__28953 = l;
var G__28954 = m;
var G__28955 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28942,G__28943,G__28944,G__28945,G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955) : self__.dispatch_fn.call(null,G__28942,G__28943,G__28944,G__28945,G__28946,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28956 = a;
var G__28957 = b;
var G__28958 = c;
var G__28959 = d;
var G__28960 = e;
var G__28961 = f;
var G__28962 = g;
var G__28963 = h;
var G__28964 = i;
var G__28965 = j;
var G__28966 = k;
var G__28967 = l;
var G__28968 = m;
var G__28969 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969) : target_fn.call(null,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28970 = a;
var G__28971 = b;
var G__28972 = c;
var G__28973 = d;
var G__28974 = e;
var G__28975 = f;
var G__28976 = g;
var G__28977 = h;
var G__28978 = i;
var G__28979 = j;
var G__28980 = k;
var G__28981 = l;
var G__28982 = m;
var G__28983 = n;
var G__28984 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984) : self__.dispatch_fn.call(null,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28985 = a;
var G__28986 = b;
var G__28987 = c;
var G__28988 = d;
var G__28989 = e;
var G__28990 = f;
var G__28991 = g;
var G__28992 = h;
var G__28993 = i;
var G__28994 = j;
var G__28995 = k;
var G__28996 = l;
var G__28997 = m;
var G__28998 = n;
var G__28999 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998,G__28999) : target_fn.call(null,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998,G__28999));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29000 = a;
var G__29001 = b;
var G__29002 = c;
var G__29003 = d;
var G__29004 = e;
var G__29005 = f;
var G__29006 = g;
var G__29007 = h;
var G__29008 = i;
var G__29009 = j;
var G__29010 = k;
var G__29011 = l;
var G__29012 = m;
var G__29013 = n;
var G__29014 = o;
var G__29015 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015) : self__.dispatch_fn.call(null,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29016 = a;
var G__29017 = b;
var G__29018 = c;
var G__29019 = d;
var G__29020 = e;
var G__29021 = f;
var G__29022 = g;
var G__29023 = h;
var G__29024 = i;
var G__29025 = j;
var G__29026 = k;
var G__29027 = l;
var G__29028 = m;
var G__29029 = n;
var G__29030 = o;
var G__29031 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027,G__29028,G__29029,G__29030,G__29031) : target_fn.call(null,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027,G__29028,G__29029,G__29030,G__29031));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29032 = a;
var G__29033 = b;
var G__29034 = c;
var G__29035 = d;
var G__29036 = e;
var G__29037 = f;
var G__29038 = g;
var G__29039 = h;
var G__29040 = i;
var G__29041 = j;
var G__29042 = k;
var G__29043 = l;
var G__29044 = m;
var G__29045 = n;
var G__29046 = o;
var G__29047 = p;
var G__29048 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048) : self__.dispatch_fn.call(null,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29049 = a;
var G__29050 = b;
var G__29051 = c;
var G__29052 = d;
var G__29053 = e;
var G__29054 = f;
var G__29055 = g;
var G__29056 = h;
var G__29057 = i;
var G__29058 = j;
var G__29059 = k;
var G__29060 = l;
var G__29061 = m;
var G__29062 = n;
var G__29063 = o;
var G__29064 = p;
var G__29065 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064,G__29065) : target_fn.call(null,G__29049,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064,G__29065));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29066 = a;
var G__29067 = b;
var G__29068 = c;
var G__29069 = d;
var G__29070 = e;
var G__29071 = f;
var G__29072 = g;
var G__29073 = h;
var G__29074 = i;
var G__29075 = j;
var G__29076 = k;
var G__29077 = l;
var G__29078 = m;
var G__29079 = n;
var G__29080 = o;
var G__29081 = p;
var G__29082 = q;
var G__29083 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083) : self__.dispatch_fn.call(null,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29084 = a;
var G__29085 = b;
var G__29086 = c;
var G__29087 = d;
var G__29088 = e;
var G__29089 = f;
var G__29090 = g;
var G__29091 = h;
var G__29092 = i;
var G__29093 = j;
var G__29094 = k;
var G__29095 = l;
var G__29096 = m;
var G__29097 = n;
var G__29098 = o;
var G__29099 = p;
var G__29100 = q;
var G__29101 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101) : target_fn.call(null,G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29102 = a;
var G__29103 = b;
var G__29104 = c;
var G__29105 = d;
var G__29106 = e;
var G__29107 = f;
var G__29108 = g;
var G__29109 = h;
var G__29110 = i;
var G__29111 = j;
var G__29112 = k;
var G__29113 = l;
var G__29114 = m;
var G__29115 = n;
var G__29116 = o;
var G__29117 = p;
var G__29118 = q;
var G__29119 = r;
var G__29120 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120) : self__.dispatch_fn.call(null,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29121 = a;
var G__29122 = b;
var G__29123 = c;
var G__29124 = d;
var G__29125 = e;
var G__29126 = f;
var G__29127 = g;
var G__29128 = h;
var G__29129 = i;
var G__29130 = j;
var G__29131 = k;
var G__29132 = l;
var G__29133 = m;
var G__29134 = n;
var G__29135 = o;
var G__29136 = p;
var G__29137 = q;
var G__29138 = r;
var G__29139 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139) : target_fn.call(null,G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29140 = a;
var G__29141 = b;
var G__29142 = c;
var G__29143 = d;
var G__29144 = e;
var G__29145 = f;
var G__29146 = g;
var G__29147 = h;
var G__29148 = i;
var G__29149 = j;
var G__29150 = k;
var G__29151 = l;
var G__29152 = m;
var G__29153 = n;
var G__29154 = o;
var G__29155 = p;
var G__29156 = q;
var G__29157 = r;
var G__29158 = s;
var G__29159 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29140,G__29141,G__29142,G__29143,G__29144,G__29145,G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159) : self__.dispatch_fn.call(null,G__29140,G__29141,G__29142,G__29143,G__29144,G__29145,G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29160 = a;
var G__29161 = b;
var G__29162 = c;
var G__29163 = d;
var G__29164 = e;
var G__29165 = f;
var G__29166 = g;
var G__29167 = h;
var G__29168 = i;
var G__29169 = j;
var G__29170 = k;
var G__29171 = l;
var G__29172 = m;
var G__29173 = n;
var G__29174 = o;
var G__29175 = p;
var G__29176 = q;
var G__29177 = r;
var G__29178 = s;
var G__29179 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29160,G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177,G__29178,G__29179) : target_fn.call(null,G__29160,G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177,G__29178,G__29179));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29181 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29181);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29186 = msg;
return Error(G__29186);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29191 = x;
var G__29192 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29191,G__29192) : pred.call(null,G__29191,G__29192));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29193 = y;
var G__29194 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29193,G__29194) : pred.call(null,G__29193,G__29194));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1435015911539