;; Analyzed by ClojureScript 0.0-2850
{:defs {->t33873 {:protocol-inline nil, :protocols #{domina/DomContent cljs.core/IMeta cljs.core/IWithMeta}, :name domina.xpath/->t33873, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :method-params ([expr base xpath meta33874]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 16, :factory :positional, :methods ({:tag domina.xpath/t33873, :variadic false, :max-fixed-arity 4}), :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([expr base xpath meta33874])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t33873 {:num-fields 4, :protocols #{domina/DomContent cljs.core/IMeta cljs.core/IWithMeta}, :name domina.xpath/t33873, :file "resources/public/js/compiled/out/domina/xpath.cljs", :type true, :anonymous true, :column 16, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t33870 {:protocol-inline nil, :protocols #{domina/DomContent cljs.core/IMeta cljs.core/IWithMeta}, :name domina.xpath/->t33870, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :method-params ([expr base xpath meta33871]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 16, :factory :positional, :methods ({:tag domina.xpath/t33870, :variadic false, :max-fixed-arity 4}), :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([expr base xpath meta33871])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t33870 {:num-fields 4, :protocols #{domina/DomContent cljs.core/IMeta cljs.core/IWithMeta}, :name domina.xpath/t33870, :file "resources/public/js/compiled/out/domina/xpath.cljs", :type true, :anonymous true, :column 16, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, xpath {:protocol-inline nil, :name domina.xpath/xpath, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :end-column 13, :method-params ([expr] [base expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag domina.xpath/t33870, :variadic false, :max-fixed-arity 1} {:tag domina.xpath/t33873, :variadic false, :max-fixed-arity 2}), :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr] [base expr])), :doc "Returns content based on an xpath expression. Takes an optional content as a base; if none is given, uses the HTML element as a base.", :test true}, root-element {:protocol-inline nil, :private true, :name domina.xpath/root-element, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, select-nodes {:protocol-inline nil, :private true, :name domina.xpath/select-nodes, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :end-column 21, :method-params ([expr node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr node])), :doc "Selects multiple nodes using an XPath expression and a root node", :test true}, select-node {:protocol-inline nil, :private true, :name domina.xpath/select-node, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :end-column 20, :method-params ([expr node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr node])), :doc "Selects a single node using an XPath expression and a root node", :test true}, select-node* {:protocol-inline nil, :private true, :name domina.xpath/select-node*, :variadic false, :file "resources/public/js/compiled/out/domina/xpath.cljs", :end-column 21, :method-params ([path node technique-1 technique-2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path node technique-1 technique-2])), :test true}}, :name domina.xpath, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {dom goog.dom, goog.dom goog.dom, domina domina}, :imports nil}