// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__12115__delegate = function (args){
return console.log.apply(console,(function (){var G__12114 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__12114) : cljs.core.into_array.call(null,G__12114));
})());
};
var G__12115 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12116__i = 0, G__12116__a = new Array(arguments.length -  0);
while (G__12116__i < G__12116__a.length) {G__12116__a[G__12116__i] = arguments[G__12116__i + 0]; ++G__12116__i;}
  args = new cljs.core.IndexedSeq(G__12116__a,0);
} 
return G__12115__delegate.call(this,args);};
G__12115.cljs$lang$maxFixedArity = 0;
G__12115.cljs$lang$applyTo = (function (arglist__12117){
var args = cljs.core.seq(arglist__12117);
return G__12115__delegate(args);
});
G__12115.cljs$core$IFn$_invoke$arity$variadic = G__12115__delegate;
return G__12115;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__12119 = x;
return goog.isString(G__12119);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__12121 = x__$1;
return goog.typeOf(G__12121);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3852__auto__ = ty;
if(cljs.core.truth_(and__3852__auto__)){
return ty.cljs$lang$type;
} else {
return and__3852__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__12123 = obj;
return goog.typeOf(G__12123);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__12125 = Symbol;
return goog.typeOf(G__12125);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4751__auto___12127 = len;
var i_12128 = (0);
while(true){
if((i_12128 < n__4751__auto___12127)){
(new_arr[i_12128] = (arr[i_12128]));

var G__12129 = (i_12128 + (1));
i_12128 = G__12129;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__12130 = (i + (1));
i = G__12130;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__12139__delegate = function (array,i,idxs){
var G__12136 = aget;
var G__12137 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__12138 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__12136,G__12137,G__12138) : cljs.core.apply.call(null,G__12136,G__12137,G__12138));
};
var G__12139 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__12140__i = 0, G__12140__a = new Array(arguments.length -  2);
while (G__12140__i < G__12140__a.length) {G__12140__a[G__12140__i] = arguments[G__12140__i + 2]; ++G__12140__i;}
  idxs = new cljs.core.IndexedSeq(G__12140__a,0);
} 
return G__12139__delegate.call(this,array,i,idxs);};
G__12139.cljs$lang$maxFixedArity = 2;
G__12139.cljs$lang$applyTo = (function (arglist__12141){
var array = cljs.core.first(arglist__12141);
arglist__12141 = cljs.core.next(arglist__12141);
var i = cljs.core.first(arglist__12141);
var idxs = cljs.core.rest(arglist__12141);
return G__12139__delegate(array,i,idxs);
});
G__12139.cljs$core$IFn$_invoke$arity$variadic = G__12139__delegate;
return G__12139;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__12142 = null;
if (arguments.length > 2) {
var G__12143__i = 0, G__12143__a = new Array(arguments.length -  2);
while (G__12143__i < G__12143__a.length) {G__12143__a[G__12143__i] = arguments[G__12143__i + 2]; ++G__12143__i;}
G__12142 = new cljs.core.IndexedSeq(G__12143__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__12142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__12152__delegate = function (array,idx,idx2,idxv){
var G__12148 = aset;
var G__12149 = (array[idx]);
var G__12150 = idx2;
var G__12151 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__12148,G__12149,G__12150,G__12151) : cljs.core.apply.call(null,G__12148,G__12149,G__12150,G__12151));
};
var G__12152 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__12153__i = 0, G__12153__a = new Array(arguments.length -  3);
while (G__12153__i < G__12153__a.length) {G__12153__a[G__12153__i] = arguments[G__12153__i + 3]; ++G__12153__i;}
  idxv = new cljs.core.IndexedSeq(G__12153__a,0);
} 
return G__12152__delegate.call(this,array,idx,idx2,idxv);};
G__12152.cljs$lang$maxFixedArity = 3;
G__12152.cljs$lang$applyTo = (function (arglist__12154){
var array = cljs.core.first(arglist__12154);
arglist__12154 = cljs.core.next(arglist__12154);
var idx = cljs.core.first(arglist__12154);
arglist__12154 = cljs.core.next(arglist__12154);
var idx2 = cljs.core.first(arglist__12154);
var idxv = cljs.core.rest(arglist__12154);
return G__12152__delegate(array,idx,idx2,idxv);
});
G__12152.cljs$core$IFn$_invoke$arity$variadic = G__12152__delegate;
return G__12152;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__12155 = null;
if (arguments.length > 3) {
var G__12156__i = 0, G__12156__a = new Array(arguments.length -  3);
while (G__12156__i < G__12156__a.length) {G__12156__a[G__12156__i] = arguments[G__12156__i + 3]; ++G__12156__i;}
G__12155 = new cljs.core.IndexedSeq(G__12156__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__12155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__12162 = (function (a,x){
a.push(x);

return a;
});
var G__12163 = [];
var G__12164 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12162,G__12163,G__12164) : cljs.core.reduce.call(null,G__12162,G__12163,G__12164));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__12165__i = 0, G__12165__a = new Array(arguments.length -  2);
while (G__12165__i < G__12165__a.length) {G__12165__a[G__12165__i] = arguments[G__12165__i + 2]; ++G__12165__i;}
  args = new cljs.core.IndexedSeq(G__12165__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__12166){
var obj = cljs.core.first(arglist__12166);
arglist__12166 = cljs.core.next(arglist__12166);
var s = cljs.core.first(arglist__12166);
var args = cljs.core.rest(arglist__12166);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj12168 = {};
return obj12168;
})();


cljs.core.IFn = (function (){var obj12170 = {};
return obj12170;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12216 = x__4508__auto__;
return goog.typeOf(G__12216);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12218 = x__4508__auto__;
return goog.typeOf(G__12218);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12220 = x__4508__auto__;
return goog.typeOf(G__12220);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12222 = x__4508__auto__;
return goog.typeOf(G__12222);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12224 = x__4508__auto__;
return goog.typeOf(G__12224);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12226 = x__4508__auto__;
return goog.typeOf(G__12226);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12228 = x__4508__auto__;
return goog.typeOf(G__12228);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12230 = x__4508__auto__;
return goog.typeOf(G__12230);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12232 = x__4508__auto__;
return goog.typeOf(G__12232);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12234 = x__4508__auto__;
return goog.typeOf(G__12234);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12236 = x__4508__auto__;
return goog.typeOf(G__12236);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12238 = x__4508__auto__;
return goog.typeOf(G__12238);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12240 = x__4508__auto__;
return goog.typeOf(G__12240);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12242 = x__4508__auto__;
return goog.typeOf(G__12242);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12244 = x__4508__auto__;
return goog.typeOf(G__12244);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12246 = x__4508__auto__;
return goog.typeOf(G__12246);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12248 = x__4508__auto__;
return goog.typeOf(G__12248);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12250 = x__4508__auto__;
return goog.typeOf(G__12250);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12252 = x__4508__auto__;
return goog.typeOf(G__12252);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12254 = x__4508__auto__;
return goog.typeOf(G__12254);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12256 = x__4508__auto__;
return goog.typeOf(G__12256);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._invoke[(function (){var G__12258 = x__4508__auto__;
return goog.typeOf(G__12258);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._invoke["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj12260 = {};
return obj12260;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3852__auto__ = value;
if(and__3852__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3852__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4508__auto__ = (((value == null))?null:value);
return (function (){var or__3864__auto__ = (cljs.core._clone[(function (){var G__12264 = x__4508__auto__;
return goog.typeOf(G__12264);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._clone["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj12266 = {};
return obj12266;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._count[(function (){var G__12270 = x__4508__auto__;
return goog.typeOf(G__12270);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._count["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj12272 = {};
return obj12272;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._empty[(function (){var G__12276 = x__4508__auto__;
return goog.typeOf(G__12276);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._empty["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj12278 = {};
return obj12278;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._conj[(function (){var G__12282 = x__4508__auto__;
return goog.typeOf(G__12282);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._conj["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj12284 = {};
return obj12284;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._nth[(function (){var G__12290 = x__4508__auto__;
return goog.typeOf(G__12290);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._nth["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._nth[(function (){var G__12292 = x__4508__auto__;
return goog.typeOf(G__12292);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._nth["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj12294 = {};
return obj12294;
})();


cljs.core.ISeq = (function (){var obj12296 = {};
return obj12296;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._first[(function (){var G__12300 = x__4508__auto__;
return goog.typeOf(G__12300);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._first["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._rest[(function (){var G__12304 = x__4508__auto__;
return goog.typeOf(G__12304);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._rest["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj12306 = {};
return obj12306;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._next[(function (){var G__12310 = x__4508__auto__;
return goog.typeOf(G__12310);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._next["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj12312 = {};
return obj12312;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._lookup[(function (){var G__12318 = x__4508__auto__;
return goog.typeOf(G__12318);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._lookup["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._lookup[(function (){var G__12320 = x__4508__auto__;
return goog.typeOf(G__12320);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._lookup["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj12322 = {};
return obj12322;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__12326 = x__4508__auto__;
return goog.typeOf(G__12326);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._assoc[(function (){var G__12330 = x__4508__auto__;
return goog.typeOf(G__12330);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._assoc["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj12332 = {};
return obj12332;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._dissoc[(function (){var G__12336 = x__4508__auto__;
return goog.typeOf(G__12336);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj12338 = {};
return obj12338;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._key[(function (){var G__12342 = x__4508__auto__;
return goog.typeOf(G__12342);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._key["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._val[(function (){var G__12346 = x__4508__auto__;
return goog.typeOf(G__12346);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._val["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj12348 = {};
return obj12348;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._disjoin[(function (){var G__12352 = x__4508__auto__;
return goog.typeOf(G__12352);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj12354 = {};
return obj12354;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._peek[(function (){var G__12358 = x__4508__auto__;
return goog.typeOf(G__12358);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._peek["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._pop[(function (){var G__12362 = x__4508__auto__;
return goog.typeOf(G__12362);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._pop["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj12364 = {};
return obj12364;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._assoc_n[(function (){var G__12368 = x__4508__auto__;
return goog.typeOf(G__12368);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj12370 = {};
return obj12370;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._deref[(function (){var G__12374 = x__4508__auto__;
return goog.typeOf(G__12374);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._deref["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj12376 = {};
return obj12376;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._deref_with_timeout[(function (){var G__12380 = x__4508__auto__;
return goog.typeOf(G__12380);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj12382 = {};
return obj12382;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._meta[(function (){var G__12386 = x__4508__auto__;
return goog.typeOf(G__12386);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._meta["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj12388 = {};
return obj12388;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._with_meta[(function (){var G__12392 = x__4508__auto__;
return goog.typeOf(G__12392);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj12394 = {};
return obj12394;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._reduce[(function (){var G__12400 = x__4508__auto__;
return goog.typeOf(G__12400);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._reduce["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._reduce[(function (){var G__12402 = x__4508__auto__;
return goog.typeOf(G__12402);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._reduce["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj12404 = {};
return obj12404;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._kv_reduce[(function (){var G__12408 = x__4508__auto__;
return goog.typeOf(G__12408);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj12410 = {};
return obj12410;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._equiv[(function (){var G__12414 = x__4508__auto__;
return goog.typeOf(G__12414);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._equiv["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj12416 = {};
return obj12416;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._hash[(function (){var G__12420 = x__4508__auto__;
return goog.typeOf(G__12420);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._hash["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj12422 = {};
return obj12422;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._seq[(function (){var G__12426 = x__4508__auto__;
return goog.typeOf(G__12426);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._seq["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj12428 = {};
return obj12428;
})();


cljs.core.IList = (function (){var obj12430 = {};
return obj12430;
})();


cljs.core.IRecord = (function (){var obj12432 = {};
return obj12432;
})();


cljs.core.IReversible = (function (){var obj12434 = {};
return obj12434;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._rseq[(function (){var G__12438 = x__4508__auto__;
return goog.typeOf(G__12438);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._rseq["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj12440 = {};
return obj12440;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._sorted_seq[(function (){var G__12444 = x__4508__auto__;
return goog.typeOf(G__12444);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._sorted_seq_from[(function (){var G__12448 = x__4508__auto__;
return goog.typeOf(G__12448);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._entry_key[(function (){var G__12452 = x__4508__auto__;
return goog.typeOf(G__12452);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._comparator[(function (){var G__12456 = x__4508__auto__;
return goog.typeOf(G__12456);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._comparator["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj12458 = {};
return obj12458;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3852__auto__ = writer;
if(and__3852__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3852__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4508__auto__ = (((writer == null))?null:writer);
return (function (){var or__3864__auto__ = (cljs.core._write[(function (){var G__12462 = x__4508__auto__;
return goog.typeOf(G__12462);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._write["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3852__auto__ = writer;
if(and__3852__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3852__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4508__auto__ = (((writer == null))?null:writer);
return (function (){var or__3864__auto__ = (cljs.core._flush[(function (){var G__12466 = x__4508__auto__;
return goog.typeOf(G__12466);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._flush["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj12468 = {};
return obj12468;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._pr_writer[(function (){var G__12472 = x__4508__auto__;
return goog.typeOf(G__12472);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj12474 = {};
return obj12474;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3852__auto__ = d;
if(and__3852__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3852__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4508__auto__ = (((d == null))?null:d);
return (function (){var or__3864__auto__ = (cljs.core._realized_QMARK_[(function (){var G__12478 = x__4508__auto__;
return goog.typeOf(G__12478);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj12480 = {};
return obj12480;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._notify_watches[(function (){var G__12484 = x__4508__auto__;
return goog.typeOf(G__12484);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._add_watch[(function (){var G__12488 = x__4508__auto__;
return goog.typeOf(G__12488);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3852__auto__ = this$;
if(and__3852__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3852__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4508__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3864__auto__ = (cljs.core._remove_watch[(function (){var G__12492 = x__4508__auto__;
return goog.typeOf(G__12492);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj12494 = {};
return obj12494;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._as_transient[(function (){var G__12498 = x__4508__auto__;
return goog.typeOf(G__12498);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj12500 = {};
return obj12500;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._conj_BANG_[(function (){var G__12504 = x__4508__auto__;
return goog.typeOf(G__12504);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._persistent_BANG_[(function (){var G__12508 = x__4508__auto__;
return goog.typeOf(G__12508);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj12510 = {};
return obj12510;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._assoc_BANG_[(function (){var G__12514 = x__4508__auto__;
return goog.typeOf(G__12514);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj12516 = {};
return obj12516;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__12520 = x__4508__auto__;
return goog.typeOf(G__12520);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj12522 = {};
return obj12522;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__12526 = x__4508__auto__;
return goog.typeOf(G__12526);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._pop_BANG_[(function (){var G__12530 = x__4508__auto__;
return goog.typeOf(G__12530);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj12532 = {};
return obj12532;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3852__auto__ = tcoll;
if(and__3852__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4508__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3864__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__12536 = x__4508__auto__;
return goog.typeOf(G__12536);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj12538 = {};
return obj12538;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._compare[(function (){var G__12542 = x__4508__auto__;
return goog.typeOf(G__12542);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._compare["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj12544 = {};
return obj12544;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._drop_first[(function (){var G__12548 = x__4508__auto__;
return goog.typeOf(G__12548);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj12550 = {};
return obj12550;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._chunked_first[(function (){var G__12554 = x__4508__auto__;
return goog.typeOf(G__12554);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._chunked_rest[(function (){var G__12558 = x__4508__auto__;
return goog.typeOf(G__12558);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj12560 = {};
return obj12560;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._chunked_next[(function (){var G__12564 = x__4508__auto__;
return goog.typeOf(G__12564);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj12566 = {};
return obj12566;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._name[(function (){var G__12570 = x__4508__auto__;
return goog.typeOf(G__12570);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._name["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._namespace[(function (){var G__12574 = x__4508__auto__;
return goog.typeOf(G__12574);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._namespace["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj12576 = {};
return obj12576;
})();


cljs.core.IReset = (function (){var obj12578 = {};
return obj12578;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._reset_BANG_[(function (){var G__12582 = x__4508__auto__;
return goog.typeOf(G__12582);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj12584 = {};
return obj12584;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._swap_BANG_[(function (){var G__12594 = x__4508__auto__;
return goog.typeOf(G__12594);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._swap_BANG_[(function (){var G__12596 = x__4508__auto__;
return goog.typeOf(G__12596);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._swap_BANG_[(function (){var G__12598 = x__4508__auto__;
return goog.typeOf(G__12598);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._swap_BANG_[(function (){var G__12600 = x__4508__auto__;
return goog.typeOf(G__12600);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj12602 = {};
return obj12602;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3852__auto__ = o;
if(and__3852__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3852__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4508__auto__ = (((o == null))?null:o);
return (function (){var or__3864__auto__ = (cljs.core._vreset_BANG_[(function (){var G__12606 = x__4508__auto__;
return goog.typeOf(G__12606);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj12608 = {};
return obj12608;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3852__auto__ = coll;
if(and__3852__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3852__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4508__auto__ = (((coll == null))?null:coll);
return (function (){var or__3864__auto__ = (cljs.core._iterator[(function (){var G__12612 = x__4508__auto__;
return goog.typeOf(G__12612);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._iterator["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__12615 = (4294967295);
var G__12616 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12615,G__12616) : Math.imul.call(null,G__12615,G__12616));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__12619 = a;
var G__12620 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12619,G__12620) : Math.imul.call(null,G__12619,G__12620));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__12621 = (i + (2));
var G__12622 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__12621;
h1 = G__12622;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj12624 = {};
return obj12624;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__12625 = (i + (1));
var G__12626 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__12625;
hash = G__12626;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj12630 = {};
return obj12630;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__12633 = o;
if(G__12633){
var bit__4538__auto__ = (G__12633.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4538__auto__) || (G__12633.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__12634 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12634) : Math.floor.call(null,G__12634));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3852__auto__ = cljs.core.not(a.ns);
if(and__3852__auto__){
return b.ns;
} else {
return and__3852__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12641 = a.ns;
var G__12642 = b.ns;
return goog.array.defaultCompare(G__12641,G__12642);
})();
if(((0) === nsc)){
var G__12643 = a.name;
var G__12644 = b.name;
return goog.array.defaultCompare(G__12643,G__12644);
} else {
return nsc;
}
}
} else {
var G__12645 = a.name;
var G__12646 = b.name;
return goog.array.defaultCompare(G__12645,G__12646);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4285__auto__ = self__._hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__12648 = null;
var G__12648__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__12648__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__12648 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12648__2.call(this,self__,coll);
case 3:
return G__12648__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12648.cljs$core$IFn$_invoke$arity$2 = G__12648__2;
G__12648.cljs$core$IFn$_invoke$arity$3 = G__12648__3;
return G__12648;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args12647){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12647)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__12696 = null;
var G__12696__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__12696__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__12696__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__12696__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__12696__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__12696__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__12696__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__12696__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__12696__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__12696__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__12696__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__12696__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__12696__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__12696__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__12696__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__12696__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__12696__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__12696__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__12696__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__12696__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__12696__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__12696__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12652 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12653 = a;
var G__12654 = b;
var G__12655 = c;
var G__12656 = d;
var G__12657 = e;
var G__12658 = f;
var G__12659 = g;
var G__12660 = h;
var G__12661 = i;
var G__12662 = j;
var G__12663 = k;
var G__12664 = l;
var G__12665 = m;
var G__12666 = n;
var G__12667 = o;
var G__12668 = p;
var G__12669 = q;
var G__12670 = r;
var G__12671 = s;
var G__12672 = t;
var G__12673 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673) : cljs.core.apply.call(null,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673));
});
G__12696 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12696__1.call(this,self__);
case 2:
return G__12696__2.call(this,self__,a);
case 3:
return G__12696__3.call(this,self__,a,b);
case 4:
return G__12696__4.call(this,self__,a,b,c);
case 5:
return G__12696__5.call(this,self__,a,b,c,d);
case 6:
return G__12696__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12696__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12696__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12696__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12696__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12696__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12696__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12696__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12696__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12696__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12696__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12696__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12696__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12696__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12696__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12696__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12696__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12696.cljs$core$IFn$_invoke$arity$1 = G__12696__1;
G__12696.cljs$core$IFn$_invoke$arity$2 = G__12696__2;
G__12696.cljs$core$IFn$_invoke$arity$3 = G__12696__3;
G__12696.cljs$core$IFn$_invoke$arity$4 = G__12696__4;
G__12696.cljs$core$IFn$_invoke$arity$5 = G__12696__5;
G__12696.cljs$core$IFn$_invoke$arity$6 = G__12696__6;
G__12696.cljs$core$IFn$_invoke$arity$7 = G__12696__7;
G__12696.cljs$core$IFn$_invoke$arity$8 = G__12696__8;
G__12696.cljs$core$IFn$_invoke$arity$9 = G__12696__9;
G__12696.cljs$core$IFn$_invoke$arity$10 = G__12696__10;
G__12696.cljs$core$IFn$_invoke$arity$11 = G__12696__11;
G__12696.cljs$core$IFn$_invoke$arity$12 = G__12696__12;
G__12696.cljs$core$IFn$_invoke$arity$13 = G__12696__13;
G__12696.cljs$core$IFn$_invoke$arity$14 = G__12696__14;
G__12696.cljs$core$IFn$_invoke$arity$15 = G__12696__15;
G__12696.cljs$core$IFn$_invoke$arity$16 = G__12696__16;
G__12696.cljs$core$IFn$_invoke$arity$17 = G__12696__17;
G__12696.cljs$core$IFn$_invoke$arity$18 = G__12696__18;
G__12696.cljs$core$IFn$_invoke$arity$19 = G__12696__19;
G__12696.cljs$core$IFn$_invoke$arity$20 = G__12696__20;
G__12696.cljs$core$IFn$_invoke$arity$21 = G__12696__21;
G__12696.cljs$core$IFn$_invoke$arity$22 = G__12696__22;
return G__12696;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args12651){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12651)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12674 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12675 = a;
var G__12676 = b;
var G__12677 = c;
var G__12678 = d;
var G__12679 = e;
var G__12680 = f;
var G__12681 = g;
var G__12682 = h;
var G__12683 = i;
var G__12684 = j;
var G__12685 = k;
var G__12686 = l;
var G__12687 = m;
var G__12688 = n;
var G__12689 = o;
var G__12690 = p;
var G__12691 = q;
var G__12692 = r;
var G__12693 = s;
var G__12694 = t;
var G__12695 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695) : cljs.core.apply.call(null,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__12698 = x;
if(G__12698){
var bit__4545__auto__ = null;
if(cljs.core.truth_((function (){var or__3864__auto__ = bit__4545__auto__;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return G__12698.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__12698.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12698);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12698);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__12700 = value;
if(G__12700){
var bit__4545__auto__ = (G__12700.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4545__auto__) || (G__12700.cljs$core$ICloneable$)){
return true;
} else {
if((!G__12700.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12700);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12700);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12702 = coll;
if(G__12702){
var bit__4538__auto__ = (G__12702.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4538__auto__) || (G__12702.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12704 = coll;
if(G__12704){
var bit__4538__auto__ = (G__12704.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4538__auto__) || (G__12704.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__12706 = coll;
if(G__12706){
var bit__4538__auto__ = (G__12706.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4538__auto__) || (G__12706.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12708 = coll;
if(G__12708){
var bit__4538__auto__ = (G__12708.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4538__auto__) || (G__12708.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__12713__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12714 = y;
var G__12715 = cljs.core.first(more);
var G__12716 = cljs.core.next(more);
x = G__12714;
y = G__12715;
more = G__12716;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12717__i = 0, G__12717__a = new Array(arguments.length -  2);
while (G__12717__i < G__12717__a.length) {G__12717__a[G__12717__i] = arguments[G__12717__i + 2]; ++G__12717__i;}
  more = new cljs.core.IndexedSeq(G__12717__a,0);
} 
return G__12713__delegate.call(this,x,y,more);};
G__12713.cljs$lang$maxFixedArity = 2;
G__12713.cljs$lang$applyTo = (function (arglist__12718){
var x = cljs.core.first(arglist__12718);
arglist__12718 = cljs.core.next(arglist__12718);
var y = cljs.core.first(arglist__12718);
var more = cljs.core.rest(arglist__12718);
return G__12713__delegate(x,y,more);
});
G__12713.cljs$core$IFn$_invoke$arity$variadic = G__12713__delegate;
return G__12713;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__12719 = null;
if (arguments.length > 2) {
var G__12720__i = 0, G__12720__a = new Array(arguments.length -  2);
while (G__12720__i < G__12720__a.length) {G__12720__a[G__12720__i] = arguments[G__12720__i + 2]; ++G__12720__i;}
G__12719 = new cljs.core.IndexedSeq(G__12720__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__12721 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12721) : cljs.core.es6_iterator_seq.call(null,G__12721));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12722 = (n + (1));
var G__12723 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12724 = cljs.core.next(coll__$1);
n = G__12722;
hash_code = G__12723;
coll__$1 = G__12724;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12725 = (n + (1));
var G__12726 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12727 = cljs.core.next(coll__$1);
n = G__12725;
hash_code = G__12726;
coll__$1 = G__12727;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__12728 = o;
return goog.getUid(G__12728);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__12730 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12730) : cljs.core.deref.call(null,G__12730));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12737 = val;
var G__12738 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12737,G__12738) : f.call(null,G__12737,G__12738));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12743 = nval;
var G__12744 = (n + (1));
val = G__12743;
n = G__12744;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12739 = val__$1;
var G__12740 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12739,G__12740) : f.call(null,G__12739,G__12740));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12745 = nval;
var G__12746 = (n + (1));
val__$1 = G__12745;
n = G__12746;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12741 = val__$1;
var G__12742 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12741,G__12742) : f.call(null,G__12741,G__12742));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12747 = nval;
var G__12748 = (n + (1));
val__$1 = G__12747;
n = G__12748;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12755 = val;
var G__12756 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12755,G__12756) : f.call(null,G__12755,G__12756));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12761 = nval;
var G__12762 = (n + (1));
val = G__12761;
n = G__12762;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12757 = val__$1;
var G__12758 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12757,G__12758) : f.call(null,G__12757,G__12758));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12763 = nval;
var G__12764 = (n + (1));
val__$1 = G__12763;
n = G__12764;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12759 = val__$1;
var G__12760 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12759,G__12760) : f.call(null,G__12759,G__12760));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12765 = nval;
var G__12766 = (n + (1));
val__$1 = G__12765;
n = G__12766;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__12768 = x;
if(G__12768){
var bit__4545__auto__ = (G__12768.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4545__auto__) || (G__12768.cljs$core$ICounted$)){
return true;
} else {
if((!G__12768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12768);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__12770 = x;
if(G__12770){
var bit__4545__auto__ = (G__12770.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4545__auto__) || (G__12770.cljs$core$IIndexed$)){
return true;
} else {
if((!G__12770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12770);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12771 = coll__$1;
var G__12772 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12771,G__12772) : cljs.core.equiv_sequential.call(null,G__12771,G__12772));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12773 = o;
var G__12774 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12773,G__12774) : cljs.core.cons.call(null,G__12773,G__12774));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12777 = coll__$1;
var G__12778 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12777,G__12778) : cljs.core.equiv_sequential.call(null,G__12777,G__12778));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__12779 = cljs.core.List.EMPTY;
var G__12780 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12779,G__12780) : cljs.core.with_meta.call(null,G__12779,G__12780));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__12781 = f;
var G__12782 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12781,G__12782) : cljs.core.seq_reduce.call(null,G__12781,G__12782));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__12783 = f;
var G__12784 = start;
var G__12785 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12783,G__12784,G__12785) : cljs.core.seq_reduce.call(null,G__12783,G__12784,G__12785));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12786 = o;
var G__12787 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12786,G__12787) : cljs.core.cons.call(null,G__12786,G__12787));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__12788 = sn;
s = G__12788;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__12793__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__12794 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__12795 = cljs.core.first(xs);
var G__12796 = cljs.core.next(xs);
coll = G__12794;
x = G__12795;
xs = G__12796;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__12793 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__12797__i = 0, G__12797__a = new Array(arguments.length -  2);
while (G__12797__i < G__12797__a.length) {G__12797__a[G__12797__i] = arguments[G__12797__i + 2]; ++G__12797__i;}
  xs = new cljs.core.IndexedSeq(G__12797__a,0);
} 
return G__12793__delegate.call(this,coll,x,xs);};
G__12793.cljs$lang$maxFixedArity = 2;
G__12793.cljs$lang$applyTo = (function (arglist__12798){
var coll = cljs.core.first(arglist__12798);
arglist__12798 = cljs.core.next(arglist__12798);
var x = cljs.core.first(arglist__12798);
var xs = cljs.core.rest(arglist__12798);
return G__12793__delegate(coll,x,xs);
});
G__12793.cljs$core$IFn$_invoke$arity$variadic = G__12793__delegate;
return G__12793;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__12799 = null;
if (arguments.length > 2) {
var G__12800__i = 0, G__12800__a = new Array(arguments.length -  2);
while (G__12800__i < G__12800__a.length) {G__12800__a[G__12800__i] = arguments[G__12800__i + 2]; ++G__12800__i;}
G__12799 = new cljs.core.IndexedSeq(G__12800__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__12799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__12801 = cljs.core.next(s);
var G__12802 = (acc + (1));
s = G__12801;
acc = G__12802;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__12804 = coll;
if(G__12804){
var bit__4538__auto__ = (G__12804.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4538__auto__) || (G__12804.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__12805 = cljs.core.next(coll);
var G__12806 = (n - (1));
coll = G__12805;
n = G__12806;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__12807 = cljs.core.next(coll);
var G__12808 = (n - (1));
var G__12809 = not_found;
coll = G__12807;
n = G__12808;
not_found = G__12809;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__12814 = coll;
if(G__12814){
var bit__4538__auto__ = (G__12814.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4538__auto__) || (G__12814.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12815 = coll;
if(G__12815){
var bit__4545__auto__ = (G__12815.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4545__auto__) || (G__12815.cljs$core$ISeq$)){
return true;
} else {
if((!G__12815.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12815);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12815);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__12816 = coll;
if(G__12816){
var bit__4538__auto__ = (G__12816.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4538__auto__) || (G__12816.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12817 = coll;
if(G__12817){
var bit__4545__auto__ = (G__12817.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4545__auto__) || (G__12817.cljs$core$ISeq$)){
return true;
} else {
if((!G__12817.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12817);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12817);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__12818 = (n__$1 - (1));
var G__12819 = cljs.core.rest(xs);
n__$1 = G__12818;
xs = G__12819;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__12822 = o;
if(G__12822){
var bit__4538__auto__ = (G__12822.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4538__auto__) || (G__12822.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__12823 = o;
if(G__12823){
var bit__4538__auto__ = (G__12823.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4538__auto__) || (G__12823.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__12827__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__12828 = ret;
var G__12829 = cljs.core.first(kvs);
var G__12830 = cljs.core.second(kvs);
var G__12831 = cljs.core.nnext(kvs);
coll = G__12828;
k = G__12829;
v = G__12830;
kvs = G__12831;
continue;
} else {
return ret;
}
break;
}
};
var G__12827 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12832__i = 0, G__12832__a = new Array(arguments.length -  3);
while (G__12832__i < G__12832__a.length) {G__12832__a[G__12832__i] = arguments[G__12832__i + 3]; ++G__12832__i;}
  kvs = new cljs.core.IndexedSeq(G__12832__a,0);
} 
return G__12827__delegate.call(this,coll,k,v,kvs);};
G__12827.cljs$lang$maxFixedArity = 3;
G__12827.cljs$lang$applyTo = (function (arglist__12833){
var coll = cljs.core.first(arglist__12833);
arglist__12833 = cljs.core.next(arglist__12833);
var k = cljs.core.first(arglist__12833);
arglist__12833 = cljs.core.next(arglist__12833);
var v = cljs.core.first(arglist__12833);
var kvs = cljs.core.rest(arglist__12833);
return G__12827__delegate(coll,k,v,kvs);
});
G__12827.cljs$core$IFn$_invoke$arity$variadic = G__12827__delegate;
return G__12827;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__12834 = null;
if (arguments.length > 3) {
var G__12835__i = 0, G__12835__a = new Array(arguments.length -  3);
while (G__12835__i < G__12835__a.length) {G__12835__a[G__12835__i] = arguments[G__12835__i + 3]; ++G__12835__i;}
G__12834 = new cljs.core.IndexedSeq(G__12835__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__12834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__12838__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12839 = ret;
var G__12840 = cljs.core.first(ks);
var G__12841 = cljs.core.next(ks);
coll = G__12839;
k = G__12840;
ks = G__12841;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12838 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12842__i = 0, G__12842__a = new Array(arguments.length -  2);
while (G__12842__i < G__12842__a.length) {G__12842__a[G__12842__i] = arguments[G__12842__i + 2]; ++G__12842__i;}
  ks = new cljs.core.IndexedSeq(G__12842__a,0);
} 
return G__12838__delegate.call(this,coll,k,ks);};
G__12838.cljs$lang$maxFixedArity = 2;
G__12838.cljs$lang$applyTo = (function (arglist__12843){
var coll = cljs.core.first(arglist__12843);
arglist__12843 = cljs.core.next(arglist__12843);
var k = cljs.core.first(arglist__12843);
var ks = cljs.core.rest(arglist__12843);
return G__12838__delegate(coll,k,ks);
});
G__12838.cljs$core$IFn$_invoke$arity$variadic = G__12838__delegate;
return G__12838;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__12844 = null;
if (arguments.length > 2) {
var G__12845__i = 0, G__12845__a = new Array(arguments.length -  2);
while (G__12845__i < G__12845__a.length) {G__12845__a[G__12845__i] = arguments[G__12845__i + 2]; ++G__12845__i;}
G__12844 = new cljs.core.IndexedSeq(G__12845__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3864__auto__ = (function (){var G__12850 = f;
return goog.isFunction(G__12850);
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var G__12851 = f;
if(G__12851){
var bit__4545__auto__ = null;
if(cljs.core.truth_((function (){var or__3864__auto____$1 = bit__4545__auto__;
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
return G__12851.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__12851.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12851);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12851);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__13317 = null;
var G__13317__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__13317__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12853 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12853) : self__.afn.call(null,G__12853));
});
var G__13317__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12854 = a;
var G__12855 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12854,G__12855) : self__.afn.call(null,G__12854,G__12855));
});
var G__13317__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12856 = a;
var G__12857 = b;
var G__12858 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12856,G__12857,G__12858) : self__.afn.call(null,G__12856,G__12857,G__12858));
});
var G__13317__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12859 = a;
var G__12860 = b;
var G__12861 = c;
var G__12862 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12859,G__12860,G__12861,G__12862) : self__.afn.call(null,G__12859,G__12860,G__12861,G__12862));
});
var G__13317__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12863 = a;
var G__12864 = b;
var G__12865 = c;
var G__12866 = d;
var G__12867 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12863,G__12864,G__12865,G__12866,G__12867) : self__.afn.call(null,G__12863,G__12864,G__12865,G__12866,G__12867));
});
var G__13317__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12868 = a;
var G__12869 = b;
var G__12870 = c;
var G__12871 = d;
var G__12872 = e;
var G__12873 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12868,G__12869,G__12870,G__12871,G__12872,G__12873) : self__.afn.call(null,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873));
});
var G__13317__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12874 = a;
var G__12875 = b;
var G__12876 = c;
var G__12877 = d;
var G__12878 = e;
var G__12879 = f;
var G__12880 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880) : self__.afn.call(null,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880));
});
var G__13317__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12881 = a;
var G__12882 = b;
var G__12883 = c;
var G__12884 = d;
var G__12885 = e;
var G__12886 = f;
var G__12887 = g;
var G__12888 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888) : self__.afn.call(null,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888));
});
var G__13317__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12889 = a;
var G__12890 = b;
var G__12891 = c;
var G__12892 = d;
var G__12893 = e;
var G__12894 = f;
var G__12895 = g;
var G__12896 = h;
var G__12897 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897) : self__.afn.call(null,G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897));
});
var G__13317__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12898 = a;
var G__12899 = b;
var G__12900 = c;
var G__12901 = d;
var G__12902 = e;
var G__12903 = f;
var G__12904 = g;
var G__12905 = h;
var G__12906 = i;
var G__12907 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907) : self__.afn.call(null,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907));
});
var G__13317__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12908 = a;
var G__12909 = b;
var G__12910 = c;
var G__12911 = d;
var G__12912 = e;
var G__12913 = f;
var G__12914 = g;
var G__12915 = h;
var G__12916 = i;
var G__12917 = j;
var G__12918 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918) : self__.afn.call(null,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918));
});
var G__13317__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12919 = a;
var G__12920 = b;
var G__12921 = c;
var G__12922 = d;
var G__12923 = e;
var G__12924 = f;
var G__12925 = g;
var G__12926 = h;
var G__12927 = i;
var G__12928 = j;
var G__12929 = k;
var G__12930 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930) : self__.afn.call(null,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930));
});
var G__13317__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12931 = a;
var G__12932 = b;
var G__12933 = c;
var G__12934 = d;
var G__12935 = e;
var G__12936 = f;
var G__12937 = g;
var G__12938 = h;
var G__12939 = i;
var G__12940 = j;
var G__12941 = k;
var G__12942 = l;
var G__12943 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943) : self__.afn.call(null,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943));
});
var G__13317__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12944 = a;
var G__12945 = b;
var G__12946 = c;
var G__12947 = d;
var G__12948 = e;
var G__12949 = f;
var G__12950 = g;
var G__12951 = h;
var G__12952 = i;
var G__12953 = j;
var G__12954 = k;
var G__12955 = l;
var G__12956 = m;
var G__12957 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957) : self__.afn.call(null,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957));
});
var G__13317__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12958 = a;
var G__12959 = b;
var G__12960 = c;
var G__12961 = d;
var G__12962 = e;
var G__12963 = f;
var G__12964 = g;
var G__12965 = h;
var G__12966 = i;
var G__12967 = j;
var G__12968 = k;
var G__12969 = l;
var G__12970 = m;
var G__12971 = n;
var G__12972 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972) : self__.afn.call(null,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972));
});
var G__13317__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12973 = a;
var G__12974 = b;
var G__12975 = c;
var G__12976 = d;
var G__12977 = e;
var G__12978 = f;
var G__12979 = g;
var G__12980 = h;
var G__12981 = i;
var G__12982 = j;
var G__12983 = k;
var G__12984 = l;
var G__12985 = m;
var G__12986 = n;
var G__12987 = o;
var G__12988 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988) : self__.afn.call(null,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988));
});
var G__13317__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12989 = a;
var G__12990 = b;
var G__12991 = c;
var G__12992 = d;
var G__12993 = e;
var G__12994 = f;
var G__12995 = g;
var G__12996 = h;
var G__12997 = i;
var G__12998 = j;
var G__12999 = k;
var G__13000 = l;
var G__13001 = m;
var G__13002 = n;
var G__13003 = o;
var G__13004 = p;
var G__13005 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005) : self__.afn.call(null,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005));
});
var G__13317__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13006 = a;
var G__13007 = b;
var G__13008 = c;
var G__13009 = d;
var G__13010 = e;
var G__13011 = f;
var G__13012 = g;
var G__13013 = h;
var G__13014 = i;
var G__13015 = j;
var G__13016 = k;
var G__13017 = l;
var G__13018 = m;
var G__13019 = n;
var G__13020 = o;
var G__13021 = p;
var G__13022 = q;
var G__13023 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023) : self__.afn.call(null,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023));
});
var G__13317__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13024 = a;
var G__13025 = b;
var G__13026 = c;
var G__13027 = d;
var G__13028 = e;
var G__13029 = f;
var G__13030 = g;
var G__13031 = h;
var G__13032 = i;
var G__13033 = j;
var G__13034 = k;
var G__13035 = l;
var G__13036 = m;
var G__13037 = n;
var G__13038 = o;
var G__13039 = p;
var G__13040 = q;
var G__13041 = r;
var G__13042 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042) : self__.afn.call(null,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042));
});
var G__13317__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13043 = a;
var G__13044 = b;
var G__13045 = c;
var G__13046 = d;
var G__13047 = e;
var G__13048 = f;
var G__13049 = g;
var G__13050 = h;
var G__13051 = i;
var G__13052 = j;
var G__13053 = k;
var G__13054 = l;
var G__13055 = m;
var G__13056 = n;
var G__13057 = o;
var G__13058 = p;
var G__13059 = q;
var G__13060 = r;
var G__13061 = s;
var G__13062 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062) : self__.afn.call(null,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062));
});
var G__13317__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13063 = self__.afn;
var G__13064 = a;
var G__13065 = b;
var G__13066 = c;
var G__13067 = d;
var G__13068 = e;
var G__13069 = f;
var G__13070 = g;
var G__13071 = h;
var G__13072 = i;
var G__13073 = j;
var G__13074 = k;
var G__13075 = l;
var G__13076 = m;
var G__13077 = n;
var G__13078 = o;
var G__13079 = p;
var G__13080 = q;
var G__13081 = r;
var G__13082 = s;
var G__13083 = t;
var G__13084 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084) : cljs.core.apply.call(null,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084));
});
G__13317 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13317__1.call(this,self__);
case 2:
return G__13317__2.call(this,self__,a);
case 3:
return G__13317__3.call(this,self__,a,b);
case 4:
return G__13317__4.call(this,self__,a,b,c);
case 5:
return G__13317__5.call(this,self__,a,b,c,d);
case 6:
return G__13317__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13317__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13317__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13317__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13317__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13317__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13317__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13317__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13317__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13317__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13317__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13317__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13317__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13317__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13317__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13317__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13317__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13317.cljs$core$IFn$_invoke$arity$1 = G__13317__1;
G__13317.cljs$core$IFn$_invoke$arity$2 = G__13317__2;
G__13317.cljs$core$IFn$_invoke$arity$3 = G__13317__3;
G__13317.cljs$core$IFn$_invoke$arity$4 = G__13317__4;
G__13317.cljs$core$IFn$_invoke$arity$5 = G__13317__5;
G__13317.cljs$core$IFn$_invoke$arity$6 = G__13317__6;
G__13317.cljs$core$IFn$_invoke$arity$7 = G__13317__7;
G__13317.cljs$core$IFn$_invoke$arity$8 = G__13317__8;
G__13317.cljs$core$IFn$_invoke$arity$9 = G__13317__9;
G__13317.cljs$core$IFn$_invoke$arity$10 = G__13317__10;
G__13317.cljs$core$IFn$_invoke$arity$11 = G__13317__11;
G__13317.cljs$core$IFn$_invoke$arity$12 = G__13317__12;
G__13317.cljs$core$IFn$_invoke$arity$13 = G__13317__13;
G__13317.cljs$core$IFn$_invoke$arity$14 = G__13317__14;
G__13317.cljs$core$IFn$_invoke$arity$15 = G__13317__15;
G__13317.cljs$core$IFn$_invoke$arity$16 = G__13317__16;
G__13317.cljs$core$IFn$_invoke$arity$17 = G__13317__17;
G__13317.cljs$core$IFn$_invoke$arity$18 = G__13317__18;
G__13317.cljs$core$IFn$_invoke$arity$19 = G__13317__19;
G__13317.cljs$core$IFn$_invoke$arity$20 = G__13317__20;
G__13317.cljs$core$IFn$_invoke$arity$21 = G__13317__21;
G__13317.cljs$core$IFn$_invoke$arity$22 = G__13317__22;
return G__13317;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args12852){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12852)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__13085 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13085) : self__.afn.call(null,G__13085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__13086 = a;
var G__13087 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13086,G__13087) : self__.afn.call(null,G__13086,G__13087));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__13088 = a;
var G__13089 = b;
var G__13090 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13088,G__13089,G__13090) : self__.afn.call(null,G__13088,G__13089,G__13090));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__13091 = a;
var G__13092 = b;
var G__13093 = c;
var G__13094 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13091,G__13092,G__13093,G__13094) : self__.afn.call(null,G__13091,G__13092,G__13093,G__13094));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__13095 = a;
var G__13096 = b;
var G__13097 = c;
var G__13098 = d;
var G__13099 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13095,G__13096,G__13097,G__13098,G__13099) : self__.afn.call(null,G__13095,G__13096,G__13097,G__13098,G__13099));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__13100 = a;
var G__13101 = b;
var G__13102 = c;
var G__13103 = d;
var G__13104 = e;
var G__13105 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13100,G__13101,G__13102,G__13103,G__13104,G__13105) : self__.afn.call(null,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__13106 = a;
var G__13107 = b;
var G__13108 = c;
var G__13109 = d;
var G__13110 = e;
var G__13111 = f;
var G__13112 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112) : self__.afn.call(null,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__13113 = a;
var G__13114 = b;
var G__13115 = c;
var G__13116 = d;
var G__13117 = e;
var G__13118 = f;
var G__13119 = g;
var G__13120 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120) : self__.afn.call(null,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__13121 = a;
var G__13122 = b;
var G__13123 = c;
var G__13124 = d;
var G__13125 = e;
var G__13126 = f;
var G__13127 = g;
var G__13128 = h;
var G__13129 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129) : self__.afn.call(null,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__13130 = a;
var G__13131 = b;
var G__13132 = c;
var G__13133 = d;
var G__13134 = e;
var G__13135 = f;
var G__13136 = g;
var G__13137 = h;
var G__13138 = i;
var G__13139 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139) : self__.afn.call(null,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__13140 = a;
var G__13141 = b;
var G__13142 = c;
var G__13143 = d;
var G__13144 = e;
var G__13145 = f;
var G__13146 = g;
var G__13147 = h;
var G__13148 = i;
var G__13149 = j;
var G__13150 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150) : self__.afn.call(null,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__13151 = a;
var G__13152 = b;
var G__13153 = c;
var G__13154 = d;
var G__13155 = e;
var G__13156 = f;
var G__13157 = g;
var G__13158 = h;
var G__13159 = i;
var G__13160 = j;
var G__13161 = k;
var G__13162 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162) : self__.afn.call(null,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__13163 = a;
var G__13164 = b;
var G__13165 = c;
var G__13166 = d;
var G__13167 = e;
var G__13168 = f;
var G__13169 = g;
var G__13170 = h;
var G__13171 = i;
var G__13172 = j;
var G__13173 = k;
var G__13174 = l;
var G__13175 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175) : self__.afn.call(null,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__13176 = a;
var G__13177 = b;
var G__13178 = c;
var G__13179 = d;
var G__13180 = e;
var G__13181 = f;
var G__13182 = g;
var G__13183 = h;
var G__13184 = i;
var G__13185 = j;
var G__13186 = k;
var G__13187 = l;
var G__13188 = m;
var G__13189 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189) : self__.afn.call(null,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__13190 = a;
var G__13191 = b;
var G__13192 = c;
var G__13193 = d;
var G__13194 = e;
var G__13195 = f;
var G__13196 = g;
var G__13197 = h;
var G__13198 = i;
var G__13199 = j;
var G__13200 = k;
var G__13201 = l;
var G__13202 = m;
var G__13203 = n;
var G__13204 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204) : self__.afn.call(null,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__13205 = a;
var G__13206 = b;
var G__13207 = c;
var G__13208 = d;
var G__13209 = e;
var G__13210 = f;
var G__13211 = g;
var G__13212 = h;
var G__13213 = i;
var G__13214 = j;
var G__13215 = k;
var G__13216 = l;
var G__13217 = m;
var G__13218 = n;
var G__13219 = o;
var G__13220 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220) : self__.afn.call(null,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__13221 = a;
var G__13222 = b;
var G__13223 = c;
var G__13224 = d;
var G__13225 = e;
var G__13226 = f;
var G__13227 = g;
var G__13228 = h;
var G__13229 = i;
var G__13230 = j;
var G__13231 = k;
var G__13232 = l;
var G__13233 = m;
var G__13234 = n;
var G__13235 = o;
var G__13236 = p;
var G__13237 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237) : self__.afn.call(null,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__13238 = a;
var G__13239 = b;
var G__13240 = c;
var G__13241 = d;
var G__13242 = e;
var G__13243 = f;
var G__13244 = g;
var G__13245 = h;
var G__13246 = i;
var G__13247 = j;
var G__13248 = k;
var G__13249 = l;
var G__13250 = m;
var G__13251 = n;
var G__13252 = o;
var G__13253 = p;
var G__13254 = q;
var G__13255 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255) : self__.afn.call(null,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__13256 = a;
var G__13257 = b;
var G__13258 = c;
var G__13259 = d;
var G__13260 = e;
var G__13261 = f;
var G__13262 = g;
var G__13263 = h;
var G__13264 = i;
var G__13265 = j;
var G__13266 = k;
var G__13267 = l;
var G__13268 = m;
var G__13269 = n;
var G__13270 = o;
var G__13271 = p;
var G__13272 = q;
var G__13273 = r;
var G__13274 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274) : self__.afn.call(null,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__13275 = a;
var G__13276 = b;
var G__13277 = c;
var G__13278 = d;
var G__13279 = e;
var G__13280 = f;
var G__13281 = g;
var G__13282 = h;
var G__13283 = i;
var G__13284 = j;
var G__13285 = k;
var G__13286 = l;
var G__13287 = m;
var G__13288 = n;
var G__13289 = o;
var G__13290 = p;
var G__13291 = q;
var G__13292 = r;
var G__13293 = s;
var G__13294 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294) : self__.afn.call(null,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13295 = self__.afn;
var G__13296 = a;
var G__13297 = b;
var G__13298 = c;
var G__13299 = d;
var G__13300 = e;
var G__13301 = f;
var G__13302 = g;
var G__13303 = h;
var G__13304 = i;
var G__13305 = j;
var G__13306 = k;
var G__13307 = l;
var G__13308 = m;
var G__13309 = n;
var G__13310 = o;
var G__13311 = p;
var G__13312 = q;
var G__13313 = r;
var G__13314 = s;
var G__13315 = t;
var G__13316 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316) : cljs.core.apply.call(null,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__13321 = o;
if(G__13321){
var bit__4545__auto__ = (G__13321.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4545__auto__) || (G__13321.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__13321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13321);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3852__auto__ = !((o == null));
if(and__3852__auto__){
var G__13325 = o;
if(G__13325){
var bit__4545__auto__ = (G__13325.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4545__auto__) || (G__13325.cljs$core$IMeta$)){
return true;
} else {
if((!G__13325.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13325);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13325);
}
} else {
return and__3852__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__13328__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13329 = ret;
var G__13330 = cljs.core.first(ks);
var G__13331 = cljs.core.next(ks);
coll = G__13329;
k = G__13330;
ks = G__13331;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13328 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13332__i = 0, G__13332__a = new Array(arguments.length -  2);
while (G__13332__i < G__13332__a.length) {G__13332__a[G__13332__i] = arguments[G__13332__i + 2]; ++G__13332__i;}
  ks = new cljs.core.IndexedSeq(G__13332__a,0);
} 
return G__13328__delegate.call(this,coll,k,ks);};
G__13328.cljs$lang$maxFixedArity = 2;
G__13328.cljs$lang$applyTo = (function (arglist__13333){
var coll = cljs.core.first(arglist__13333);
arglist__13333 = cljs.core.next(arglist__13333);
var k = cljs.core.first(arglist__13333);
var ks = cljs.core.rest(arglist__13333);
return G__13328__delegate(coll,k,ks);
});
G__13328.cljs$core$IFn$_invoke$arity$variadic = G__13328__delegate;
return G__13328;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__13334 = null;
if (arguments.length > 2) {
var G__13335__i = 0, G__13335__a = new Array(arguments.length -  2);
while (G__13335__i < G__13335__a.length) {G__13335__a[G__13335__i] = arguments[G__13335__i + 2]; ++G__13335__i;}
G__13334 = new cljs.core.IndexedSeq(G__13335__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13337 = x;
if(G__13337){
var bit__4545__auto__ = (G__13337.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4545__auto__) || (G__13337.cljs$core$ICollection$)){
return true;
} else {
if((!G__13337.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13337);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13337);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13339 = x;
if(G__13339){
var bit__4545__auto__ = (G__13339.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4545__auto__) || (G__13339.cljs$core$ISet$)){
return true;
} else {
if((!G__13339.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13339);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13339);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__13341 = x;
if(G__13341){
var bit__4545__auto__ = (G__13341.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4545__auto__) || (G__13341.cljs$core$IAssociative$)){
return true;
} else {
if((!G__13341.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13341);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13341);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__13343 = x;
if(G__13343){
var bit__4545__auto__ = (G__13343.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4545__auto__) || (G__13343.cljs$core$ISequential$)){
return true;
} else {
if((!G__13343.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13343);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13343);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__13345 = x;
if(G__13345){
var bit__4545__auto__ = (G__13345.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4545__auto__) || (G__13345.cljs$core$ISorted$)){
return true;
} else {
if((!G__13345.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13345);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13345);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__13347 = x;
if(G__13347){
var bit__4545__auto__ = (G__13347.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4545__auto__) || (G__13347.cljs$core$IReduce$)){
return true;
} else {
if((!G__13347.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13347);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13347);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13349 = x;
if(G__13349){
var bit__4545__auto__ = (G__13349.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4545__auto__) || (G__13349.cljs$core$IMap$)){
return true;
} else {
if((!G__13349.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13349);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13349);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__13351 = x;
if(G__13351){
var bit__4545__auto__ = (G__13351.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4545__auto__) || (G__13351.cljs$core$IVector$)){
return true;
} else {
if((!G__13351.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13351);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13351);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__13353 = x;
if(G__13353){
var bit__4538__auto__ = (G__13353.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4538__auto__) || (G__13353.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj13359 = {};
return obj13359;
});
var js_obj__1 = (function() { 
var G__13362__delegate = function (keyvals){
var G__13360 = goog.object.create;
var G__13361 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13360,G__13361) : cljs.core.apply.call(null,G__13360,G__13361));
};
var G__13362 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13363__i = 0, G__13363__a = new Array(arguments.length -  0);
while (G__13363__i < G__13363__a.length) {G__13363__a[G__13363__i] = arguments[G__13363__i + 0]; ++G__13363__i;}
  keyvals = new cljs.core.IndexedSeq(G__13363__a,0);
} 
return G__13362__delegate.call(this,keyvals);};
G__13362.cljs$lang$maxFixedArity = 0;
G__13362.cljs$lang$applyTo = (function (arglist__13364){
var keyvals = cljs.core.seq(arglist__13364);
return G__13362__delegate(keyvals);
});
G__13362.cljs$core$IFn$_invoke$arity$variadic = G__13362__delegate;
return G__13362;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__13365 = null;
if (arguments.length > 0) {
var G__13366__i = 0, G__13366__a = new Array(arguments.length -  0);
while (G__13366__i < G__13366__a.length) {G__13366__a[G__13366__i] = arguments[G__13366__i + 0]; ++G__13366__i;}
G__13365 = new cljs.core.IndexedSeq(G__13366__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__13369_13371 = obj;
var G__13370_13372 = ((function (G__13369_13371,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__13369_13371,keys))
;
goog.object.forEach(G__13369_13371,G__13370_13372);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13373 = (i__$1 + (1));
var G__13374 = (j__$1 + (1));
var G__13375 = (len__$1 - (1));
i__$1 = G__13373;
j__$1 = G__13374;
len__$1 = G__13375;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13376 = (i__$1 - (1));
var G__13377 = (j__$1 - (1));
var G__13378 = (len__$1 - (1));
i__$1 = G__13376;
j__$1 = G__13377;
len__$1 = G__13378;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj13380 = {};
return obj13380;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__13382 = s;
if(G__13382){
var bit__4545__auto__ = (G__13382.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4545__auto__) || (G__13382.cljs$core$ISeq$)){
return true;
} else {
if((!G__13382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13382);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__13384 = s;
if(G__13384){
var bit__4545__auto__ = (G__13384.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4545__auto__) || (G__13384.cljs$core$ISeqable$)){
return true;
} else {
if((!G__13384.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13384);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13384);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3864__auto__ = cljs.core.fn_QMARK_(f);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var G__13388 = f;
if(G__13388){
var bit__4545__auto__ = (G__13388.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4545__auto__) || (G__13388.cljs$core$IFn$)){
return true;
} else {
if((!G__13388.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13388);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13388);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__13401 = n;
return isNaN(G__13401);
})())) && (!((n === Infinity))) && (((function (){var G__13402 = n;
return parseFloat(G__13402);
})() === (function (){var G__13403 = n;
var G__13404 = (10);
return parseInt(G__13403,G__13404);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__13405__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__13406 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__13407 = etc;
s = G__13406;
xs = G__13407;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__13405 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13408__i = 0, G__13408__a = new Array(arguments.length -  2);
while (G__13408__i < G__13408__a.length) {G__13408__a[G__13408__i] = arguments[G__13408__i + 2]; ++G__13408__i;}
  more = new cljs.core.IndexedSeq(G__13408__a,0);
} 
return G__13405__delegate.call(this,x,y,more);};
G__13405.cljs$lang$maxFixedArity = 2;
G__13405.cljs$lang$applyTo = (function (arglist__13409){
var x = cljs.core.first(arglist__13409);
arglist__13409 = cljs.core.next(arglist__13409);
var y = cljs.core.first(arglist__13409);
var more = cljs.core.rest(arglist__13409);
return G__13405__delegate(x,y,more);
});
G__13405.cljs$core$IFn$_invoke$arity$variadic = G__13405__delegate;
return G__13405;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__13410 = null;
if (arguments.length > 2) {
var G__13411__i = 0, G__13411__a = new Array(arguments.length -  2);
while (G__13411__i < G__13411__a.length) {G__13411__a[G__13411__i] = arguments[G__13411__i + 2]; ++G__13411__i;}
G__13410 = new cljs.core.IndexedSeq(G__13411__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__13415 = x;
if(G__13415){
var bit__4538__auto__ = (G__13415.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4538__auto__) || (G__13415.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__13416 = x;
var G__13417 = y;
return goog.array.defaultCompare(G__13416,G__13417);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__13422 = xs;
var G__13423 = ys;
var G__13424 = len;
var G__13425 = (n + (1));
xs = G__13422;
ys = G__13423;
len = G__13424;
n = G__13425;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__13430 = x;
var G__13431 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13430,G__13431) : f.call(null,G__13430,G__13431));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13432 = y;
var G__13433 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13432,G__13433) : f.call(null,G__13432,G__13433));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__13439 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13439) : cljs.core.to_array.call(null,G__13439));
})();
var G__13440_13442 = a;
var G__13441_13443 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__13440_13442,G__13441_13443);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__13449 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13449) : keyfn.call(null,G__13449));
})(),(function (){var G__13450 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13450) : keyfn.call(null,G__13450));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__13456 = f;
var G__13457 = cljs.core.first(s);
var G__13458 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13456,G__13457,G__13458) : cljs.core.reduce.call(null,G__13456,G__13457,G__13458));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__13459 = val__$1;
var G__13460 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13459,G__13460) : f.call(null,G__13459,G__13460));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13461 = nval;
var G__13462 = cljs.core.next(coll__$1);
val__$1 = G__13461;
coll__$1 = G__13462;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__13466 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13466) : cljs.core.to_array.call(null,G__13466));
})();
var G__13467_13469 = a;
goog.array.shuffle(G__13467_13469);

var G__13468 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__13468) : cljs.core.vec.call(null,G__13468));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__13472 = coll;
if(G__13472){
var bit__4538__auto__ = (G__13472.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4538__auto__) || (G__13472.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__13473 = coll;
if(G__13473){
var bit__4538__auto__ = (G__13473.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4538__auto__) || (G__13473.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__13482 = null;
var G__13482__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__13482__1 = (function (x){
var G__13479 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__13479) : cf.call(null,G__13479));
});
var G__13482__2 = (function (x,y){
var G__13480 = x;
var G__13481 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13480,G__13481) : f.call(null,G__13480,G__13481));
});
G__13482 = function(x,y){
switch(arguments.length){
case 0:
return G__13482__0.call(this);
case 1:
return G__13482__1.call(this,x);
case 2:
return G__13482__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13482.cljs$core$IFn$_invoke$arity$0 = G__13482__0;
G__13482.cljs$core$IFn$_invoke$arity$1 = G__13482__1;
G__13482.cljs$core$IFn$_invoke$arity$2 = G__13482__2;
return G__13482;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__13489 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13489) : xform.call(null,G__13489));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__13490 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__13490) : f__$1.call(null,G__13490));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__13491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__13491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13492__i = 0, G__13492__a = new Array(arguments.length -  2);
while (G__13492__i < G__13492__a.length) {G__13492__a[G__13492__i] = arguments[G__13492__i + 2]; ++G__13492__i;}
  more = new cljs.core.IndexedSeq(G__13492__a,0);
} 
return G__13491__delegate.call(this,x,y,more);};
G__13491.cljs$lang$maxFixedArity = 2;
G__13491.cljs$lang$applyTo = (function (arglist__13493){
var x = cljs.core.first(arglist__13493);
arglist__13493 = cljs.core.next(arglist__13493);
var y = cljs.core.first(arglist__13493);
var more = cljs.core.rest(arglist__13493);
return G__13491__delegate(x,y,more);
});
G__13491.cljs$core$IFn$_invoke$arity$variadic = G__13491__delegate;
return G__13491;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__13494 = null;
if (arguments.length > 2) {
var G__13495__i = 0, G__13495__a = new Array(arguments.length -  2);
while (G__13495__i < G__13495__a.length) {G__13495__a[G__13495__i] = arguments[G__13495__i + 2]; ++G__13495__i;}
G__13494 = new cljs.core.IndexedSeq(G__13495__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__13496__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__13496 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13497__i = 0, G__13497__a = new Array(arguments.length -  2);
while (G__13497__i < G__13497__a.length) {G__13497__a[G__13497__i] = arguments[G__13497__i + 2]; ++G__13497__i;}
  more = new cljs.core.IndexedSeq(G__13497__a,0);
} 
return G__13496__delegate.call(this,x,y,more);};
G__13496.cljs$lang$maxFixedArity = 2;
G__13496.cljs$lang$applyTo = (function (arglist__13498){
var x = cljs.core.first(arglist__13498);
arglist__13498 = cljs.core.next(arglist__13498);
var y = cljs.core.first(arglist__13498);
var more = cljs.core.rest(arglist__13498);
return G__13496__delegate(x,y,more);
});
G__13496.cljs$core$IFn$_invoke$arity$variadic = G__13496__delegate;
return G__13496;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__13499 = null;
if (arguments.length > 2) {
var G__13500__i = 0, G__13500__a = new Array(arguments.length -  2);
while (G__13500__i < G__13500__a.length) {G__13500__a[G__13500__i] = arguments[G__13500__i + 2]; ++G__13500__i;}
G__13499 = new cljs.core.IndexedSeq(G__13500__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__13501__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__13501 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13502__i = 0, G__13502__a = new Array(arguments.length -  2);
while (G__13502__i < G__13502__a.length) {G__13502__a[G__13502__i] = arguments[G__13502__i + 2]; ++G__13502__i;}
  more = new cljs.core.IndexedSeq(G__13502__a,0);
} 
return G__13501__delegate.call(this,x,y,more);};
G__13501.cljs$lang$maxFixedArity = 2;
G__13501.cljs$lang$applyTo = (function (arglist__13503){
var x = cljs.core.first(arglist__13503);
arglist__13503 = cljs.core.next(arglist__13503);
var y = cljs.core.first(arglist__13503);
var more = cljs.core.rest(arglist__13503);
return G__13501__delegate(x,y,more);
});
G__13501.cljs$core$IFn$_invoke$arity$variadic = G__13501__delegate;
return G__13501;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__13504 = null;
if (arguments.length > 2) {
var G__13505__i = 0, G__13505__a = new Array(arguments.length -  2);
while (G__13505__i < G__13505__a.length) {G__13505__a[G__13505__i] = arguments[G__13505__i + 2]; ++G__13505__i;}
G__13504 = new cljs.core.IndexedSeq(G__13505__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__13510__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13510 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13511__i = 0, G__13511__a = new Array(arguments.length -  2);
while (G__13511__i < G__13511__a.length) {G__13511__a[G__13511__i] = arguments[G__13511__i + 2]; ++G__13511__i;}
  more = new cljs.core.IndexedSeq(G__13511__a,0);
} 
return G__13510__delegate.call(this,x,y,more);};
G__13510.cljs$lang$maxFixedArity = 2;
G__13510.cljs$lang$applyTo = (function (arglist__13512){
var x = cljs.core.first(arglist__13512);
arglist__13512 = cljs.core.next(arglist__13512);
var y = cljs.core.first(arglist__13512);
var more = cljs.core.rest(arglist__13512);
return G__13510__delegate(x,y,more);
});
G__13510.cljs$core$IFn$_invoke$arity$variadic = G__13510__delegate;
return G__13510;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__13513 = null;
if (arguments.length > 2) {
var G__13514__i = 0, G__13514__a = new Array(arguments.length -  2);
while (G__13514__i < G__13514__a.length) {G__13514__a[G__13514__i] = arguments[G__13514__i + 2]; ++G__13514__i;}
G__13513 = new cljs.core.IndexedSeq(G__13514__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__13515__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__13516 = y;
var G__13517 = cljs.core.first(more);
var G__13518 = cljs.core.next(more);
x = G__13516;
y = G__13517;
more = G__13518;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13519__i = 0, G__13519__a = new Array(arguments.length -  2);
while (G__13519__i < G__13519__a.length) {G__13519__a[G__13519__i] = arguments[G__13519__i + 2]; ++G__13519__i;}
  more = new cljs.core.IndexedSeq(G__13519__a,0);
} 
return G__13515__delegate.call(this,x,y,more);};
G__13515.cljs$lang$maxFixedArity = 2;
G__13515.cljs$lang$applyTo = (function (arglist__13520){
var x = cljs.core.first(arglist__13520);
arglist__13520 = cljs.core.next(arglist__13520);
var y = cljs.core.first(arglist__13520);
var more = cljs.core.rest(arglist__13520);
return G__13515__delegate(x,y,more);
});
G__13515.cljs$core$IFn$_invoke$arity$variadic = G__13515__delegate;
return G__13515;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__13521 = null;
if (arguments.length > 2) {
var G__13522__i = 0, G__13522__a = new Array(arguments.length -  2);
while (G__13522__i < G__13522__a.length) {G__13522__a[G__13522__i] = arguments[G__13522__i + 2]; ++G__13522__i;}
G__13521 = new cljs.core.IndexedSeq(G__13522__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__13523__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__13524 = y;
var G__13525 = cljs.core.first(more);
var G__13526 = cljs.core.next(more);
x = G__13524;
y = G__13525;
more = G__13526;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13523 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13527__i = 0, G__13527__a = new Array(arguments.length -  2);
while (G__13527__i < G__13527__a.length) {G__13527__a[G__13527__i] = arguments[G__13527__i + 2]; ++G__13527__i;}
  more = new cljs.core.IndexedSeq(G__13527__a,0);
} 
return G__13523__delegate.call(this,x,y,more);};
G__13523.cljs$lang$maxFixedArity = 2;
G__13523.cljs$lang$applyTo = (function (arglist__13528){
var x = cljs.core.first(arglist__13528);
arglist__13528 = cljs.core.next(arglist__13528);
var y = cljs.core.first(arglist__13528);
var more = cljs.core.rest(arglist__13528);
return G__13523__delegate(x,y,more);
});
G__13523.cljs$core$IFn$_invoke$arity$variadic = G__13523__delegate;
return G__13523;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__13529 = null;
if (arguments.length > 2) {
var G__13530__i = 0, G__13530__a = new Array(arguments.length -  2);
while (G__13530__i < G__13530__a.length) {G__13530__a[G__13530__i] = arguments[G__13530__i + 2]; ++G__13530__i;}
G__13529 = new cljs.core.IndexedSeq(G__13530__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__13531__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__13532 = y;
var G__13533 = cljs.core.first(more);
var G__13534 = cljs.core.next(more);
x = G__13532;
y = G__13533;
more = G__13534;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13531 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13535__i = 0, G__13535__a = new Array(arguments.length -  2);
while (G__13535__i < G__13535__a.length) {G__13535__a[G__13535__i] = arguments[G__13535__i + 2]; ++G__13535__i;}
  more = new cljs.core.IndexedSeq(G__13535__a,0);
} 
return G__13531__delegate.call(this,x,y,more);};
G__13531.cljs$lang$maxFixedArity = 2;
G__13531.cljs$lang$applyTo = (function (arglist__13536){
var x = cljs.core.first(arglist__13536);
arglist__13536 = cljs.core.next(arglist__13536);
var y = cljs.core.first(arglist__13536);
var more = cljs.core.rest(arglist__13536);
return G__13531__delegate(x,y,more);
});
G__13531.cljs$core$IFn$_invoke$arity$variadic = G__13531__delegate;
return G__13531;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__13537 = null;
if (arguments.length > 2) {
var G__13538__i = 0, G__13538__a = new Array(arguments.length -  2);
while (G__13538__i < G__13538__a.length) {G__13538__a[G__13538__i] = arguments[G__13538__i + 2]; ++G__13538__i;}
G__13537 = new cljs.core.IndexedSeq(G__13538__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__13539__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__13540 = y;
var G__13541 = cljs.core.first(more);
var G__13542 = cljs.core.next(more);
x = G__13540;
y = G__13541;
more = G__13542;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13539 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13543__i = 0, G__13543__a = new Array(arguments.length -  2);
while (G__13543__i < G__13543__a.length) {G__13543__a[G__13543__i] = arguments[G__13543__i + 2]; ++G__13543__i;}
  more = new cljs.core.IndexedSeq(G__13543__a,0);
} 
return G__13539__delegate.call(this,x,y,more);};
G__13539.cljs$lang$maxFixedArity = 2;
G__13539.cljs$lang$applyTo = (function (arglist__13544){
var x = cljs.core.first(arglist__13544);
arglist__13544 = cljs.core.next(arglist__13544);
var y = cljs.core.first(arglist__13544);
var more = cljs.core.rest(arglist__13544);
return G__13539__delegate(x,y,more);
});
G__13539.cljs$core$IFn$_invoke$arity$variadic = G__13539__delegate;
return G__13539;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__13545 = null;
if (arguments.length > 2) {
var G__13546__i = 0, G__13546__a = new Array(arguments.length -  2);
while (G__13546__i < G__13546__a.length) {G__13546__a[G__13546__i] = arguments[G__13546__i + 2]; ++G__13546__i;}
G__13545 = new cljs.core.IndexedSeq(G__13546__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4181__auto__ = x;
var y__4182__auto__ = y;
return ((x__4181__auto__ > y__4182__auto__) ? x__4181__auto__ : y__4182__auto__);
});
var max__3 = (function() { 
var G__13547__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4181__auto__ = x;
var y__4182__auto__ = y;
return ((x__4181__auto__ > y__4182__auto__) ? x__4181__auto__ : y__4182__auto__);
})(),more);
};
var G__13547 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13548__i = 0, G__13548__a = new Array(arguments.length -  2);
while (G__13548__i < G__13548__a.length) {G__13548__a[G__13548__i] = arguments[G__13548__i + 2]; ++G__13548__i;}
  more = new cljs.core.IndexedSeq(G__13548__a,0);
} 
return G__13547__delegate.call(this,x,y,more);};
G__13547.cljs$lang$maxFixedArity = 2;
G__13547.cljs$lang$applyTo = (function (arglist__13549){
var x = cljs.core.first(arglist__13549);
arglist__13549 = cljs.core.next(arglist__13549);
var y = cljs.core.first(arglist__13549);
var more = cljs.core.rest(arglist__13549);
return G__13547__delegate(x,y,more);
});
G__13547.cljs$core$IFn$_invoke$arity$variadic = G__13547__delegate;
return G__13547;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__13550 = null;
if (arguments.length > 2) {
var G__13551__i = 0, G__13551__a = new Array(arguments.length -  2);
while (G__13551__i < G__13551__a.length) {G__13551__a[G__13551__i] = arguments[G__13551__i + 2]; ++G__13551__i;}
G__13550 = new cljs.core.IndexedSeq(G__13551__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4188__auto__ = x;
var y__4189__auto__ = y;
return ((x__4188__auto__ < y__4189__auto__) ? x__4188__auto__ : y__4189__auto__);
});
var min__3 = (function() { 
var G__13552__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4188__auto__ = x;
var y__4189__auto__ = y;
return ((x__4188__auto__ < y__4189__auto__) ? x__4188__auto__ : y__4189__auto__);
})(),more);
};
var G__13552 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13553__i = 0, G__13553__a = new Array(arguments.length -  2);
while (G__13553__i < G__13553__a.length) {G__13553__a[G__13553__i] = arguments[G__13553__i + 2]; ++G__13553__i;}
  more = new cljs.core.IndexedSeq(G__13553__a,0);
} 
return G__13552__delegate.call(this,x,y,more);};
G__13552.cljs$lang$maxFixedArity = 2;
G__13552.cljs$lang$applyTo = (function (arglist__13554){
var x = cljs.core.first(arglist__13554);
arglist__13554 = cljs.core.next(arglist__13554);
var y = cljs.core.first(arglist__13554);
var more = cljs.core.rest(arglist__13554);
return G__13552__delegate(x,y,more);
});
G__13552.cljs$core$IFn$_invoke$arity$variadic = G__13552__delegate;
return G__13552;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__13555 = null;
if (arguments.length > 2) {
var G__13556__i = 0, G__13556__a = new Array(arguments.length -  2);
while (G__13556__i < G__13556__a.length) {G__13556__a[G__13556__i] = arguments[G__13556__i + 2]; ++G__13556__i;}
G__13555 = new cljs.core.IndexedSeq(G__13556__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__13557__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__13557 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13558__i = 0, G__13558__a = new Array(arguments.length -  2);
while (G__13558__i < G__13558__a.length) {G__13558__a[G__13558__i] = arguments[G__13558__i + 2]; ++G__13558__i;}
  more = new cljs.core.IndexedSeq(G__13558__a,0);
} 
return G__13557__delegate.call(this,x,y,more);};
G__13557.cljs$lang$maxFixedArity = 2;
G__13557.cljs$lang$applyTo = (function (arglist__13559){
var x = cljs.core.first(arglist__13559);
arglist__13559 = cljs.core.next(arglist__13559);
var y = cljs.core.first(arglist__13559);
var more = cljs.core.rest(arglist__13559);
return G__13557__delegate(x,y,more);
});
G__13557.cljs$core$IFn$_invoke$arity$variadic = G__13557__delegate;
return G__13557;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__13560 = null;
if (arguments.length > 2) {
var G__13561__i = 0, G__13561__a = new Array(arguments.length -  2);
while (G__13561__i < G__13561__a.length) {G__13561__a[G__13561__i] = arguments[G__13561__i + 2]; ++G__13561__i;}
G__13560 = new cljs.core.IndexedSeq(G__13561__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__13562__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__13562 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13563__i = 0, G__13563__a = new Array(arguments.length -  2);
while (G__13563__i < G__13563__a.length) {G__13563__a[G__13563__i] = arguments[G__13563__i + 2]; ++G__13563__i;}
  more = new cljs.core.IndexedSeq(G__13563__a,0);
} 
return G__13562__delegate.call(this,x,y,more);};
G__13562.cljs$lang$maxFixedArity = 2;
G__13562.cljs$lang$applyTo = (function (arglist__13564){
var x = cljs.core.first(arglist__13564);
arglist__13564 = cljs.core.next(arglist__13564);
var y = cljs.core.first(arglist__13564);
var more = cljs.core.rest(arglist__13564);
return G__13562__delegate(x,y,more);
});
G__13562.cljs$core$IFn$_invoke$arity$variadic = G__13562__delegate;
return G__13562;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__13565 = null;
if (arguments.length > 2) {
var G__13566__i = 0, G__13566__a = new Array(arguments.length -  2);
while (G__13566__i < G__13566__a.length) {G__13566__a[G__13566__i] = arguments[G__13566__i + 2]; ++G__13566__i;}
G__13565 = new cljs.core.IndexedSeq(G__13566__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__13571__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13571 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13572__i = 0, G__13572__a = new Array(arguments.length -  2);
while (G__13572__i < G__13572__a.length) {G__13572__a[G__13572__i] = arguments[G__13572__i + 2]; ++G__13572__i;}
  more = new cljs.core.IndexedSeq(G__13572__a,0);
} 
return G__13571__delegate.call(this,x,y,more);};
G__13571.cljs$lang$maxFixedArity = 2;
G__13571.cljs$lang$applyTo = (function (arglist__13573){
var x = cljs.core.first(arglist__13573);
arglist__13573 = cljs.core.next(arglist__13573);
var y = cljs.core.first(arglist__13573);
var more = cljs.core.rest(arglist__13573);
return G__13571__delegate(x,y,more);
});
G__13571.cljs$core$IFn$_invoke$arity$variadic = G__13571__delegate;
return G__13571;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__13574 = null;
if (arguments.length > 2) {
var G__13575__i = 0, G__13575__a = new Array(arguments.length -  2);
while (G__13575__i < G__13575__a.length) {G__13575__a[G__13575__i] = arguments[G__13575__i + 2]; ++G__13575__i;}
G__13574 = new cljs.core.IndexedSeq(G__13575__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__13576__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__13576 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13577__i = 0, G__13577__a = new Array(arguments.length -  2);
while (G__13577__i < G__13577__a.length) {G__13577__a[G__13577__i] = arguments[G__13577__i + 2]; ++G__13577__i;}
  more = new cljs.core.IndexedSeq(G__13577__a,0);
} 
return G__13576__delegate.call(this,x,y,more);};
G__13576.cljs$lang$maxFixedArity = 2;
G__13576.cljs$lang$applyTo = (function (arglist__13578){
var x = cljs.core.first(arglist__13578);
arglist__13578 = cljs.core.next(arglist__13578);
var y = cljs.core.first(arglist__13578);
var more = cljs.core.rest(arglist__13578);
return G__13576__delegate(x,y,more);
});
G__13576.cljs$core$IFn$_invoke$arity$variadic = G__13576__delegate;
return G__13576;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__13579 = null;
if (arguments.length > 2) {
var G__13580__i = 0, G__13580__a = new Array(arguments.length -  2);
while (G__13580__i < G__13580__a.length) {G__13580__a[G__13580__i] = arguments[G__13580__i + 2]; ++G__13580__i;}
G__13579 = new cljs.core.IndexedSeq(G__13580__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__13581__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__13581 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13582__i = 0, G__13582__a = new Array(arguments.length -  2);
while (G__13582__i < G__13582__a.length) {G__13582__a[G__13582__i] = arguments[G__13582__i + 2]; ++G__13582__i;}
  more = new cljs.core.IndexedSeq(G__13582__a,0);
} 
return G__13581__delegate.call(this,x,y,more);};
G__13581.cljs$lang$maxFixedArity = 2;
G__13581.cljs$lang$applyTo = (function (arglist__13583){
var x = cljs.core.first(arglist__13583);
arglist__13583 = cljs.core.next(arglist__13583);
var y = cljs.core.first(arglist__13583);
var more = cljs.core.rest(arglist__13583);
return G__13581__delegate(x,y,more);
});
G__13581.cljs$core$IFn$_invoke$arity$variadic = G__13581__delegate;
return G__13581;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__13584 = null;
if (arguments.length > 2) {
var G__13585__i = 0, G__13585__a = new Array(arguments.length -  2);
while (G__13585__i < G__13585__a.length) {G__13585__a[G__13585__i] = arguments[G__13585__i + 2]; ++G__13585__i;}
G__13584 = new cljs.core.IndexedSeq(G__13585__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__13588 = x;
var G__13589 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13588,G__13589) : cljs.core.mod.call(null,G__13588,G__13589));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__13590__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__13590 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13591__i = 0, G__13591__a = new Array(arguments.length -  2);
while (G__13591__i < G__13591__a.length) {G__13591__a[G__13591__i] = arguments[G__13591__i + 2]; ++G__13591__i;}
  more = new cljs.core.IndexedSeq(G__13591__a,0);
} 
return G__13590__delegate.call(this,x,y,more);};
G__13590.cljs$lang$maxFixedArity = 2;
G__13590.cljs$lang$applyTo = (function (arglist__13592){
var x = cljs.core.first(arglist__13592);
arglist__13592 = cljs.core.next(arglist__13592);
var y = cljs.core.first(arglist__13592);
var more = cljs.core.rest(arglist__13592);
return G__13590__delegate(x,y,more);
});
G__13590.cljs$core$IFn$_invoke$arity$variadic = G__13590__delegate;
return G__13590;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__13593 = null;
if (arguments.length > 2) {
var G__13594__i = 0, G__13594__a = new Array(arguments.length -  2);
while (G__13594__i < G__13594__a.length) {G__13594__a[G__13594__i] = arguments[G__13594__i + 2]; ++G__13594__i;}
G__13593 = new cljs.core.IndexedSeq(G__13594__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13593);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__13595__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__13595 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13596__i = 0, G__13596__a = new Array(arguments.length -  2);
while (G__13596__i < G__13596__a.length) {G__13596__a[G__13596__i] = arguments[G__13596__i + 2]; ++G__13596__i;}
  more = new cljs.core.IndexedSeq(G__13596__a,0);
} 
return G__13595__delegate.call(this,x,y,more);};
G__13595.cljs$lang$maxFixedArity = 2;
G__13595.cljs$lang$applyTo = (function (arglist__13597){
var x = cljs.core.first(arglist__13597);
arglist__13597 = cljs.core.next(arglist__13597);
var y = cljs.core.first(arglist__13597);
var more = cljs.core.rest(arglist__13597);
return G__13595__delegate(x,y,more);
});
G__13595.cljs$core$IFn$_invoke$arity$variadic = G__13595__delegate;
return G__13595;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__13598 = null;
if (arguments.length > 2) {
var G__13599__i = 0, G__13599__a = new Array(arguments.length -  2);
while (G__13599__i < G__13599__a.length) {G__13599__a[G__13599__i] = arguments[G__13599__i + 2]; ++G__13599__i;}
G__13598 = new cljs.core.IndexedSeq(G__13599__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__13602 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13602) : Math.floor.call(null,G__13602));
} else {
var G__13603 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13603) : Math.ceil.call(null,G__13603));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__13604__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__13604 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13605__i = 0, G__13605__a = new Array(arguments.length -  2);
while (G__13605__i < G__13605__a.length) {G__13605__a[G__13605__i] = arguments[G__13605__i + 2]; ++G__13605__i;}
  more = new cljs.core.IndexedSeq(G__13605__a,0);
} 
return G__13604__delegate.call(this,x,y,more);};
G__13604.cljs$lang$maxFixedArity = 2;
G__13604.cljs$lang$applyTo = (function (arglist__13606){
var x = cljs.core.first(arglist__13606);
arglist__13606 = cljs.core.next(arglist__13606);
var y = cljs.core.first(arglist__13606);
var more = cljs.core.rest(arglist__13606);
return G__13604__delegate(x,y,more);
});
G__13604.cljs$core$IFn$_invoke$arity$variadic = G__13604__delegate;
return G__13604;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__13607 = null;
if (arguments.length > 2) {
var G__13608__i = 0, G__13608__a = new Array(arguments.length -  2);
while (G__13608__i < G__13608__a.length) {G__13608__a[G__13608__i] = arguments[G__13608__i + 2]; ++G__13608__i;}
G__13607 = new cljs.core.IndexedSeq(G__13608__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__13609__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__13609 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13610__i = 0, G__13610__a = new Array(arguments.length -  2);
while (G__13610__i < G__13610__a.length) {G__13610__a[G__13610__i] = arguments[G__13610__i + 2]; ++G__13610__i;}
  more = new cljs.core.IndexedSeq(G__13610__a,0);
} 
return G__13609__delegate.call(this,x,y,more);};
G__13609.cljs$lang$maxFixedArity = 2;
G__13609.cljs$lang$applyTo = (function (arglist__13611){
var x = cljs.core.first(arglist__13611);
arglist__13611 = cljs.core.next(arglist__13611);
var y = cljs.core.first(arglist__13611);
var more = cljs.core.rest(arglist__13611);
return G__13609__delegate(x,y,more);
});
G__13609.cljs$core$IFn$_invoke$arity$variadic = G__13609__delegate;
return G__13609;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__13612 = null;
if (arguments.length > 2) {
var G__13613__i = 0, G__13613__a = new Array(arguments.length -  2);
while (G__13613__i < G__13613__a.length) {G__13613__a[G__13613__i] = arguments[G__13613__i + 2]; ++G__13613__i;}
G__13612 = new cljs.core.IndexedSeq(G__13613__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__13614__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__13614 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13615__i = 0, G__13615__a = new Array(arguments.length -  2);
while (G__13615__i < G__13615__a.length) {G__13615__a[G__13615__i] = arguments[G__13615__i + 2]; ++G__13615__i;}
  more = new cljs.core.IndexedSeq(G__13615__a,0);
} 
return G__13614__delegate.call(this,x,y,more);};
G__13614.cljs$lang$maxFixedArity = 2;
G__13614.cljs$lang$applyTo = (function (arglist__13616){
var x = cljs.core.first(arglist__13616);
arglist__13616 = cljs.core.next(arglist__13616);
var y = cljs.core.first(arglist__13616);
var more = cljs.core.rest(arglist__13616);
return G__13614__delegate(x,y,more);
});
G__13614.cljs$core$IFn$_invoke$arity$variadic = G__13614__delegate;
return G__13614;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__13617 = null;
if (arguments.length > 2) {
var G__13618__i = 0, G__13618__a = new Array(arguments.length -  2);
while (G__13618__i < G__13618__a.length) {G__13618__a[G__13618__i] = arguments[G__13618__i + 2]; ++G__13618__i;}
G__13617 = new cljs.core.IndexedSeq(G__13618__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__13619__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__13619 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13620__i = 0, G__13620__a = new Array(arguments.length -  2);
while (G__13620__i < G__13620__a.length) {G__13620__a[G__13620__i] = arguments[G__13620__i + 2]; ++G__13620__i;}
  more = new cljs.core.IndexedSeq(G__13620__a,0);
} 
return G__13619__delegate.call(this,x,y,more);};
G__13619.cljs$lang$maxFixedArity = 2;
G__13619.cljs$lang$applyTo = (function (arglist__13621){
var x = cljs.core.first(arglist__13621);
arglist__13621 = cljs.core.next(arglist__13621);
var y = cljs.core.first(arglist__13621);
var more = cljs.core.rest(arglist__13621);
return G__13619__delegate(x,y,more);
});
G__13619.cljs$core$IFn$_invoke$arity$variadic = G__13619__delegate;
return G__13619;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__13622 = null;
if (arguments.length > 2) {
var G__13623__i = 0, G__13623__a = new Array(arguments.length -  2);
while (G__13623__i < G__13623__a.length) {G__13623__a[G__13623__i] = arguments[G__13623__i + 2]; ++G__13623__i;}
G__13622 = new cljs.core.IndexedSeq(G__13623__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__13628__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13629 = y;
var G__13630 = cljs.core.first(more);
var G__13631 = cljs.core.next(more);
x = G__13629;
y = G__13630;
more = G__13631;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13628 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13632__i = 0, G__13632__a = new Array(arguments.length -  2);
while (G__13632__i < G__13632__a.length) {G__13632__a[G__13632__i] = arguments[G__13632__i + 2]; ++G__13632__i;}
  more = new cljs.core.IndexedSeq(G__13632__a,0);
} 
return G__13628__delegate.call(this,x,y,more);};
G__13628.cljs$lang$maxFixedArity = 2;
G__13628.cljs$lang$applyTo = (function (arglist__13633){
var x = cljs.core.first(arglist__13633);
arglist__13633 = cljs.core.next(arglist__13633);
var y = cljs.core.first(arglist__13633);
var more = cljs.core.rest(arglist__13633);
return G__13628__delegate(x,y,more);
});
G__13628.cljs$core$IFn$_invoke$arity$variadic = G__13628__delegate;
return G__13628;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__13634 = null;
if (arguments.length > 2) {
var G__13635__i = 0, G__13635__a = new Array(arguments.length -  2);
while (G__13635__i < G__13635__a.length) {G__13635__a[G__13635__i] = arguments[G__13635__i + 2]; ++G__13635__i;}
G__13634 = new cljs.core.IndexedSeq(G__13635__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__13636 = (n__$1 - (1));
var G__13637 = cljs.core.next(xs);
n__$1 = G__13636;
xs = G__13637;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__13641 = x;
return goog.string.buildString(G__13641);
}
});
var str__2 = (function() { 
var G__13642__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__13643 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__13644 = cljs.core.next(more);
sb = G__13643;
more = G__13644;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__13642 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__13645__i = 0, G__13645__a = new Array(arguments.length -  1);
while (G__13645__i < G__13645__a.length) {G__13645__a[G__13645__i] = arguments[G__13645__i + 1]; ++G__13645__i;}
  ys = new cljs.core.IndexedSeq(G__13645__a,0);
} 
return G__13642__delegate.call(this,x,ys);};
G__13642.cljs$lang$maxFixedArity = 1;
G__13642.cljs$lang$applyTo = (function (arglist__13646){
var x = cljs.core.first(arglist__13646);
var ys = cljs.core.rest(arglist__13646);
return G__13642__delegate(x,ys);
});
G__13642.cljs$core$IFn$_invoke$arity$variadic = G__13642__delegate;
return G__13642;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__13647 = null;
if (arguments.length > 1) {
var G__13648__i = 0, G__13648__a = new Array(arguments.length -  1);
while (G__13648__i < G__13648__a.length) {G__13648__a[G__13648__i] = arguments[G__13648__i + 1]; ++G__13648__i;}
G__13647 = new cljs.core.IndexedSeq(G__13648__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__13649 = cljs.core.next(xs);
var G__13650 = cljs.core.next(ys);
xs = G__13649;
ys = G__13650;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__13651 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__13652 = cljs.core.next(s);
res = G__13651;
s = G__13652;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__13657 = ((h + (cljs.core.hash((function (){var G__13655 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13655) : cljs.core.key.call(null,G__13655));
})()) ^ cljs.core.hash((function (){var G__13656 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13656) : cljs.core.val.call(null,G__13656));
})()))) % (4503599627370496));
var G__13658 = cljs.core.next(s);
h = G__13657;
s = G__13658;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__13659 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__13660 = cljs.core.next(s__$1);
h = G__13659;
s__$1 = G__13660;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__13671_13681 = cljs.core.seq(fn_map);
var chunk__13672_13682 = null;
var count__13673_13683 = (0);
var i__13674_13684 = (0);
while(true){
if((i__13674_13684 < count__13673_13683)){
var vec__13675_13685 = chunk__13672_13682.cljs$core$IIndexed$_nth$arity$2(null,i__13674_13684);
var key_name_13686 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13675_13685,(0),null);
var f_13687 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13675_13685,(1),null);
var str_name_13688 = (function (){var G__13676 = key_name_13686;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13676) : cljs.core.name.call(null,G__13676));
})();
(obj[str_name_13688] = f_13687);

var G__13689 = seq__13671_13681;
var G__13690 = chunk__13672_13682;
var G__13691 = count__13673_13683;
var G__13692 = (i__13674_13684 + (1));
seq__13671_13681 = G__13689;
chunk__13672_13682 = G__13690;
count__13673_13683 = G__13691;
i__13674_13684 = G__13692;
continue;
} else {
var temp__4126__auto___13693 = cljs.core.seq(seq__13671_13681);
if(temp__4126__auto___13693){
var seq__13671_13694__$1 = temp__4126__auto___13693;
if(cljs.core.chunked_seq_QMARK_(seq__13671_13694__$1)){
var c__4651__auto___13695 = (function (){var G__13677 = seq__13671_13694__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13677) : cljs.core.chunk_first.call(null,G__13677));
})();
var G__13696 = (function (){var G__13678 = seq__13671_13694__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13678) : cljs.core.chunk_rest.call(null,G__13678));
})();
var G__13697 = c__4651__auto___13695;
var G__13698 = cljs.core.count(c__4651__auto___13695);
var G__13699 = (0);
seq__13671_13681 = G__13696;
chunk__13672_13682 = G__13697;
count__13673_13683 = G__13698;
i__13674_13684 = G__13699;
continue;
} else {
var vec__13679_13700 = cljs.core.first(seq__13671_13694__$1);
var key_name_13701 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13679_13700,(0),null);
var f_13702 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13679_13700,(1),null);
var str_name_13703 = (function (){var G__13680 = key_name_13701;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13680) : cljs.core.name.call(null,G__13680));
})();
(obj[str_name_13703] = f_13702);

var G__13704 = cljs.core.next(seq__13671_13694__$1);
var G__13705 = null;
var G__13706 = (0);
var G__13707 = (0);
seq__13671_13681 = G__13704;
chunk__13672_13682 = G__13705;
count__13673_13683 = G__13706;
i__13674_13684 = G__13707;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__13709 = coll;
if(G__13709){
var bit__4545__auto__ = (G__13709.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4545__auto__) || (G__13709.cljs$core$IReversible$)){
return true;
} else {
if((!G__13709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13709);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__13710 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__13710;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__13711 = (i - (1));
var G__13712 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__13711;
r = G__13712;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__13713__i = 0, G__13713__a = new Array(arguments.length -  0);
while (G__13713__i < G__13713__a.length) {G__13713__a[G__13713__i] = arguments[G__13713__i + 0]; ++G__13713__i;}
  xs = new cljs.core.IndexedSeq(G__13713__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__13714){
var xs = cljs.core.seq(arglist__13714);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3864__auto__ = (coll == null);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var G__13718 = coll;
if(G__13718){
var bit__4538__auto__ = (G__13718.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4538__auto__) || (G__13718.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__13720 = x;
if(G__13720){
var bit__4545__auto__ = (G__13720.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4545__auto__) || (G__13720.cljs$core$IList$)){
return true;
} else {
if((!G__13720.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13720);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13720);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3852__auto__ = cljs.core.not(a.ns);
if(and__3852__auto__){
return b.ns;
} else {
return and__3852__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13727 = a.ns;
var G__13728 = b.ns;
return goog.array.defaultCompare(G__13727,G__13728);
})();
if(((0) === nsc)){
var G__13729 = a.name;
var G__13730 = b.name;
return goog.array.defaultCompare(G__13729,G__13730);
} else {
return nsc;
}
}
} else {
var G__13731 = a.name;
var G__13732 = b.name;
return goog.array.defaultCompare(G__13731,G__13732);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4285__auto__ = self__._hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__13734 = null;
var G__13734__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__13734__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__13734 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13734__2.call(this,self__,coll);
case 3:
return G__13734__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13734.cljs$core$IFn$_invoke$arity$2 = G__13734__2;
G__13734.cljs$core$IFn$_invoke$arity$3 = G__13734__3;
return G__13734;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args13733){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13733)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__13736 = x;
if(G__13736){
var bit__4538__auto__ = (G__13736.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4538__auto__) || (G__13736.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__13738 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13738) : cljs.core.name.call(null,G__13738));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__13739 = ls.sval();
ls = G__13739;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__13741 = s;
if(G__13741){
var bit__4538__auto__ = (G__13741.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4538__auto__) || (G__13741.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__13742 = cljs.core.next(s__$1);
s__$1 = G__13742;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_13743 = (0);
var xs_13744 = cljs.core.seq(coll);
while(true){
if(xs_13744){
(ret[i_13743] = cljs.core.to_array(cljs.core.first(xs_13744)));

var G__13745 = (i_13743 + (1));
var G__13746 = cljs.core.next(xs_13744);
i_13743 = G__13745;
xs_13744 = G__13746;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13749 = (i + (1));
var G__13750 = cljs.core.next(s__$1);
i = G__13749;
s__$1 = G__13750;
continue;
} else {
return a;
}
break;
}
} else {
var n__4751__auto___13751 = size;
var i_13752 = (0);
while(true){
if((i_13752 < n__4751__auto___13751)){
(a[i_13752] = init_val_or_seq);

var G__13753 = (i_13752 + (1));
i_13752 = G__13753;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13756 = (i + (1));
var G__13757 = cljs.core.next(s__$1);
i = G__13756;
s__$1 = G__13757;
continue;
} else {
return a;
}
break;
}
} else {
var n__4751__auto___13758 = size;
var i_13759 = (0);
while(true){
if((i_13759 < n__4751__auto___13758)){
(a[i_13759] = init_val_or_seq);

var G__13760 = (i_13759 + (1));
i_13759 = G__13760;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13763 = (i + (1));
var G__13764 = cljs.core.next(s__$1);
i = G__13763;
s__$1 = G__13764;
continue;
} else {
return a;
}
break;
}
} else {
var n__4751__auto___13765 = size;
var i_13766 = (0);
while(true){
if((i_13766 < n__4751__auto___13765)){
(a[i_13766] = init_val_or_seq);

var G__13767 = (i_13766 + (1));
i_13766 = G__13767;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13770 = (i + (1));
var G__13771 = cljs.core.next(s__$1);
i = G__13770;
s__$1 = G__13771;
continue;
} else {
return a;
}
break;
}
} else {
var n__4751__auto___13772 = size;
var i_13773 = (0);
while(true){
if((i_13773 < n__4751__auto___13772)){
(a[i_13773] = init_val_or_seq);

var G__13774 = (i_13773 + (1));
i_13773 = G__13774;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__13775 = cljs.core.next(s__$1);
var G__13776 = (i - (1));
var G__13777 = (sum + (1));
s__$1 = G__13775;
i = G__13776;
sum = G__13777;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__13797__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__13797 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13798__i = 0, G__13798__a = new Array(arguments.length -  2);
while (G__13798__i < G__13798__a.length) {G__13798__a[G__13798__i] = arguments[G__13798__i + 2]; ++G__13798__i;}
  zs = new cljs.core.IndexedSeq(G__13798__a,0);
} 
return G__13797__delegate.call(this,x,y,zs);};
G__13797.cljs$lang$maxFixedArity = 2;
G__13797.cljs$lang$applyTo = (function (arglist__13799){
var x = cljs.core.first(arglist__13799);
arglist__13799 = cljs.core.next(arglist__13799);
var y = cljs.core.first(arglist__13799);
var zs = cljs.core.rest(arglist__13799);
return G__13797__delegate(x,y,zs);
});
G__13797.cljs$core$IFn$_invoke$arity$variadic = G__13797__delegate;
return G__13797;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__13800 = null;
if (arguments.length > 2) {
var G__13801__i = 0, G__13801__a = new Array(arguments.length -  2);
while (G__13801__i < G__13801__a.length) {G__13801__a[G__13801__i] = arguments[G__13801__i + 2]; ++G__13801__i;}
G__13800 = new cljs.core.IndexedSeq(G__13801__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__13802__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__13802 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__13803__i = 0, G__13803__a = new Array(arguments.length -  4);
while (G__13803__i < G__13803__a.length) {G__13803__a[G__13803__i] = arguments[G__13803__i + 4]; ++G__13803__i;}
  more = new cljs.core.IndexedSeq(G__13803__a,0);
} 
return G__13802__delegate.call(this,a,b,c,d,more);};
G__13802.cljs$lang$maxFixedArity = 4;
G__13802.cljs$lang$applyTo = (function (arglist__13804){
var a = cljs.core.first(arglist__13804);
arglist__13804 = cljs.core.next(arglist__13804);
var b = cljs.core.first(arglist__13804);
arglist__13804 = cljs.core.next(arglist__13804);
var c = cljs.core.first(arglist__13804);
arglist__13804 = cljs.core.next(arglist__13804);
var d = cljs.core.first(arglist__13804);
var more = cljs.core.rest(arglist__13804);
return G__13802__delegate(a,b,c,d,more);
});
G__13802.cljs$core$IFn$_invoke$arity$variadic = G__13802__delegate;
return G__13802;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__13805 = null;
if (arguments.length > 4) {
var G__13806__i = 0, G__13806__a = new Array(arguments.length -  4);
while (G__13806__i < G__13806__a.length) {G__13806__a[G__13806__i] = arguments[G__13806__i + 4]; ++G__13806__i;}
G__13805 = new cljs.core.IndexedSeq(G__13806__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__13805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__13807__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13808 = ntcoll;
var G__13809 = cljs.core.first(vals);
var G__13810 = cljs.core.next(vals);
tcoll = G__13808;
val = G__13809;
vals = G__13810;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13807 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13811__i = 0, G__13811__a = new Array(arguments.length -  2);
while (G__13811__i < G__13811__a.length) {G__13811__a[G__13811__i] = arguments[G__13811__i + 2]; ++G__13811__i;}
  vals = new cljs.core.IndexedSeq(G__13811__a,0);
} 
return G__13807__delegate.call(this,tcoll,val,vals);};
G__13807.cljs$lang$maxFixedArity = 2;
G__13807.cljs$lang$applyTo = (function (arglist__13812){
var tcoll = cljs.core.first(arglist__13812);
arglist__13812 = cljs.core.next(arglist__13812);
var val = cljs.core.first(arglist__13812);
var vals = cljs.core.rest(arglist__13812);
return G__13807__delegate(tcoll,val,vals);
});
G__13807.cljs$core$IFn$_invoke$arity$variadic = G__13807__delegate;
return G__13807;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__13813 = null;
if (arguments.length > 2) {
var G__13814__i = 0, G__13814__a = new Array(arguments.length -  2);
while (G__13814__i < G__13814__a.length) {G__13814__a[G__13814__i] = arguments[G__13814__i + 2]; ++G__13814__i;}
G__13813 = new cljs.core.IndexedSeq(G__13814__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__13815__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__13816 = ntcoll;
var G__13817 = cljs.core.first(kvs);
var G__13818 = cljs.core.second(kvs);
var G__13819 = cljs.core.nnext(kvs);
tcoll = G__13816;
key = G__13817;
val = G__13818;
kvs = G__13819;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13815 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13820__i = 0, G__13820__a = new Array(arguments.length -  3);
while (G__13820__i < G__13820__a.length) {G__13820__a[G__13820__i] = arguments[G__13820__i + 3]; ++G__13820__i;}
  kvs = new cljs.core.IndexedSeq(G__13820__a,0);
} 
return G__13815__delegate.call(this,tcoll,key,val,kvs);};
G__13815.cljs$lang$maxFixedArity = 3;
G__13815.cljs$lang$applyTo = (function (arglist__13821){
var tcoll = cljs.core.first(arglist__13821);
arglist__13821 = cljs.core.next(arglist__13821);
var key = cljs.core.first(arglist__13821);
arglist__13821 = cljs.core.next(arglist__13821);
var val = cljs.core.first(arglist__13821);
var kvs = cljs.core.rest(arglist__13821);
return G__13815__delegate(tcoll,key,val,kvs);
});
G__13815.cljs$core$IFn$_invoke$arity$variadic = G__13815__delegate;
return G__13815;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__13822 = null;
if (arguments.length > 3) {
var G__13823__i = 0, G__13823__a = new Array(arguments.length -  3);
while (G__13823__i < G__13823__a.length) {G__13823__a[G__13823__i] = arguments[G__13823__i + 3]; ++G__13823__i;}
G__13822 = new cljs.core.IndexedSeq(G__13823__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__13822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__13824__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__13825 = ntcoll;
var G__13826 = cljs.core.first(ks);
var G__13827 = cljs.core.next(ks);
tcoll = G__13825;
key = G__13826;
ks = G__13827;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13824 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13828__i = 0, G__13828__a = new Array(arguments.length -  2);
while (G__13828__i < G__13828__a.length) {G__13828__a[G__13828__i] = arguments[G__13828__i + 2]; ++G__13828__i;}
  ks = new cljs.core.IndexedSeq(G__13828__a,0);
} 
return G__13824__delegate.call(this,tcoll,key,ks);};
G__13824.cljs$lang$maxFixedArity = 2;
G__13824.cljs$lang$applyTo = (function (arglist__13829){
var tcoll = cljs.core.first(arglist__13829);
arglist__13829 = cljs.core.next(arglist__13829);
var key = cljs.core.first(arglist__13829);
var ks = cljs.core.rest(arglist__13829);
return G__13824__delegate(tcoll,key,ks);
});
G__13824.cljs$core$IFn$_invoke$arity$variadic = G__13824__delegate;
return G__13824;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__13830 = null;
if (arguments.length > 2) {
var G__13831__i = 0, G__13831__a = new Array(arguments.length -  2);
while (G__13831__i < G__13831__a.length) {G__13831__a[G__13831__i] = arguments[G__13831__i + 2]; ++G__13831__i;}
G__13830 = new cljs.core.IndexedSeq(G__13831__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__13830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__13832__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13833 = ntcoll;
var G__13834 = cljs.core.first(vals);
var G__13835 = cljs.core.next(vals);
tcoll = G__13833;
val = G__13834;
vals = G__13835;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13832 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13836__i = 0, G__13836__a = new Array(arguments.length -  2);
while (G__13836__i < G__13836__a.length) {G__13836__a[G__13836__i] = arguments[G__13836__i + 2]; ++G__13836__i;}
  vals = new cljs.core.IndexedSeq(G__13836__a,0);
} 
return G__13832__delegate.call(this,tcoll,val,vals);};
G__13832.cljs$lang$maxFixedArity = 2;
G__13832.cljs$lang$applyTo = (function (arglist__13837){
var tcoll = cljs.core.first(arglist__13837);
arglist__13837 = cljs.core.next(arglist__13837);
var val = cljs.core.first(arglist__13837);
var vals = cljs.core.rest(arglist__13837);
return G__13832__delegate(tcoll,val,vals);
});
G__13832.cljs$core$IFn$_invoke$arity$variadic = G__13832__delegate;
return G__13832;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__13838 = null;
if (arguments.length > 2) {
var G__13839__i = 0, G__13839__a = new Array(arguments.length -  2);
while (G__13839__i < G__13839__a.length) {G__13839__a[G__13839__i] = arguments[G__13839__i + 2]; ++G__13839__i;}
G__13838 = new cljs.core.IndexedSeq(G__13839__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4795 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4795);
} else {
var G__14050 = a4795;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14050) : f.call(null,G__14050));
}
} else {
var b4796 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4795,b4796);
} else {
var G__14051 = a4795;
var G__14052 = b4796;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14051,G__14052) : f.call(null,G__14051,G__14052));
}
} else {
var c4797 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4795,b4796,c4797);
} else {
var G__14053 = a4795;
var G__14054 = b4796;
var G__14055 = c4797;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14053,G__14054,G__14055) : f.call(null,G__14053,G__14054,G__14055));
}
} else {
var d4798 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4795,b4796,c4797,d4798);
} else {
var G__14056 = a4795;
var G__14057 = b4796;
var G__14058 = c4797;
var G__14059 = d4798;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14056,G__14057,G__14058,G__14059) : f.call(null,G__14056,G__14057,G__14058,G__14059));
}
} else {
var e4799 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4795,b4796,c4797,d4798,e4799);
} else {
var G__14060 = a4795;
var G__14061 = b4796;
var G__14062 = c4797;
var G__14063 = d4798;
var G__14064 = e4799;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14060,G__14061,G__14062,G__14063,G__14064) : f.call(null,G__14060,G__14061,G__14062,G__14063,G__14064));
}
} else {
var f4800 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4795,b4796,c4797,d4798,e4799,f4800);
} else {
var G__14065 = a4795;
var G__14066 = b4796;
var G__14067 = c4797;
var G__14068 = d4798;
var G__14069 = e4799;
var G__14070 = f4800;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14065,G__14066,G__14067,G__14068,G__14069,G__14070) : f.call(null,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070));
}
} else {
var g4801 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4795,b4796,c4797,d4798,e4799,f4800,g4801);
} else {
var G__14071 = a4795;
var G__14072 = b4796;
var G__14073 = c4797;
var G__14074 = d4798;
var G__14075 = e4799;
var G__14076 = f4800;
var G__14077 = g4801;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14071,G__14072,G__14073,G__14074,G__14075,G__14076,G__14077) : f.call(null,G__14071,G__14072,G__14073,G__14074,G__14075,G__14076,G__14077));
}
} else {
var h4802 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802);
} else {
var G__14078 = a4795;
var G__14079 = b4796;
var G__14080 = c4797;
var G__14081 = d4798;
var G__14082 = e4799;
var G__14083 = f4800;
var G__14084 = g4801;
var G__14085 = h4802;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085) : f.call(null,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085));
}
} else {
var i4803 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803);
} else {
var G__14086 = a4795;
var G__14087 = b4796;
var G__14088 = c4797;
var G__14089 = d4798;
var G__14090 = e4799;
var G__14091 = f4800;
var G__14092 = g4801;
var G__14093 = h4802;
var G__14094 = i4803;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094) : f.call(null,G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094));
}
} else {
var j4804 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804);
} else {
var G__14095 = a4795;
var G__14096 = b4796;
var G__14097 = c4797;
var G__14098 = d4798;
var G__14099 = e4799;
var G__14100 = f4800;
var G__14101 = g4801;
var G__14102 = h4802;
var G__14103 = i4803;
var G__14104 = j4804;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104) : f.call(null,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104));
}
} else {
var k4805 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805);
} else {
var G__14105 = a4795;
var G__14106 = b4796;
var G__14107 = c4797;
var G__14108 = d4798;
var G__14109 = e4799;
var G__14110 = f4800;
var G__14111 = g4801;
var G__14112 = h4802;
var G__14113 = i4803;
var G__14114 = j4804;
var G__14115 = k4805;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115) : f.call(null,G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115));
}
} else {
var l4806 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806);
} else {
var G__14116 = a4795;
var G__14117 = b4796;
var G__14118 = c4797;
var G__14119 = d4798;
var G__14120 = e4799;
var G__14121 = f4800;
var G__14122 = g4801;
var G__14123 = h4802;
var G__14124 = i4803;
var G__14125 = j4804;
var G__14126 = k4805;
var G__14127 = l4806;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__14116,G__14117,G__14118,G__14119,G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127) : f.call(null,G__14116,G__14117,G__14118,G__14119,G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127));
}
} else {
var m4807 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807);
} else {
var G__14128 = a4795;
var G__14129 = b4796;
var G__14130 = c4797;
var G__14131 = d4798;
var G__14132 = e4799;
var G__14133 = f4800;
var G__14134 = g4801;
var G__14135 = h4802;
var G__14136 = i4803;
var G__14137 = j4804;
var G__14138 = k4805;
var G__14139 = l4806;
var G__14140 = m4807;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140) : f.call(null,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140));
}
} else {
var n4808 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808);
} else {
var G__14141 = a4795;
var G__14142 = b4796;
var G__14143 = c4797;
var G__14144 = d4798;
var G__14145 = e4799;
var G__14146 = f4800;
var G__14147 = g4801;
var G__14148 = h4802;
var G__14149 = i4803;
var G__14150 = j4804;
var G__14151 = k4805;
var G__14152 = l4806;
var G__14153 = m4807;
var G__14154 = n4808;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154) : f.call(null,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154));
}
} else {
var o4809 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809);
} else {
var G__14155 = a4795;
var G__14156 = b4796;
var G__14157 = c4797;
var G__14158 = d4798;
var G__14159 = e4799;
var G__14160 = f4800;
var G__14161 = g4801;
var G__14162 = h4802;
var G__14163 = i4803;
var G__14164 = j4804;
var G__14165 = k4805;
var G__14166 = l4806;
var G__14167 = m4807;
var G__14168 = n4808;
var G__14169 = o4809;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169) : f.call(null,G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169));
}
} else {
var p4810 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809,p4810);
} else {
var G__14170 = a4795;
var G__14171 = b4796;
var G__14172 = c4797;
var G__14173 = d4798;
var G__14174 = e4799;
var G__14175 = f4800;
var G__14176 = g4801;
var G__14177 = h4802;
var G__14178 = i4803;
var G__14179 = j4804;
var G__14180 = k4805;
var G__14181 = l4806;
var G__14182 = m4807;
var G__14183 = n4808;
var G__14184 = o4809;
var G__14185 = p4810;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185) : f.call(null,G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185));
}
} else {
var q4811 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809,p4810,q4811);
} else {
var G__14186 = a4795;
var G__14187 = b4796;
var G__14188 = c4797;
var G__14189 = d4798;
var G__14190 = e4799;
var G__14191 = f4800;
var G__14192 = g4801;
var G__14193 = h4802;
var G__14194 = i4803;
var G__14195 = j4804;
var G__14196 = k4805;
var G__14197 = l4806;
var G__14198 = m4807;
var G__14199 = n4808;
var G__14200 = o4809;
var G__14201 = p4810;
var G__14202 = q4811;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202) : f.call(null,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202));
}
} else {
var r4812 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809,p4810,q4811,r4812);
} else {
var G__14203 = a4795;
var G__14204 = b4796;
var G__14205 = c4797;
var G__14206 = d4798;
var G__14207 = e4799;
var G__14208 = f4800;
var G__14209 = g4801;
var G__14210 = h4802;
var G__14211 = i4803;
var G__14212 = j4804;
var G__14213 = k4805;
var G__14214 = l4806;
var G__14215 = m4807;
var G__14216 = n4808;
var G__14217 = o4809;
var G__14218 = p4810;
var G__14219 = q4811;
var G__14220 = r4812;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216,G__14217,G__14218,G__14219,G__14220) : f.call(null,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216,G__14217,G__14218,G__14219,G__14220));
}
} else {
var s4813 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809,p4810,q4811,r4812,s4813);
} else {
var G__14221 = a4795;
var G__14222 = b4796;
var G__14223 = c4797;
var G__14224 = d4798;
var G__14225 = e4799;
var G__14226 = f4800;
var G__14227 = g4801;
var G__14228 = h4802;
var G__14229 = i4803;
var G__14230 = j4804;
var G__14231 = k4805;
var G__14232 = l4806;
var G__14233 = m4807;
var G__14234 = n4808;
var G__14235 = o4809;
var G__14236 = p4810;
var G__14237 = q4811;
var G__14238 = r4812;
var G__14239 = s4813;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__14221,G__14222,G__14223,G__14224,G__14225,G__14226,G__14227,G__14228,G__14229,G__14230,G__14231,G__14232,G__14233,G__14234,G__14235,G__14236,G__14237,G__14238,G__14239) : f.call(null,G__14221,G__14222,G__14223,G__14224,G__14225,G__14226,G__14227,G__14228,G__14229,G__14230,G__14231,G__14232,G__14233,G__14234,G__14235,G__14236,G__14237,G__14238,G__14239));
}
} else {
var t4814 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4795,b4796,c4797,d4798,e4799,f4800,g4801,h4802,i4803,j4804,k4805,l4806,m4807,n4808,o4809,p4810,q4811,r4812,s4813,t4814);
} else {
var G__14240 = a4795;
var G__14241 = b4796;
var G__14242 = c4797;
var G__14243 = d4798;
var G__14244 = e4799;
var G__14245 = f4800;
var G__14246 = g4801;
var G__14247 = h4802;
var G__14248 = i4803;
var G__14249 = j4804;
var G__14250 = k4805;
var G__14251 = l4806;
var G__14252 = m4807;
var G__14253 = n4808;
var G__14254 = o4809;
var G__14255 = p4810;
var G__14256 = q4811;
var G__14257 = r4812;
var G__14258 = s4813;
var G__14259 = t4814;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__14240,G__14241,G__14242,G__14243,G__14244,G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259) : f.call(null,G__14240,G__14241,G__14242,G__14243,G__14244,G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__14260__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__14260 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__14261__i = 0, G__14261__a = new Array(arguments.length -  5);
while (G__14261__i < G__14261__a.length) {G__14261__a[G__14261__i] = arguments[G__14261__i + 5]; ++G__14261__i;}
  args = new cljs.core.IndexedSeq(G__14261__a,0);
} 
return G__14260__delegate.call(this,f,a,b,c,d,args);};
G__14260.cljs$lang$maxFixedArity = 5;
G__14260.cljs$lang$applyTo = (function (arglist__14262){
var f = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var a = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var b = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var c = cljs.core.first(arglist__14262);
arglist__14262 = cljs.core.next(arglist__14262);
var d = cljs.core.first(arglist__14262);
var args = cljs.core.rest(arglist__14262);
return G__14260__delegate(f,a,b,c,d,args);
});
G__14260.cljs$core$IFn$_invoke$arity$variadic = G__14260__delegate;
return G__14260;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__14263 = null;
if (arguments.length > 5) {
var G__14264__i = 0, G__14264__a = new Array(arguments.length -  5);
while (G__14264__i < G__14264__a.length) {G__14264__a[G__14264__i] = arguments[G__14264__i + 5]; ++G__14264__i;}
G__14263 = new cljs.core.IndexedSeq(G__14264__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__14263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__14280 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14280) : f.call(null,G__14280));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__14281 = cljs.core.meta(obj);
var G__14282 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14281,G__14282) : f.call(null,G__14281,G__14282));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__14283 = cljs.core.meta(obj);
var G__14284 = a;
var G__14285 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14283,G__14284,G__14285) : f.call(null,G__14283,G__14284,G__14285));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__14286 = cljs.core.meta(obj);
var G__14287 = a;
var G__14288 = b;
var G__14289 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14286,G__14287,G__14288,G__14289) : f.call(null,G__14286,G__14287,G__14288,G__14289));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__14290 = cljs.core.meta(obj);
var G__14291 = a;
var G__14292 = b;
var G__14293 = c;
var G__14294 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14290,G__14291,G__14292,G__14293,G__14294) : f.call(null,G__14290,G__14291,G__14292,G__14293,G__14294));
})());
});
var vary_meta__7 = (function() { 
var G__14295__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__14295 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__14296__i = 0, G__14296__a = new Array(arguments.length -  6);
while (G__14296__i < G__14296__a.length) {G__14296__a[G__14296__i] = arguments[G__14296__i + 6]; ++G__14296__i;}
  args = new cljs.core.IndexedSeq(G__14296__a,0);
} 
return G__14295__delegate.call(this,obj,f,a,b,c,d,args);};
G__14295.cljs$lang$maxFixedArity = 6;
G__14295.cljs$lang$applyTo = (function (arglist__14297){
var obj = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var f = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var a = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var b = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var c = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var d = cljs.core.first(arglist__14297);
var args = cljs.core.rest(arglist__14297);
return G__14295__delegate(obj,f,a,b,c,d,args);
});
G__14295.cljs$core$IFn$_invoke$arity$variadic = G__14295__delegate;
return G__14295;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__14298 = null;
if (arguments.length > 6) {
var G__14299__i = 0, G__14299__a = new Array(arguments.length -  6);
while (G__14299__i < G__14299__a.length) {G__14299__a[G__14299__i] = arguments[G__14299__i + 6]; ++G__14299__i;}
G__14298 = new cljs.core.IndexedSeq(G__14299__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__14298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__14300__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__14300 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14301__i = 0, G__14301__a = new Array(arguments.length -  2);
while (G__14301__i < G__14301__a.length) {G__14301__a[G__14301__i] = arguments[G__14301__i + 2]; ++G__14301__i;}
  more = new cljs.core.IndexedSeq(G__14301__a,0);
} 
return G__14300__delegate.call(this,x,y,more);};
G__14300.cljs$lang$maxFixedArity = 2;
G__14300.cljs$lang$applyTo = (function (arglist__14302){
var x = cljs.core.first(arglist__14302);
arglist__14302 = cljs.core.next(arglist__14302);
var y = cljs.core.first(arglist__14302);
var more = cljs.core.rest(arglist__14302);
return G__14300__delegate(x,y,more);
});
G__14300.cljs$core$IFn$_invoke$arity$variadic = G__14300__delegate;
return G__14300;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__14303 = null;
if (arguments.length > 2) {
var G__14304__i = 0, G__14304__a = new Array(arguments.length -  2);
while (G__14304__i < G__14304__a.length) {G__14304__a[G__14304__i] = arguments[G__14304__i + 2]; ++G__14304__i;}
G__14303 = new cljs.core.IndexedSeq(G__14304__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14303);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t14308 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t14308 = (function (nil_iter,meta14309){
this.nil_iter = nil_iter;
this.meta14309 = meta14309;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t14308.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t14308.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t14308.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t14308.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_14310){
var self__ = this;
var _14310__$1 = this;
return self__.meta14309;
});

cljs.core.t14308.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_14310,meta14309__$1){
var self__ = this;
var _14310__$1 = this;
return (new cljs.core.t14308(self__.nil_iter,meta14309__$1));
});

cljs.core.t14308.cljs$lang$type = true;

cljs.core.t14308.cljs$lang$ctorStr = "cljs.core/t14308";

cljs.core.t14308.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/t14308");
});

cljs.core.__GT_t14308 = (function __GT_t14308(nil_iter__$1,meta14309){
return (new cljs.core.t14308(nil_iter__$1,meta14309));
});

}

return (new cljs.core.t14308(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3852__auto__ = !((lt.stepper == null));
if(and__3852__auto__){
return self__.iter.hasNext();
} else {
return and__3852__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__14311 = lt;
var G__14312 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14311,G__14312) : self__.xform.call(null,G__14311,G__14312));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14313 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14313) : self__.xform.call(null,G__14313));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__14315 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14315) : xform.call(null,G__14315));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__14317 = cljs.core.next(iters__$1);
iters__$1 = G__14317;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4751__auto___14318 = self__.iters.length;
var i_14319 = (0);
while(true){
if((i_14319 < n__4751__auto___14318)){
(self__.nexts[i_14319] = (self__.iters[i_14319]).next());

var G__14320 = (i_14319 + (1));
i_14319 = G__14320;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3852__auto__ = !((lt.stepper == null));
if(and__3852__auto__){
return this$.hasNext();
} else {
return and__3852__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14316 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14316) : self__.xform.call(null,G__14316));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__14325 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14325) : xform.call(null,G__14325));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__14326_14330 = cljs.core.seq(colls);
var chunk__14327_14331 = null;
var count__14328_14332 = (0);
var i__14329_14333 = (0);
while(true){
if((i__14329_14333 < count__14328_14332)){
var coll_14334 = chunk__14327_14331.cljs$core$IIndexed$_nth$arity$2(null,i__14329_14333);
iters.push(cljs.core.iter(coll_14334));

var G__14335 = seq__14326_14330;
var G__14336 = chunk__14327_14331;
var G__14337 = count__14328_14332;
var G__14338 = (i__14329_14333 + (1));
seq__14326_14330 = G__14335;
chunk__14327_14331 = G__14336;
count__14328_14332 = G__14337;
i__14329_14333 = G__14338;
continue;
} else {
var temp__4126__auto___14339 = cljs.core.seq(seq__14326_14330);
if(temp__4126__auto___14339){
var seq__14326_14340__$1 = temp__4126__auto___14339;
if(cljs.core.chunked_seq_QMARK_(seq__14326_14340__$1)){
var c__4651__auto___14341 = cljs.core.chunk_first(seq__14326_14340__$1);
var G__14342 = cljs.core.chunk_rest(seq__14326_14340__$1);
var G__14343 = c__4651__auto___14341;
var G__14344 = cljs.core.count(c__4651__auto___14341);
var G__14345 = (0);
seq__14326_14330 = G__14342;
chunk__14327_14331 = G__14343;
count__14328_14332 = G__14344;
i__14329_14333 = G__14345;
continue;
} else {
var coll_14346 = cljs.core.first(seq__14326_14340__$1);
iters.push(cljs.core.iter(coll_14346));

var G__14347 = cljs.core.next(seq__14326_14340__$1);
var G__14348 = null;
var G__14349 = (0);
var G__14350 = (0);
seq__14326_14330 = G__14347;
chunk__14327_14331 = G__14348;
count__14328_14332 = G__14349;
i__14329_14333 = G__14350;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3864__auto__ = cljs.core.seq(coll);
if(or__3864__auto__){
return or__3864__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__14351__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__14351 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14352__i = 0, G__14352__a = new Array(arguments.length -  2);
while (G__14352__i < G__14352__a.length) {G__14352__a[G__14352__i] = arguments[G__14352__i + 2]; ++G__14352__i;}
  colls = new cljs.core.IndexedSeq(G__14352__a,0);
} 
return G__14351__delegate.call(this,xform,coll,colls);};
G__14351.cljs$lang$maxFixedArity = 2;
G__14351.cljs$lang$applyTo = (function (arglist__14353){
var xform = cljs.core.first(arglist__14353);
arglist__14353 = cljs.core.next(arglist__14353);
var coll = cljs.core.first(arglist__14353);
var colls = cljs.core.rest(arglist__14353);
return G__14351__delegate(xform,coll,colls);
});
G__14351.cljs$core$IFn$_invoke$arity$variadic = G__14351__delegate;
return G__14351;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__14354 = null;
if (arguments.length > 2) {
var G__14355__i = 0, G__14355__a = new Array(arguments.length -  2);
while (G__14355__i < G__14355__a.length) {G__14355__a[G__14355__i] = arguments[G__14355__i + 2]; ++G__14355__i;}
G__14354 = new cljs.core.IndexedSeq(G__14355__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__14354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__14357 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14357) : pred.call(null,G__14357));
})())){
var G__14358 = pred;
var G__14359 = cljs.core.next(coll);
pred = G__14358;
coll = G__14359;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3864__auto__ = (function (){var G__14363 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14363) : pred.call(null,G__14363));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var G__14364 = pred;
var G__14365 = cljs.core.next(coll);
pred = G__14364;
coll = G__14365;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__14372 = null;
var G__14372__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__14372__1 = (function (x){
return cljs.core.not((function (){var G__14369 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14369) : f.call(null,G__14369));
})());
});
var G__14372__2 = (function (x,y){
return cljs.core.not((function (){var G__14370 = x;
var G__14371 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14370,G__14371) : f.call(null,G__14370,G__14371));
})());
});
var G__14372__3 = (function() { 
var G__14373__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__14373 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14374__i = 0, G__14374__a = new Array(arguments.length -  2);
while (G__14374__i < G__14374__a.length) {G__14374__a[G__14374__i] = arguments[G__14374__i + 2]; ++G__14374__i;}
  zs = new cljs.core.IndexedSeq(G__14374__a,0);
} 
return G__14373__delegate.call(this,x,y,zs);};
G__14373.cljs$lang$maxFixedArity = 2;
G__14373.cljs$lang$applyTo = (function (arglist__14375){
var x = cljs.core.first(arglist__14375);
arglist__14375 = cljs.core.next(arglist__14375);
var y = cljs.core.first(arglist__14375);
var zs = cljs.core.rest(arglist__14375);
return G__14373__delegate(x,y,zs);
});
G__14373.cljs$core$IFn$_invoke$arity$variadic = G__14373__delegate;
return G__14373;
})()
;
G__14372 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__14372__0.call(this);
case 1:
return G__14372__1.call(this,x);
case 2:
return G__14372__2.call(this,x,y);
default:
var G__14376 = null;
if (arguments.length > 2) {
var G__14377__i = 0, G__14377__a = new Array(arguments.length -  2);
while (G__14377__i < G__14377__a.length) {G__14377__a[G__14377__i] = arguments[G__14377__i + 2]; ++G__14377__i;}
G__14376 = new cljs.core.IndexedSeq(G__14377__a,0);
}
return G__14372__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14372.cljs$lang$maxFixedArity = 2;
G__14372.cljs$lang$applyTo = G__14372__3.cljs$lang$applyTo;
G__14372.cljs$core$IFn$_invoke$arity$0 = G__14372__0;
G__14372.cljs$core$IFn$_invoke$arity$1 = G__14372__1;
G__14372.cljs$core$IFn$_invoke$arity$2 = G__14372__2;
G__14372.cljs$core$IFn$_invoke$arity$variadic = G__14372__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14372;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__14378__delegate = function (args){
return x;
};
var G__14378 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14379__i = 0, G__14379__a = new Array(arguments.length -  0);
while (G__14379__i < G__14379__a.length) {G__14379__a[G__14379__i] = arguments[G__14379__i + 0]; ++G__14379__i;}
  args = new cljs.core.IndexedSeq(G__14379__a,0);
} 
return G__14378__delegate.call(this,args);};
G__14378.cljs$lang$maxFixedArity = 0;
G__14378.cljs$lang$applyTo = (function (arglist__14380){
var args = cljs.core.seq(arglist__14380);
return G__14378__delegate(args);
});
G__14378.cljs$core$IFn$_invoke$arity$variadic = G__14378__delegate;
return G__14378;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__14435 = null;
var G__14435__0 = (function (){
var G__14408 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14408) : f.call(null,G__14408));
});
var G__14435__1 = (function (x){
var G__14409 = (function (){var G__14410 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14410) : g.call(null,G__14410));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14409) : f.call(null,G__14409));
});
var G__14435__2 = (function (x,y){
var G__14411 = (function (){var G__14412 = x;
var G__14413 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14412,G__14413) : g.call(null,G__14412,G__14413));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14411) : f.call(null,G__14411));
});
var G__14435__3 = (function (x,y,z){
var G__14414 = (function (){var G__14415 = x;
var G__14416 = y;
var G__14417 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14415,G__14416,G__14417) : g.call(null,G__14415,G__14416,G__14417));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14414) : f.call(null,G__14414));
});
var G__14435__4 = (function() { 
var G__14436__delegate = function (x,y,z,args){
var G__14418 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14418) : f.call(null,G__14418));
};
var G__14436 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14437__i = 0, G__14437__a = new Array(arguments.length -  3);
while (G__14437__i < G__14437__a.length) {G__14437__a[G__14437__i] = arguments[G__14437__i + 3]; ++G__14437__i;}
  args = new cljs.core.IndexedSeq(G__14437__a,0);
} 
return G__14436__delegate.call(this,x,y,z,args);};
G__14436.cljs$lang$maxFixedArity = 3;
G__14436.cljs$lang$applyTo = (function (arglist__14438){
var x = cljs.core.first(arglist__14438);
arglist__14438 = cljs.core.next(arglist__14438);
var y = cljs.core.first(arglist__14438);
arglist__14438 = cljs.core.next(arglist__14438);
var z = cljs.core.first(arglist__14438);
var args = cljs.core.rest(arglist__14438);
return G__14436__delegate(x,y,z,args);
});
G__14436.cljs$core$IFn$_invoke$arity$variadic = G__14436__delegate;
return G__14436;
})()
;
G__14435 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14435__0.call(this);
case 1:
return G__14435__1.call(this,x);
case 2:
return G__14435__2.call(this,x,y);
case 3:
return G__14435__3.call(this,x,y,z);
default:
var G__14439 = null;
if (arguments.length > 3) {
var G__14440__i = 0, G__14440__a = new Array(arguments.length -  3);
while (G__14440__i < G__14440__a.length) {G__14440__a[G__14440__i] = arguments[G__14440__i + 3]; ++G__14440__i;}
G__14439 = new cljs.core.IndexedSeq(G__14440__a,0);
}
return G__14435__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14435.cljs$lang$maxFixedArity = 3;
G__14435.cljs$lang$applyTo = G__14435__4.cljs$lang$applyTo;
G__14435.cljs$core$IFn$_invoke$arity$0 = G__14435__0;
G__14435.cljs$core$IFn$_invoke$arity$1 = G__14435__1;
G__14435.cljs$core$IFn$_invoke$arity$2 = G__14435__2;
G__14435.cljs$core$IFn$_invoke$arity$3 = G__14435__3;
G__14435.cljs$core$IFn$_invoke$arity$variadic = G__14435__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14435;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__14441 = null;
var G__14441__0 = (function (){
var G__14419 = (function (){var G__14420 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14420) : g.call(null,G__14420));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14419) : f.call(null,G__14419));
});
var G__14441__1 = (function (x){
var G__14421 = (function (){var G__14422 = (function (){var G__14423 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14423) : h.call(null,G__14423));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14422) : g.call(null,G__14422));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14421) : f.call(null,G__14421));
});
var G__14441__2 = (function (x,y){
var G__14424 = (function (){var G__14425 = (function (){var G__14426 = x;
var G__14427 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14426,G__14427) : h.call(null,G__14426,G__14427));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14425) : g.call(null,G__14425));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14424) : f.call(null,G__14424));
});
var G__14441__3 = (function (x,y,z){
var G__14428 = (function (){var G__14429 = (function (){var G__14430 = x;
var G__14431 = y;
var G__14432 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14430,G__14431,G__14432) : h.call(null,G__14430,G__14431,G__14432));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14429) : g.call(null,G__14429));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14428) : f.call(null,G__14428));
});
var G__14441__4 = (function() { 
var G__14442__delegate = function (x,y,z,args){
var G__14433 = (function (){var G__14434 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14434) : g.call(null,G__14434));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14433) : f.call(null,G__14433));
};
var G__14442 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14443__i = 0, G__14443__a = new Array(arguments.length -  3);
while (G__14443__i < G__14443__a.length) {G__14443__a[G__14443__i] = arguments[G__14443__i + 3]; ++G__14443__i;}
  args = new cljs.core.IndexedSeq(G__14443__a,0);
} 
return G__14442__delegate.call(this,x,y,z,args);};
G__14442.cljs$lang$maxFixedArity = 3;
G__14442.cljs$lang$applyTo = (function (arglist__14444){
var x = cljs.core.first(arglist__14444);
arglist__14444 = cljs.core.next(arglist__14444);
var y = cljs.core.first(arglist__14444);
arglist__14444 = cljs.core.next(arglist__14444);
var z = cljs.core.first(arglist__14444);
var args = cljs.core.rest(arglist__14444);
return G__14442__delegate(x,y,z,args);
});
G__14442.cljs$core$IFn$_invoke$arity$variadic = G__14442__delegate;
return G__14442;
})()
;
G__14441 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14441__0.call(this);
case 1:
return G__14441__1.call(this,x);
case 2:
return G__14441__2.call(this,x,y);
case 3:
return G__14441__3.call(this,x,y,z);
default:
var G__14445 = null;
if (arguments.length > 3) {
var G__14446__i = 0, G__14446__a = new Array(arguments.length -  3);
while (G__14446__i < G__14446__a.length) {G__14446__a[G__14446__i] = arguments[G__14446__i + 3]; ++G__14446__i;}
G__14445 = new cljs.core.IndexedSeq(G__14446__a,0);
}
return G__14441__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14441.cljs$lang$maxFixedArity = 3;
G__14441.cljs$lang$applyTo = G__14441__4.cljs$lang$applyTo;
G__14441.cljs$core$IFn$_invoke$arity$0 = G__14441__0;
G__14441.cljs$core$IFn$_invoke$arity$1 = G__14441__1;
G__14441.cljs$core$IFn$_invoke$arity$2 = G__14441__2;
G__14441.cljs$core$IFn$_invoke$arity$3 = G__14441__3;
G__14441.cljs$core$IFn$_invoke$arity$variadic = G__14441__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14441;
})()
});
var comp__4 = (function() { 
var G__14447__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__14448__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__14449 = cljs.core.first(fs__$2).call(null,ret);
var G__14450 = cljs.core.next(fs__$2);
ret = G__14449;
fs__$2 = G__14450;
continue;
} else {
return ret;
}
break;
}
};
var G__14448 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14451__i = 0, G__14451__a = new Array(arguments.length -  0);
while (G__14451__i < G__14451__a.length) {G__14451__a[G__14451__i] = arguments[G__14451__i + 0]; ++G__14451__i;}
  args = new cljs.core.IndexedSeq(G__14451__a,0);
} 
return G__14448__delegate.call(this,args);};
G__14448.cljs$lang$maxFixedArity = 0;
G__14448.cljs$lang$applyTo = (function (arglist__14452){
var args = cljs.core.seq(arglist__14452);
return G__14448__delegate(args);
});
G__14448.cljs$core$IFn$_invoke$arity$variadic = G__14448__delegate;
return G__14448;
})()
;
;})(fs__$1))
};
var G__14447 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14453__i = 0, G__14453__a = new Array(arguments.length -  3);
while (G__14453__i < G__14453__a.length) {G__14453__a[G__14453__i] = arguments[G__14453__i + 3]; ++G__14453__i;}
  fs = new cljs.core.IndexedSeq(G__14453__a,0);
} 
return G__14447__delegate.call(this,f1,f2,f3,fs);};
G__14447.cljs$lang$maxFixedArity = 3;
G__14447.cljs$lang$applyTo = (function (arglist__14454){
var f1 = cljs.core.first(arglist__14454);
arglist__14454 = cljs.core.next(arglist__14454);
var f2 = cljs.core.first(arglist__14454);
arglist__14454 = cljs.core.next(arglist__14454);
var f3 = cljs.core.first(arglist__14454);
var fs = cljs.core.rest(arglist__14454);
return G__14447__delegate(f1,f2,f3,fs);
});
G__14447.cljs$core$IFn$_invoke$arity$variadic = G__14447__delegate;
return G__14447;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__14455 = null;
if (arguments.length > 3) {
var G__14456__i = 0, G__14456__a = new Array(arguments.length -  3);
while (G__14456__i < G__14456__a.length) {G__14456__a[G__14456__i] = arguments[G__14456__i + 3]; ++G__14456__i;}
G__14455 = new cljs.core.IndexedSeq(G__14456__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__14455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__14541 = null;
var G__14541__0 = (function (){
var G__14499 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14499) : f.call(null,G__14499));
});
var G__14541__1 = (function (x){
var G__14500 = arg1;
var G__14501 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14500,G__14501) : f.call(null,G__14500,G__14501));
});
var G__14541__2 = (function (x,y){
var G__14502 = arg1;
var G__14503 = x;
var G__14504 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14502,G__14503,G__14504) : f.call(null,G__14502,G__14503,G__14504));
});
var G__14541__3 = (function (x,y,z){
var G__14505 = arg1;
var G__14506 = x;
var G__14507 = y;
var G__14508 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14505,G__14506,G__14507,G__14508) : f.call(null,G__14505,G__14506,G__14507,G__14508));
});
var G__14541__4 = (function() { 
var G__14542__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__14542 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14543__i = 0, G__14543__a = new Array(arguments.length -  3);
while (G__14543__i < G__14543__a.length) {G__14543__a[G__14543__i] = arguments[G__14543__i + 3]; ++G__14543__i;}
  args = new cljs.core.IndexedSeq(G__14543__a,0);
} 
return G__14542__delegate.call(this,x,y,z,args);};
G__14542.cljs$lang$maxFixedArity = 3;
G__14542.cljs$lang$applyTo = (function (arglist__14544){
var x = cljs.core.first(arglist__14544);
arglist__14544 = cljs.core.next(arglist__14544);
var y = cljs.core.first(arglist__14544);
arglist__14544 = cljs.core.next(arglist__14544);
var z = cljs.core.first(arglist__14544);
var args = cljs.core.rest(arglist__14544);
return G__14542__delegate(x,y,z,args);
});
G__14542.cljs$core$IFn$_invoke$arity$variadic = G__14542__delegate;
return G__14542;
})()
;
G__14541 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14541__0.call(this);
case 1:
return G__14541__1.call(this,x);
case 2:
return G__14541__2.call(this,x,y);
case 3:
return G__14541__3.call(this,x,y,z);
default:
var G__14545 = null;
if (arguments.length > 3) {
var G__14546__i = 0, G__14546__a = new Array(arguments.length -  3);
while (G__14546__i < G__14546__a.length) {G__14546__a[G__14546__i] = arguments[G__14546__i + 3]; ++G__14546__i;}
G__14545 = new cljs.core.IndexedSeq(G__14546__a,0);
}
return G__14541__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14541.cljs$lang$maxFixedArity = 3;
G__14541.cljs$lang$applyTo = G__14541__4.cljs$lang$applyTo;
G__14541.cljs$core$IFn$_invoke$arity$0 = G__14541__0;
G__14541.cljs$core$IFn$_invoke$arity$1 = G__14541__1;
G__14541.cljs$core$IFn$_invoke$arity$2 = G__14541__2;
G__14541.cljs$core$IFn$_invoke$arity$3 = G__14541__3;
G__14541.cljs$core$IFn$_invoke$arity$variadic = G__14541__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14541;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__14547 = null;
var G__14547__0 = (function (){
var G__14509 = arg1;
var G__14510 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14509,G__14510) : f.call(null,G__14509,G__14510));
});
var G__14547__1 = (function (x){
var G__14511 = arg1;
var G__14512 = arg2;
var G__14513 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14511,G__14512,G__14513) : f.call(null,G__14511,G__14512,G__14513));
});
var G__14547__2 = (function (x,y){
var G__14514 = arg1;
var G__14515 = arg2;
var G__14516 = x;
var G__14517 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14514,G__14515,G__14516,G__14517) : f.call(null,G__14514,G__14515,G__14516,G__14517));
});
var G__14547__3 = (function (x,y,z){
var G__14518 = arg1;
var G__14519 = arg2;
var G__14520 = x;
var G__14521 = y;
var G__14522 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14518,G__14519,G__14520,G__14521,G__14522) : f.call(null,G__14518,G__14519,G__14520,G__14521,G__14522));
});
var G__14547__4 = (function() { 
var G__14548__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__14548 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14549__i = 0, G__14549__a = new Array(arguments.length -  3);
while (G__14549__i < G__14549__a.length) {G__14549__a[G__14549__i] = arguments[G__14549__i + 3]; ++G__14549__i;}
  args = new cljs.core.IndexedSeq(G__14549__a,0);
} 
return G__14548__delegate.call(this,x,y,z,args);};
G__14548.cljs$lang$maxFixedArity = 3;
G__14548.cljs$lang$applyTo = (function (arglist__14550){
var x = cljs.core.first(arglist__14550);
arglist__14550 = cljs.core.next(arglist__14550);
var y = cljs.core.first(arglist__14550);
arglist__14550 = cljs.core.next(arglist__14550);
var z = cljs.core.first(arglist__14550);
var args = cljs.core.rest(arglist__14550);
return G__14548__delegate(x,y,z,args);
});
G__14548.cljs$core$IFn$_invoke$arity$variadic = G__14548__delegate;
return G__14548;
})()
;
G__14547 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14547__0.call(this);
case 1:
return G__14547__1.call(this,x);
case 2:
return G__14547__2.call(this,x,y);
case 3:
return G__14547__3.call(this,x,y,z);
default:
var G__14551 = null;
if (arguments.length > 3) {
var G__14552__i = 0, G__14552__a = new Array(arguments.length -  3);
while (G__14552__i < G__14552__a.length) {G__14552__a[G__14552__i] = arguments[G__14552__i + 3]; ++G__14552__i;}
G__14551 = new cljs.core.IndexedSeq(G__14552__a,0);
}
return G__14547__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14547.cljs$lang$maxFixedArity = 3;
G__14547.cljs$lang$applyTo = G__14547__4.cljs$lang$applyTo;
G__14547.cljs$core$IFn$_invoke$arity$0 = G__14547__0;
G__14547.cljs$core$IFn$_invoke$arity$1 = G__14547__1;
G__14547.cljs$core$IFn$_invoke$arity$2 = G__14547__2;
G__14547.cljs$core$IFn$_invoke$arity$3 = G__14547__3;
G__14547.cljs$core$IFn$_invoke$arity$variadic = G__14547__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14547;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__14553 = null;
var G__14553__0 = (function (){
var G__14523 = arg1;
var G__14524 = arg2;
var G__14525 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14523,G__14524,G__14525) : f.call(null,G__14523,G__14524,G__14525));
});
var G__14553__1 = (function (x){
var G__14526 = arg1;
var G__14527 = arg2;
var G__14528 = arg3;
var G__14529 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14526,G__14527,G__14528,G__14529) : f.call(null,G__14526,G__14527,G__14528,G__14529));
});
var G__14553__2 = (function (x,y){
var G__14530 = arg1;
var G__14531 = arg2;
var G__14532 = arg3;
var G__14533 = x;
var G__14534 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14530,G__14531,G__14532,G__14533,G__14534) : f.call(null,G__14530,G__14531,G__14532,G__14533,G__14534));
});
var G__14553__3 = (function (x,y,z){
var G__14535 = arg1;
var G__14536 = arg2;
var G__14537 = arg3;
var G__14538 = x;
var G__14539 = y;
var G__14540 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14535,G__14536,G__14537,G__14538,G__14539,G__14540) : f.call(null,G__14535,G__14536,G__14537,G__14538,G__14539,G__14540));
});
var G__14553__4 = (function() { 
var G__14554__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__14554 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14555__i = 0, G__14555__a = new Array(arguments.length -  3);
while (G__14555__i < G__14555__a.length) {G__14555__a[G__14555__i] = arguments[G__14555__i + 3]; ++G__14555__i;}
  args = new cljs.core.IndexedSeq(G__14555__a,0);
} 
return G__14554__delegate.call(this,x,y,z,args);};
G__14554.cljs$lang$maxFixedArity = 3;
G__14554.cljs$lang$applyTo = (function (arglist__14556){
var x = cljs.core.first(arglist__14556);
arglist__14556 = cljs.core.next(arglist__14556);
var y = cljs.core.first(arglist__14556);
arglist__14556 = cljs.core.next(arglist__14556);
var z = cljs.core.first(arglist__14556);
var args = cljs.core.rest(arglist__14556);
return G__14554__delegate(x,y,z,args);
});
G__14554.cljs$core$IFn$_invoke$arity$variadic = G__14554__delegate;
return G__14554;
})()
;
G__14553 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14553__0.call(this);
case 1:
return G__14553__1.call(this,x);
case 2:
return G__14553__2.call(this,x,y);
case 3:
return G__14553__3.call(this,x,y,z);
default:
var G__14557 = null;
if (arguments.length > 3) {
var G__14558__i = 0, G__14558__a = new Array(arguments.length -  3);
while (G__14558__i < G__14558__a.length) {G__14558__a[G__14558__i] = arguments[G__14558__i + 3]; ++G__14558__i;}
G__14557 = new cljs.core.IndexedSeq(G__14558__a,0);
}
return G__14553__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14553.cljs$lang$maxFixedArity = 3;
G__14553.cljs$lang$applyTo = G__14553__4.cljs$lang$applyTo;
G__14553.cljs$core$IFn$_invoke$arity$0 = G__14553__0;
G__14553.cljs$core$IFn$_invoke$arity$1 = G__14553__1;
G__14553.cljs$core$IFn$_invoke$arity$2 = G__14553__2;
G__14553.cljs$core$IFn$_invoke$arity$3 = G__14553__3;
G__14553.cljs$core$IFn$_invoke$arity$variadic = G__14553__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14553;
})()
});
var partial__5 = (function() { 
var G__14559__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__14560__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__14560 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14561__i = 0, G__14561__a = new Array(arguments.length -  0);
while (G__14561__i < G__14561__a.length) {G__14561__a[G__14561__i] = arguments[G__14561__i + 0]; ++G__14561__i;}
  args = new cljs.core.IndexedSeq(G__14561__a,0);
} 
return G__14560__delegate.call(this,args);};
G__14560.cljs$lang$maxFixedArity = 0;
G__14560.cljs$lang$applyTo = (function (arglist__14562){
var args = cljs.core.seq(arglist__14562);
return G__14560__delegate(args);
});
G__14560.cljs$core$IFn$_invoke$arity$variadic = G__14560__delegate;
return G__14560;
})()
;
};
var G__14559 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__14563__i = 0, G__14563__a = new Array(arguments.length -  4);
while (G__14563__i < G__14563__a.length) {G__14563__a[G__14563__i] = arguments[G__14563__i + 4]; ++G__14563__i;}
  more = new cljs.core.IndexedSeq(G__14563__a,0);
} 
return G__14559__delegate.call(this,f,arg1,arg2,arg3,more);};
G__14559.cljs$lang$maxFixedArity = 4;
G__14559.cljs$lang$applyTo = (function (arglist__14564){
var f = cljs.core.first(arglist__14564);
arglist__14564 = cljs.core.next(arglist__14564);
var arg1 = cljs.core.first(arglist__14564);
arglist__14564 = cljs.core.next(arglist__14564);
var arg2 = cljs.core.first(arglist__14564);
arglist__14564 = cljs.core.next(arglist__14564);
var arg3 = cljs.core.first(arglist__14564);
var more = cljs.core.rest(arglist__14564);
return G__14559__delegate(f,arg1,arg2,arg3,more);
});
G__14559.cljs$core$IFn$_invoke$arity$variadic = G__14559__delegate;
return G__14559;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__14565 = null;
if (arguments.length > 4) {
var G__14566__i = 0, G__14566__a = new Array(arguments.length -  4);
while (G__14566__i < G__14566__a.length) {G__14566__a[G__14566__i] = arguments[G__14566__i + 4]; ++G__14566__i;}
G__14565 = new cljs.core.IndexedSeq(G__14566__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__14565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__14599 = null;
var G__14599__1 = (function (a){
var G__14583 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14583) : f.call(null,G__14583));
});
var G__14599__2 = (function (a,b){
var G__14584 = (((a == null))?x:a);
var G__14585 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14584,G__14585) : f.call(null,G__14584,G__14585));
});
var G__14599__3 = (function (a,b,c){
var G__14586 = (((a == null))?x:a);
var G__14587 = b;
var G__14588 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14586,G__14587,G__14588) : f.call(null,G__14586,G__14587,G__14588));
});
var G__14599__4 = (function() { 
var G__14600__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__14600 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14601__i = 0, G__14601__a = new Array(arguments.length -  3);
while (G__14601__i < G__14601__a.length) {G__14601__a[G__14601__i] = arguments[G__14601__i + 3]; ++G__14601__i;}
  ds = new cljs.core.IndexedSeq(G__14601__a,0);
} 
return G__14600__delegate.call(this,a,b,c,ds);};
G__14600.cljs$lang$maxFixedArity = 3;
G__14600.cljs$lang$applyTo = (function (arglist__14602){
var a = cljs.core.first(arglist__14602);
arglist__14602 = cljs.core.next(arglist__14602);
var b = cljs.core.first(arglist__14602);
arglist__14602 = cljs.core.next(arglist__14602);
var c = cljs.core.first(arglist__14602);
var ds = cljs.core.rest(arglist__14602);
return G__14600__delegate(a,b,c,ds);
});
G__14600.cljs$core$IFn$_invoke$arity$variadic = G__14600__delegate;
return G__14600;
})()
;
G__14599 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__14599__1.call(this,a);
case 2:
return G__14599__2.call(this,a,b);
case 3:
return G__14599__3.call(this,a,b,c);
default:
var G__14603 = null;
if (arguments.length > 3) {
var G__14604__i = 0, G__14604__a = new Array(arguments.length -  3);
while (G__14604__i < G__14604__a.length) {G__14604__a[G__14604__i] = arguments[G__14604__i + 3]; ++G__14604__i;}
G__14603 = new cljs.core.IndexedSeq(G__14604__a,0);
}
return G__14599__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14603);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14599.cljs$lang$maxFixedArity = 3;
G__14599.cljs$lang$applyTo = G__14599__4.cljs$lang$applyTo;
G__14599.cljs$core$IFn$_invoke$arity$1 = G__14599__1;
G__14599.cljs$core$IFn$_invoke$arity$2 = G__14599__2;
G__14599.cljs$core$IFn$_invoke$arity$3 = G__14599__3;
G__14599.cljs$core$IFn$_invoke$arity$variadic = G__14599__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14599;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__14605 = null;
var G__14605__2 = (function (a,b){
var G__14589 = (((a == null))?x:a);
var G__14590 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14589,G__14590) : f.call(null,G__14589,G__14590));
});
var G__14605__3 = (function (a,b,c){
var G__14591 = (((a == null))?x:a);
var G__14592 = (((b == null))?y:b);
var G__14593 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14591,G__14592,G__14593) : f.call(null,G__14591,G__14592,G__14593));
});
var G__14605__4 = (function() { 
var G__14606__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__14606 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14607__i = 0, G__14607__a = new Array(arguments.length -  3);
while (G__14607__i < G__14607__a.length) {G__14607__a[G__14607__i] = arguments[G__14607__i + 3]; ++G__14607__i;}
  ds = new cljs.core.IndexedSeq(G__14607__a,0);
} 
return G__14606__delegate.call(this,a,b,c,ds);};
G__14606.cljs$lang$maxFixedArity = 3;
G__14606.cljs$lang$applyTo = (function (arglist__14608){
var a = cljs.core.first(arglist__14608);
arglist__14608 = cljs.core.next(arglist__14608);
var b = cljs.core.first(arglist__14608);
arglist__14608 = cljs.core.next(arglist__14608);
var c = cljs.core.first(arglist__14608);
var ds = cljs.core.rest(arglist__14608);
return G__14606__delegate(a,b,c,ds);
});
G__14606.cljs$core$IFn$_invoke$arity$variadic = G__14606__delegate;
return G__14606;
})()
;
G__14605 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14605__2.call(this,a,b);
case 3:
return G__14605__3.call(this,a,b,c);
default:
var G__14609 = null;
if (arguments.length > 3) {
var G__14610__i = 0, G__14610__a = new Array(arguments.length -  3);
while (G__14610__i < G__14610__a.length) {G__14610__a[G__14610__i] = arguments[G__14610__i + 3]; ++G__14610__i;}
G__14609 = new cljs.core.IndexedSeq(G__14610__a,0);
}
return G__14605__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14605.cljs$lang$maxFixedArity = 3;
G__14605.cljs$lang$applyTo = G__14605__4.cljs$lang$applyTo;
G__14605.cljs$core$IFn$_invoke$arity$2 = G__14605__2;
G__14605.cljs$core$IFn$_invoke$arity$3 = G__14605__3;
G__14605.cljs$core$IFn$_invoke$arity$variadic = G__14605__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14605;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__14611 = null;
var G__14611__2 = (function (a,b){
var G__14594 = (((a == null))?x:a);
var G__14595 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14594,G__14595) : f.call(null,G__14594,G__14595));
});
var G__14611__3 = (function (a,b,c){
var G__14596 = (((a == null))?x:a);
var G__14597 = (((b == null))?y:b);
var G__14598 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14596,G__14597,G__14598) : f.call(null,G__14596,G__14597,G__14598));
});
var G__14611__4 = (function() { 
var G__14612__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__14612 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14613__i = 0, G__14613__a = new Array(arguments.length -  3);
while (G__14613__i < G__14613__a.length) {G__14613__a[G__14613__i] = arguments[G__14613__i + 3]; ++G__14613__i;}
  ds = new cljs.core.IndexedSeq(G__14613__a,0);
} 
return G__14612__delegate.call(this,a,b,c,ds);};
G__14612.cljs$lang$maxFixedArity = 3;
G__14612.cljs$lang$applyTo = (function (arglist__14614){
var a = cljs.core.first(arglist__14614);
arglist__14614 = cljs.core.next(arglist__14614);
var b = cljs.core.first(arglist__14614);
arglist__14614 = cljs.core.next(arglist__14614);
var c = cljs.core.first(arglist__14614);
var ds = cljs.core.rest(arglist__14614);
return G__14612__delegate(a,b,c,ds);
});
G__14612.cljs$core$IFn$_invoke$arity$variadic = G__14612__delegate;
return G__14612;
})()
;
G__14611 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14611__2.call(this,a,b);
case 3:
return G__14611__3.call(this,a,b,c);
default:
var G__14615 = null;
if (arguments.length > 3) {
var G__14616__i = 0, G__14616__a = new Array(arguments.length -  3);
while (G__14616__i < G__14616__a.length) {G__14616__a[G__14616__i] = arguments[G__14616__i + 3]; ++G__14616__i;}
G__14615 = new cljs.core.IndexedSeq(G__14616__a,0);
}
return G__14611__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14611.cljs$lang$maxFixedArity = 3;
G__14611.cljs$lang$applyTo = G__14611__4.cljs$lang$applyTo;
G__14611.cljs$core$IFn$_invoke$arity$2 = G__14611__2;
G__14611.cljs$core$IFn$_invoke$arity$3 = G__14611__3;
G__14611.cljs$core$IFn$_invoke$arity$variadic = G__14611__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14611;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__14647 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14647) : cljs.core.volatile_BANG_.call(null,G__14647));
})();
return ((function (i){
return (function() {
var G__14677 = null;
var G__14677__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14677__1 = (function (result){
var G__14648 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14648) : rf.call(null,G__14648));
});
var G__14677__2 = (function (result,input){
var G__14649 = result;
var G__14650 = (function (){var G__14651 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__14652 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14651,G__14652) : f.call(null,G__14651,G__14652));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14649,G__14650) : rf.call(null,G__14649,G__14650));
});
G__14677 = function(result,input){
switch(arguments.length){
case 0:
return G__14677__0.call(this);
case 1:
return G__14677__1.call(this,result);
case 2:
return G__14677__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14677.cljs$core$IFn$_invoke$arity$0 = G__14677__0;
G__14677.cljs$core$IFn$_invoke$arity$1 = G__14677__1;
G__14677.cljs$core$IFn$_invoke$arity$2 = G__14677__2;
return G__14677;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4751__auto___14678 = size;
var i_14679 = (0);
while(true){
if((i_14679 < n__4751__auto___14678)){
cljs.core.chunk_append(b,(function (){var G__14673 = (idx + i_14679);
var G__14674 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14679);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14673,G__14674) : f.call(null,G__14673,G__14674));
})());

var G__14680 = (i_14679 + (1));
i_14679 = G__14680;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14675 = idx;
var G__14676 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14675,G__14676) : f.call(null,G__14675,G__14676));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__14699 = null;
var G__14699__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14699__1 = (function (result){
var G__14693 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14693) : rf.call(null,G__14693));
});
var G__14699__2 = (function (result,input){
var v = (function (){var G__14694 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14694) : f.call(null,G__14694));
})();
if((v == null)){
return result;
} else {
var G__14695 = result;
var G__14696 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14695,G__14696) : rf.call(null,G__14695,G__14696));
}
});
G__14699 = function(result,input){
switch(arguments.length){
case 0:
return G__14699__0.call(this);
case 1:
return G__14699__1.call(this,result);
case 2:
return G__14699__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14699.cljs$core$IFn$_invoke$arity$0 = G__14699__0;
G__14699.cljs$core$IFn$_invoke$arity$1 = G__14699__1;
G__14699.cljs$core$IFn$_invoke$arity$2 = G__14699__2;
return G__14699;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4751__auto___14700 = size;
var i_14701 = (0);
while(true){
if((i_14701 < n__4751__auto___14700)){
var x_14702 = (function (){var G__14697 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14701);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14697) : f.call(null,G__14697));
})();
if((x_14702 == null)){
} else {
cljs.core.chunk_append(b,x_14702);
}

var G__14703 = (i_14701 + (1));
i_14701 = G__14703;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14698 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14698) : f.call(null,G__14698));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14704 = this$__$1;
return goog.getUid(G__14704);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__14705 = cljs.core.seq(self__.watches);
var chunk__14706 = null;
var count__14707 = (0);
var i__14708 = (0);
while(true){
if((i__14708 < count__14707)){
var vec__14709 = chunk__14706.cljs$core$IIndexed$_nth$arity$2(null,i__14708);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14709,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14709,(1),null);
var G__14710_14719 = key;
var G__14711_14720 = this$__$1;
var G__14712_14721 = oldval;
var G__14713_14722 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14710_14719,G__14711_14720,G__14712_14721,G__14713_14722) : f.call(null,G__14710_14719,G__14711_14720,G__14712_14721,G__14713_14722));

var G__14723 = seq__14705;
var G__14724 = chunk__14706;
var G__14725 = count__14707;
var G__14726 = (i__14708 + (1));
seq__14705 = G__14723;
chunk__14706 = G__14724;
count__14707 = G__14725;
i__14708 = G__14726;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14705);
if(temp__4126__auto__){
var seq__14705__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14705__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__14705__$1);
var G__14727 = cljs.core.chunk_rest(seq__14705__$1);
var G__14728 = c__4651__auto__;
var G__14729 = cljs.core.count(c__4651__auto__);
var G__14730 = (0);
seq__14705 = G__14727;
chunk__14706 = G__14728;
count__14707 = G__14729;
i__14708 = G__14730;
continue;
} else {
var vec__14714 = cljs.core.first(seq__14705__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14714,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14714,(1),null);
var G__14715_14731 = key;
var G__14716_14732 = this$__$1;
var G__14717_14733 = oldval;
var G__14718_14734 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14715_14731,G__14716_14732,G__14717_14733,G__14718_14734) : f.call(null,G__14715_14731,G__14716_14732,G__14717_14733,G__14718_14734));

var G__14735 = cljs.core.next(seq__14705__$1);
var G__14736 = null;
var G__14737 = (0);
var G__14738 = (0);
seq__14705 = G__14735;
chunk__14706 = G__14736;
count__14707 = G__14737;
i__14708 = G__14738;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__14742__delegate = function (x,p__14739){
var map__14741 = p__14739;
var map__14741__$1 = ((cljs.core.seq_QMARK_(map__14741))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14741):map__14741);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14741__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14741__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__14742 = function (x,var_args){
var p__14739 = null;
if (arguments.length > 1) {
var G__14743__i = 0, G__14743__a = new Array(arguments.length -  1);
while (G__14743__i < G__14743__a.length) {G__14743__a[G__14743__i] = arguments[G__14743__i + 1]; ++G__14743__i;}
  p__14739 = new cljs.core.IndexedSeq(G__14743__a,0);
} 
return G__14742__delegate.call(this,x,p__14739);};
G__14742.cljs$lang$maxFixedArity = 1;
G__14742.cljs$lang$applyTo = (function (arglist__14744){
var x = cljs.core.first(arglist__14744);
var p__14739 = cljs.core.rest(arglist__14744);
return G__14742__delegate(x,p__14739);
});
G__14742.cljs$core$IFn$_invoke$arity$variadic = G__14742__delegate;
return G__14742;
})()
;
atom = function(x,var_args){
var p__14739 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__14745 = null;
if (arguments.length > 1) {
var G__14746__i = 0, G__14746__a = new Array(arguments.length -  1);
while (G__14746__i < G__14746__a.length) {G__14746__a[G__14746__i] = arguments[G__14746__i + 1]; ++G__14746__i;}
G__14745 = new cljs.core.IndexedSeq(G__14746__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__14749 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__14749) : validate.call(null,G__14749));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__14750 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__14750) : cljs.core.pr_str.call(null,G__14750));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14757 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14757) : f.call(null,G__14757));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14758 = a.state;
var G__14759 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14758,G__14759) : f.call(null,G__14758,G__14759));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14760 = a.state;
var G__14761 = x;
var G__14762 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14760,G__14761,G__14762) : f.call(null,G__14760,G__14761,G__14762));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__14763__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__14763 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__14764__i = 0, G__14764__a = new Array(arguments.length -  4);
while (G__14764__i < G__14764__a.length) {G__14764__a[G__14764__i] = arguments[G__14764__i + 4]; ++G__14764__i;}
  more = new cljs.core.IndexedSeq(G__14764__a,0);
} 
return G__14763__delegate.call(this,a,f,x,y,more);};
G__14763.cljs$lang$maxFixedArity = 4;
G__14763.cljs$lang$applyTo = (function (arglist__14765){
var a = cljs.core.first(arglist__14765);
arglist__14765 = cljs.core.next(arglist__14765);
var f = cljs.core.first(arglist__14765);
arglist__14765 = cljs.core.next(arglist__14765);
var x = cljs.core.first(arglist__14765);
arglist__14765 = cljs.core.next(arglist__14765);
var y = cljs.core.first(arglist__14765);
var more = cljs.core.rest(arglist__14765);
return G__14763__delegate(a,f,x,y,more);
});
G__14763.cljs$core$IFn$_invoke$arity$variadic = G__14763__delegate;
return G__14763;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__14766 = null;
if (arguments.length > 4) {
var G__14767__i = 0, G__14767__a = new Array(arguments.length -  4);
while (G__14767__i < G__14767__a.length) {G__14767__a[G__14767__i] = arguments[G__14767__i + 4]; ++G__14767__i;}
G__14766 = new cljs.core.IndexedSeq(G__14767__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__14766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14834 = null;
var G__14834__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14834__1 = (function (result){
var G__14801 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14801) : rf.call(null,G__14801));
});
var G__14834__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__14802 = i;
var G__14803 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14802,G__14803) : f.call(null,G__14802,G__14803));
})();
if((v == null)){
return result;
} else {
var G__14804 = result;
var G__14805 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14804,G__14805) : rf.call(null,G__14804,G__14805));
}
});
G__14834 = function(result,input){
switch(arguments.length){
case 0:
return G__14834__0.call(this);
case 1:
return G__14834__1.call(this,result);
case 2:
return G__14834__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14834.cljs$core$IFn$_invoke$arity$0 = G__14834__0;
G__14834.cljs$core$IFn$_invoke$arity$1 = G__14834__1;
G__14834.cljs$core$IFn$_invoke$arity$2 = G__14834__2;
return G__14834;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4751__auto___14835 = size;
var i_14836 = (0);
while(true){
if((i_14836 < n__4751__auto___14835)){
var x_14837 = (function (){var G__14830 = (idx + i_14836);
var G__14831 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14836);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14830,G__14831) : f.call(null,G__14830,G__14831));
})();
if((x_14837 == null)){
} else {
cljs.core.chunk_append(b,x_14837);
}

var G__14838 = (i_14836 + (1));
i_14836 = G__14838;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14832 = idx;
var G__14833 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14832,G__14833) : f.call(null,G__14832,G__14833));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__15052 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15052) : p.call(null,G__15052));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15054 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15054) : p.call(null,G__15054));
})();
if(cljs.core.truth_(and__3852__auto__)){
var G__15055 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15055) : p.call(null,G__15055));
} else {
return and__3852__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15057 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15057) : p.call(null,G__15057));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15059 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15059) : p.call(null,G__15059));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var G__15060 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15060) : p.call(null,G__15060));
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__15229__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__15229 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15230__i = 0, G__15230__a = new Array(arguments.length -  3);
while (G__15230__i < G__15230__a.length) {G__15230__a[G__15230__i] = arguments[G__15230__i + 3]; ++G__15230__i;}
  args = new cljs.core.IndexedSeq(G__15230__a,0);
} 
return G__15229__delegate.call(this,x,y,z,args);};
G__15229.cljs$lang$maxFixedArity = 3;
G__15229.cljs$lang$applyTo = (function (arglist__15231){
var x = cljs.core.first(arglist__15231);
arglist__15231 = cljs.core.next(arglist__15231);
var y = cljs.core.first(arglist__15231);
arglist__15231 = cljs.core.next(arglist__15231);
var z = cljs.core.first(arglist__15231);
var args = cljs.core.rest(arglist__15231);
return G__15229__delegate(x,y,z,args);
});
G__15229.cljs$core$IFn$_invoke$arity$variadic = G__15229__delegate;
return G__15229;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__15232 = null;
if (arguments.length > 3) {
var G__15233__i = 0, G__15233__a = new Array(arguments.length -  3);
while (G__15233__i < G__15233__a.length) {G__15233__a[G__15233__i] = arguments[G__15233__i + 3]; ++G__15233__i;}
G__15232 = new cljs.core.IndexedSeq(G__15233__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15092 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15092) : p1.call(null,G__15092));
})();
if(cljs.core.truth_(and__3852__auto__)){
var G__15093 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15093) : p2.call(null,G__15093));
} else {
return and__3852__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15095 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15095) : p1.call(null,G__15095));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15097 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15097) : p1.call(null,G__15097));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var and__3852__auto____$2 = (function (){var G__15099 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15099) : p2.call(null,G__15099));
})();
if(cljs.core.truth_(and__3852__auto____$2)){
var G__15100 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15100) : p2.call(null,G__15100));
} else {
return and__3852__auto____$2;
}
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15102 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15102) : p1.call(null,G__15102));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15104 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15104) : p1.call(null,G__15104));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var and__3852__auto____$2 = (function (){var G__15106 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15106) : p1.call(null,G__15106));
})();
if(cljs.core.truth_(and__3852__auto____$2)){
var and__3852__auto____$3 = (function (){var G__15108 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15108) : p2.call(null,G__15108));
})();
if(cljs.core.truth_(and__3852__auto____$3)){
var and__3852__auto____$4 = (function (){var G__15110 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15110) : p2.call(null,G__15110));
})();
if(cljs.core.truth_(and__3852__auto____$4)){
var G__15111 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15111) : p2.call(null,G__15111));
} else {
return and__3852__auto____$4;
}
} else {
return and__3852__auto____$3;
}
} else {
return and__3852__auto____$2;
}
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__15234__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14839_SHARP_){
var and__3852__auto__ = (function (){var G__15116 = p1__14839_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15116) : p1.call(null,G__15116));
})();
if(cljs.core.truth_(and__3852__auto__)){
var G__15117 = p1__14839_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15117) : p2.call(null,G__15117));
} else {
return and__3852__auto__;
}
}),args)));
};
var G__15234 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15235__i = 0, G__15235__a = new Array(arguments.length -  3);
while (G__15235__i < G__15235__a.length) {G__15235__a[G__15235__i] = arguments[G__15235__i + 3]; ++G__15235__i;}
  args = new cljs.core.IndexedSeq(G__15235__a,0);
} 
return G__15234__delegate.call(this,x,y,z,args);};
G__15234.cljs$lang$maxFixedArity = 3;
G__15234.cljs$lang$applyTo = (function (arglist__15236){
var x = cljs.core.first(arglist__15236);
arglist__15236 = cljs.core.next(arglist__15236);
var y = cljs.core.first(arglist__15236);
arglist__15236 = cljs.core.next(arglist__15236);
var z = cljs.core.first(arglist__15236);
var args = cljs.core.rest(arglist__15236);
return G__15234__delegate(x,y,z,args);
});
G__15234.cljs$core$IFn$_invoke$arity$variadic = G__15234__delegate;
return G__15234;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__15237 = null;
if (arguments.length > 3) {
var G__15238__i = 0, G__15238__a = new Array(arguments.length -  3);
while (G__15238__i < G__15238__a.length) {G__15238__a[G__15238__i] = arguments[G__15238__i + 3]; ++G__15238__i;}
G__15237 = new cljs.core.IndexedSeq(G__15238__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15163 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15163) : p1.call(null,G__15163));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15165 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15165) : p2.call(null,G__15165));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var G__15166 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15166) : p3.call(null,G__15166));
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15168 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15168) : p1.call(null,G__15168));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15170 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15170) : p2.call(null,G__15170));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var and__3852__auto____$2 = (function (){var G__15172 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15172) : p3.call(null,G__15172));
})();
if(cljs.core.truth_(and__3852__auto____$2)){
var and__3852__auto____$3 = (function (){var G__15174 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15174) : p1.call(null,G__15174));
})();
if(cljs.core.truth_(and__3852__auto____$3)){
var and__3852__auto____$4 = (function (){var G__15176 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15176) : p2.call(null,G__15176));
})();
if(cljs.core.truth_(and__3852__auto____$4)){
var G__15177 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15177) : p3.call(null,G__15177));
} else {
return and__3852__auto____$4;
}
} else {
return and__3852__auto____$3;
}
} else {
return and__3852__auto____$2;
}
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3852__auto__ = (function (){var G__15179 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15179) : p1.call(null,G__15179));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15181 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15181) : p2.call(null,G__15181));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var and__3852__auto____$2 = (function (){var G__15183 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15183) : p3.call(null,G__15183));
})();
if(cljs.core.truth_(and__3852__auto____$2)){
var and__3852__auto____$3 = (function (){var G__15185 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15185) : p1.call(null,G__15185));
})();
if(cljs.core.truth_(and__3852__auto____$3)){
var and__3852__auto____$4 = (function (){var G__15187 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15187) : p2.call(null,G__15187));
})();
if(cljs.core.truth_(and__3852__auto____$4)){
var and__3852__auto____$5 = (function (){var G__15189 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15189) : p3.call(null,G__15189));
})();
if(cljs.core.truth_(and__3852__auto____$5)){
var and__3852__auto____$6 = (function (){var G__15191 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15191) : p1.call(null,G__15191));
})();
if(cljs.core.truth_(and__3852__auto____$6)){
var and__3852__auto____$7 = (function (){var G__15193 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15193) : p2.call(null,G__15193));
})();
if(cljs.core.truth_(and__3852__auto____$7)){
var G__15194 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15194) : p3.call(null,G__15194));
} else {
return and__3852__auto____$7;
}
} else {
return and__3852__auto____$6;
}
} else {
return and__3852__auto____$5;
}
} else {
return and__3852__auto____$4;
}
} else {
return and__3852__auto____$3;
}
} else {
return and__3852__auto____$2;
}
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__15239__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14840_SHARP_){
var and__3852__auto__ = (function (){var G__15201 = p1__14840_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15201) : p1.call(null,G__15201));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15203 = p1__14840_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15203) : p2.call(null,G__15203));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var G__15204 = p1__14840_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15204) : p3.call(null,G__15204));
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
}),args)));
};
var G__15239 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15240__i = 0, G__15240__a = new Array(arguments.length -  3);
while (G__15240__i < G__15240__a.length) {G__15240__a[G__15240__i] = arguments[G__15240__i + 3]; ++G__15240__i;}
  args = new cljs.core.IndexedSeq(G__15240__a,0);
} 
return G__15239__delegate.call(this,x,y,z,args);};
G__15239.cljs$lang$maxFixedArity = 3;
G__15239.cljs$lang$applyTo = (function (arglist__15241){
var x = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var y = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var z = cljs.core.first(arglist__15241);
var args = cljs.core.rest(arglist__15241);
return G__15239__delegate(x,y,z,args);
});
G__15239.cljs$core$IFn$_invoke$arity$variadic = G__15239__delegate;
return G__15239;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__15242 = null;
if (arguments.length > 3) {
var G__15243__i = 0, G__15243__a = new Array(arguments.length -  3);
while (G__15243__i < G__15243__a.length) {G__15243__a[G__15243__i] = arguments[G__15243__i + 3]; ++G__15243__i;}
G__15242 = new cljs.core.IndexedSeq(G__15243__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__15244__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14841_SHARP_){
var G__15220 = x;
return (p1__14841_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14841_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15220) : p1__14841_SHARP_.call(null,G__15220));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14842_SHARP_){
var and__3852__auto__ = (function (){var G__15222 = x;
return (p1__14842_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14842_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15222) : p1__14842_SHARP_.call(null,G__15222));
})();
if(cljs.core.truth_(and__3852__auto__)){
var G__15223 = y;
return (p1__14842_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14842_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15223) : p1__14842_SHARP_.call(null,G__15223));
} else {
return and__3852__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14843_SHARP_){
var and__3852__auto__ = (function (){var G__15225 = x;
return (p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15225) : p1__14843_SHARP_.call(null,G__15225));
})();
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__15227 = y;
return (p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15227) : p1__14843_SHARP_.call(null,G__15227));
})();
if(cljs.core.truth_(and__3852__auto____$1)){
var G__15228 = z;
return (p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14843_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15228) : p1__14843_SHARP_.call(null,G__15228));
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__15245__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14844_SHARP_){
return cljs.core.every_QMARK_(p1__14844_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__15245 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15246__i = 0, G__15246__a = new Array(arguments.length -  3);
while (G__15246__i < G__15246__a.length) {G__15246__a[G__15246__i] = arguments[G__15246__i + 3]; ++G__15246__i;}
  args = new cljs.core.IndexedSeq(G__15246__a,0);
} 
return G__15245__delegate.call(this,x,y,z,args);};
G__15245.cljs$lang$maxFixedArity = 3;
G__15245.cljs$lang$applyTo = (function (arglist__15247){
var x = cljs.core.first(arglist__15247);
arglist__15247 = cljs.core.next(arglist__15247);
var y = cljs.core.first(arglist__15247);
arglist__15247 = cljs.core.next(arglist__15247);
var z = cljs.core.first(arglist__15247);
var args = cljs.core.rest(arglist__15247);
return G__15245__delegate(x,y,z,args);
});
G__15245.cljs$core$IFn$_invoke$arity$variadic = G__15245__delegate;
return G__15245;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__15248 = null;
if (arguments.length > 3) {
var G__15249__i = 0, G__15249__a = new Array(arguments.length -  3);
while (G__15249__i < G__15249__a.length) {G__15249__a[G__15249__i] = arguments[G__15249__i + 3]; ++G__15249__i;}
G__15248 = new cljs.core.IndexedSeq(G__15249__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__15244 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15250__i = 0, G__15250__a = new Array(arguments.length -  3);
while (G__15250__i < G__15250__a.length) {G__15250__a[G__15250__i] = arguments[G__15250__i + 3]; ++G__15250__i;}
  ps = new cljs.core.IndexedSeq(G__15250__a,0);
} 
return G__15244__delegate.call(this,p1,p2,p3,ps);};
G__15244.cljs$lang$maxFixedArity = 3;
G__15244.cljs$lang$applyTo = (function (arglist__15251){
var p1 = cljs.core.first(arglist__15251);
arglist__15251 = cljs.core.next(arglist__15251);
var p2 = cljs.core.first(arglist__15251);
arglist__15251 = cljs.core.next(arglist__15251);
var p3 = cljs.core.first(arglist__15251);
var ps = cljs.core.rest(arglist__15251);
return G__15244__delegate(p1,p2,p3,ps);
});
G__15244.cljs$core$IFn$_invoke$arity$variadic = G__15244__delegate;
return G__15244;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__15252 = null;
if (arguments.length > 3) {
var G__15253__i = 0, G__15253__a = new Array(arguments.length -  3);
while (G__15253__i < G__15253__a.length) {G__15253__a[G__15253__i] = arguments[G__15253__i + 3]; ++G__15253__i;}
G__15252 = new cljs.core.IndexedSeq(G__15253__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__15459 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15459) : p.call(null,G__15459));
});
var sp1__2 = (function (x,y){
var or__3864__auto__ = (function (){var G__15461 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15461) : p.call(null,G__15461));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var G__15462 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15462) : p.call(null,G__15462));
}
});
var sp1__3 = (function (x,y,z){
var or__3864__auto__ = (function (){var G__15464 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15464) : p.call(null,G__15464));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15466 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15466) : p.call(null,G__15466));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var G__15467 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15467) : p.call(null,G__15467));
}
}
});
var sp1__4 = (function() { 
var G__15628__delegate = function (x,y,z,args){
var or__3864__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__15628 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15629__i = 0, G__15629__a = new Array(arguments.length -  3);
while (G__15629__i < G__15629__a.length) {G__15629__a[G__15629__i] = arguments[G__15629__i + 3]; ++G__15629__i;}
  args = new cljs.core.IndexedSeq(G__15629__a,0);
} 
return G__15628__delegate.call(this,x,y,z,args);};
G__15628.cljs$lang$maxFixedArity = 3;
G__15628.cljs$lang$applyTo = (function (arglist__15630){
var x = cljs.core.first(arglist__15630);
arglist__15630 = cljs.core.next(arglist__15630);
var y = cljs.core.first(arglist__15630);
arglist__15630 = cljs.core.next(arglist__15630);
var z = cljs.core.first(arglist__15630);
var args = cljs.core.rest(arglist__15630);
return G__15628__delegate(x,y,z,args);
});
G__15628.cljs$core$IFn$_invoke$arity$variadic = G__15628__delegate;
return G__15628;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__15631 = null;
if (arguments.length > 3) {
var G__15632__i = 0, G__15632__a = new Array(arguments.length -  3);
while (G__15632__i < G__15632__a.length) {G__15632__a[G__15632__i] = arguments[G__15632__i + 3]; ++G__15632__i;}
G__15631 = new cljs.core.IndexedSeq(G__15632__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3864__auto__ = (function (){var G__15499 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15499) : p1.call(null,G__15499));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var G__15500 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15500) : p2.call(null,G__15500));
}
});
var sp2__2 = (function (x,y){
var or__3864__auto__ = (function (){var G__15502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15502) : p1.call(null,G__15502));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15504 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15504) : p1.call(null,G__15504));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var G__15506 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15506) : p2.call(null,G__15506));
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
var G__15507 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15507) : p2.call(null,G__15507));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3864__auto__ = (function (){var G__15509 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15509) : p1.call(null,G__15509));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15511 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15511) : p1.call(null,G__15511));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var G__15513 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15513) : p1.call(null,G__15513));
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
var or__3864__auto____$3 = (function (){var G__15515 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15515) : p2.call(null,G__15515));
})();
if(cljs.core.truth_(or__3864__auto____$3)){
return or__3864__auto____$3;
} else {
var or__3864__auto____$4 = (function (){var G__15517 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15517) : p2.call(null,G__15517));
})();
if(cljs.core.truth_(or__3864__auto____$4)){
return or__3864__auto____$4;
} else {
var G__15518 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15518) : p2.call(null,G__15518));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__15633__delegate = function (x,y,z,args){
var or__3864__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.some(((function (or__3864__auto__){
return (function (p1__15254_SHARP_){
var or__3864__auto____$1 = (function (){var G__15520 = p1__15254_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15520) : p1.call(null,G__15520));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var G__15521 = p1__15254_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15521) : p2.call(null,G__15521));
}
});})(or__3864__auto__))
,args);
}
};
var G__15633 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15634__i = 0, G__15634__a = new Array(arguments.length -  3);
while (G__15634__i < G__15634__a.length) {G__15634__a[G__15634__i] = arguments[G__15634__i + 3]; ++G__15634__i;}
  args = new cljs.core.IndexedSeq(G__15634__a,0);
} 
return G__15633__delegate.call(this,x,y,z,args);};
G__15633.cljs$lang$maxFixedArity = 3;
G__15633.cljs$lang$applyTo = (function (arglist__15635){
var x = cljs.core.first(arglist__15635);
arglist__15635 = cljs.core.next(arglist__15635);
var y = cljs.core.first(arglist__15635);
arglist__15635 = cljs.core.next(arglist__15635);
var z = cljs.core.first(arglist__15635);
var args = cljs.core.rest(arglist__15635);
return G__15633__delegate(x,y,z,args);
});
G__15633.cljs$core$IFn$_invoke$arity$variadic = G__15633__delegate;
return G__15633;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__15636 = null;
if (arguments.length > 3) {
var G__15637__i = 0, G__15637__a = new Array(arguments.length -  3);
while (G__15637__i < G__15637__a.length) {G__15637__a[G__15637__i] = arguments[G__15637__i + 3]; ++G__15637__i;}
G__15636 = new cljs.core.IndexedSeq(G__15637__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3864__auto__ = (function (){var G__15567 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15567) : p1.call(null,G__15567));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15569 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15569) : p2.call(null,G__15569));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var G__15570 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15570) : p3.call(null,G__15570));
}
}
});
var sp3__2 = (function (x,y){
var or__3864__auto__ = (function (){var G__15572 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15572) : p1.call(null,G__15572));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15574 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15574) : p2.call(null,G__15574));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var G__15576 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15576) : p3.call(null,G__15576));
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
var or__3864__auto____$3 = (function (){var G__15578 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15578) : p1.call(null,G__15578));
})();
if(cljs.core.truth_(or__3864__auto____$3)){
return or__3864__auto____$3;
} else {
var or__3864__auto____$4 = (function (){var G__15580 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15580) : p2.call(null,G__15580));
})();
if(cljs.core.truth_(or__3864__auto____$4)){
return or__3864__auto____$4;
} else {
var G__15581 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15581) : p3.call(null,G__15581));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3864__auto__ = (function (){var G__15583 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15583) : p1.call(null,G__15583));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15585 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15585) : p2.call(null,G__15585));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var G__15587 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15587) : p3.call(null,G__15587));
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
var or__3864__auto____$3 = (function (){var G__15589 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15589) : p1.call(null,G__15589));
})();
if(cljs.core.truth_(or__3864__auto____$3)){
return or__3864__auto____$3;
} else {
var or__3864__auto____$4 = (function (){var G__15591 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15591) : p2.call(null,G__15591));
})();
if(cljs.core.truth_(or__3864__auto____$4)){
return or__3864__auto____$4;
} else {
var or__3864__auto____$5 = (function (){var G__15593 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15593) : p3.call(null,G__15593));
})();
if(cljs.core.truth_(or__3864__auto____$5)){
return or__3864__auto____$5;
} else {
var or__3864__auto____$6 = (function (){var G__15595 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15595) : p1.call(null,G__15595));
})();
if(cljs.core.truth_(or__3864__auto____$6)){
return or__3864__auto____$6;
} else {
var or__3864__auto____$7 = (function (){var G__15597 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15597) : p2.call(null,G__15597));
})();
if(cljs.core.truth_(or__3864__auto____$7)){
return or__3864__auto____$7;
} else {
var G__15598 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15598) : p3.call(null,G__15598));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__15638__delegate = function (x,y,z,args){
var or__3864__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.some(((function (or__3864__auto__){
return (function (p1__15255_SHARP_){
var or__3864__auto____$1 = (function (){var G__15600 = p1__15255_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15600) : p1.call(null,G__15600));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var G__15602 = p1__15255_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15602) : p2.call(null,G__15602));
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
var G__15603 = p1__15255_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15603) : p3.call(null,G__15603));
}
}
});})(or__3864__auto__))
,args);
}
};
var G__15638 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15639__i = 0, G__15639__a = new Array(arguments.length -  3);
while (G__15639__i < G__15639__a.length) {G__15639__a[G__15639__i] = arguments[G__15639__i + 3]; ++G__15639__i;}
  args = new cljs.core.IndexedSeq(G__15639__a,0);
} 
return G__15638__delegate.call(this,x,y,z,args);};
G__15638.cljs$lang$maxFixedArity = 3;
G__15638.cljs$lang$applyTo = (function (arglist__15640){
var x = cljs.core.first(arglist__15640);
arglist__15640 = cljs.core.next(arglist__15640);
var y = cljs.core.first(arglist__15640);
arglist__15640 = cljs.core.next(arglist__15640);
var z = cljs.core.first(arglist__15640);
var args = cljs.core.rest(arglist__15640);
return G__15638__delegate(x,y,z,args);
});
G__15638.cljs$core$IFn$_invoke$arity$variadic = G__15638__delegate;
return G__15638;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__15641 = null;
if (arguments.length > 3) {
var G__15642__i = 0, G__15642__a = new Array(arguments.length -  3);
while (G__15642__i < G__15642__a.length) {G__15642__a[G__15642__i] = arguments[G__15642__i + 3]; ++G__15642__i;}
G__15641 = new cljs.core.IndexedSeq(G__15642__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__15643__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__15256_SHARP_){
var G__15619 = x;
return (p1__15256_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15256_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15619) : p1__15256_SHARP_.call(null,G__15619));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__15257_SHARP_){
var or__3864__auto__ = (function (){var G__15621 = x;
return (p1__15257_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15257_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15621) : p1__15257_SHARP_.call(null,G__15621));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var G__15622 = y;
return (p1__15257_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15257_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15622) : p1__15257_SHARP_.call(null,G__15622));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__15258_SHARP_){
var or__3864__auto__ = (function (){var G__15624 = x;
return (p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15624) : p1__15258_SHARP_.call(null,G__15624));
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var G__15626 = y;
return (p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15626) : p1__15258_SHARP_.call(null,G__15626));
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var G__15627 = z;
return (p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15258_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15627) : p1__15258_SHARP_.call(null,G__15627));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__15644__delegate = function (x,y,z,args){
var or__3864__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.some(((function (or__3864__auto__,ps__$1){
return (function (p1__15259_SHARP_){
return cljs.core.some(p1__15259_SHARP_,args);
});})(or__3864__auto__,ps__$1))
,ps__$1);
}
};
var G__15644 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15645__i = 0, G__15645__a = new Array(arguments.length -  3);
while (G__15645__i < G__15645__a.length) {G__15645__a[G__15645__i] = arguments[G__15645__i + 3]; ++G__15645__i;}
  args = new cljs.core.IndexedSeq(G__15645__a,0);
} 
return G__15644__delegate.call(this,x,y,z,args);};
G__15644.cljs$lang$maxFixedArity = 3;
G__15644.cljs$lang$applyTo = (function (arglist__15646){
var x = cljs.core.first(arglist__15646);
arglist__15646 = cljs.core.next(arglist__15646);
var y = cljs.core.first(arglist__15646);
arglist__15646 = cljs.core.next(arglist__15646);
var z = cljs.core.first(arglist__15646);
var args = cljs.core.rest(arglist__15646);
return G__15644__delegate(x,y,z,args);
});
G__15644.cljs$core$IFn$_invoke$arity$variadic = G__15644__delegate;
return G__15644;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__15647 = null;
if (arguments.length > 3) {
var G__15648__i = 0, G__15648__a = new Array(arguments.length -  3);
while (G__15648__i < G__15648__a.length) {G__15648__a[G__15648__i] = arguments[G__15648__i + 3]; ++G__15648__i;}
G__15647 = new cljs.core.IndexedSeq(G__15648__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__15643 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15649__i = 0, G__15649__a = new Array(arguments.length -  3);
while (G__15649__i < G__15649__a.length) {G__15649__a[G__15649__i] = arguments[G__15649__i + 3]; ++G__15649__i;}
  ps = new cljs.core.IndexedSeq(G__15649__a,0);
} 
return G__15643__delegate.call(this,p1,p2,p3,ps);};
G__15643.cljs$lang$maxFixedArity = 3;
G__15643.cljs$lang$applyTo = (function (arglist__15650){
var p1 = cljs.core.first(arglist__15650);
arglist__15650 = cljs.core.next(arglist__15650);
var p2 = cljs.core.first(arglist__15650);
arglist__15650 = cljs.core.next(arglist__15650);
var p3 = cljs.core.first(arglist__15650);
var ps = cljs.core.rest(arglist__15650);
return G__15643__delegate(p1,p2,p3,ps);
});
G__15643.cljs$core$IFn$_invoke$arity$variadic = G__15643__delegate;
return G__15643;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__15651 = null;
if (arguments.length > 3) {
var G__15652__i = 0, G__15652__a = new Array(arguments.length -  3);
while (G__15652__i < G__15652__a.length) {G__15652__a[G__15652__i] = arguments[G__15652__i + 3]; ++G__15652__i;}
G__15651 = new cljs.core.IndexedSeq(G__15652__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15651);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__15707 = null;
var G__15707__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15707__1 = (function (result){
var G__15693 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15693) : rf.call(null,G__15693));
});
var G__15707__2 = (function (result,input){
var G__15694 = result;
var G__15695 = (function (){var G__15696 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15696) : f.call(null,G__15696));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15694,G__15695) : rf.call(null,G__15694,G__15695));
});
var G__15707__3 = (function() { 
var G__15708__delegate = function (result,input,inputs){
var G__15697 = result;
var G__15698 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15697,G__15698) : rf.call(null,G__15697,G__15698));
};
var G__15708 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__15709__i = 0, G__15709__a = new Array(arguments.length -  2);
while (G__15709__i < G__15709__a.length) {G__15709__a[G__15709__i] = arguments[G__15709__i + 2]; ++G__15709__i;}
  inputs = new cljs.core.IndexedSeq(G__15709__a,0);
} 
return G__15708__delegate.call(this,result,input,inputs);};
G__15708.cljs$lang$maxFixedArity = 2;
G__15708.cljs$lang$applyTo = (function (arglist__15710){
var result = cljs.core.first(arglist__15710);
arglist__15710 = cljs.core.next(arglist__15710);
var input = cljs.core.first(arglist__15710);
var inputs = cljs.core.rest(arglist__15710);
return G__15708__delegate(result,input,inputs);
});
G__15708.cljs$core$IFn$_invoke$arity$variadic = G__15708__delegate;
return G__15708;
})()
;
G__15707 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__15707__0.call(this);
case 1:
return G__15707__1.call(this,result);
case 2:
return G__15707__2.call(this,result,input);
default:
var G__15711 = null;
if (arguments.length > 2) {
var G__15712__i = 0, G__15712__a = new Array(arguments.length -  2);
while (G__15712__i < G__15712__a.length) {G__15712__a[G__15712__i] = arguments[G__15712__i + 2]; ++G__15712__i;}
G__15711 = new cljs.core.IndexedSeq(G__15712__a,0);
}
return G__15707__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__15711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15707.cljs$lang$maxFixedArity = 2;
G__15707.cljs$lang$applyTo = G__15707__3.cljs$lang$applyTo;
G__15707.cljs$core$IFn$_invoke$arity$0 = G__15707__0;
G__15707.cljs$core$IFn$_invoke$arity$1 = G__15707__1;
G__15707.cljs$core$IFn$_invoke$arity$2 = G__15707__2;
G__15707.cljs$core$IFn$_invoke$arity$variadic = G__15707__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15707;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4751__auto___15713 = size;
var i_15714 = (0);
while(true){
if((i_15714 < n__4751__auto___15713)){
cljs.core.chunk_append(b,(function (){var G__15699 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15714);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15699) : f.call(null,G__15699));
})());

var G__15715 = (i_15714 + (1));
i_15714 = G__15715;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15700 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15700) : f.call(null,G__15700));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__15701 = cljs.core.first(s1);
var G__15702 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15701,G__15702) : f.call(null,G__15701,G__15702));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__15703 = cljs.core.first(s1);
var G__15704 = cljs.core.first(s2);
var G__15705 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15703,G__15704,G__15705) : f.call(null,G__15703,G__15704,G__15705));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__15716__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__15653_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15653_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__15716 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15717__i = 0, G__15717__a = new Array(arguments.length -  4);
while (G__15717__i < G__15717__a.length) {G__15717__a[G__15717__i] = arguments[G__15717__i + 4]; ++G__15717__i;}
  colls = new cljs.core.IndexedSeq(G__15717__a,0);
} 
return G__15716__delegate.call(this,f,c1,c2,c3,colls);};
G__15716.cljs$lang$maxFixedArity = 4;
G__15716.cljs$lang$applyTo = (function (arglist__15718){
var f = cljs.core.first(arglist__15718);
arglist__15718 = cljs.core.next(arglist__15718);
var c1 = cljs.core.first(arglist__15718);
arglist__15718 = cljs.core.next(arglist__15718);
var c2 = cljs.core.first(arglist__15718);
arglist__15718 = cljs.core.next(arglist__15718);
var c3 = cljs.core.first(arglist__15718);
var colls = cljs.core.rest(arglist__15718);
return G__15716__delegate(f,c1,c2,c3,colls);
});
G__15716.cljs$core$IFn$_invoke$arity$variadic = G__15716__delegate;
return G__15716;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__15719 = null;
if (arguments.length > 4) {
var G__15720__i = 0, G__15720__a = new Array(arguments.length -  4);
while (G__15720__i < G__15720__a.length) {G__15720__a[G__15720__i] = arguments[G__15720__i + 4]; ++G__15720__i;}
G__15719 = new cljs.core.IndexedSeq(G__15720__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15729 = null;
var G__15729__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15729__1 = (function (result){
var G__15726 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15726) : rf.call(null,G__15726));
});
var G__15729__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__15727 = result;
var G__15728 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15727,G__15728) : rf.call(null,G__15727,G__15728));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__15729 = function(result,input){
switch(arguments.length){
case 0:
return G__15729__0.call(this);
case 1:
return G__15729__1.call(this,result);
case 2:
return G__15729__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15729.cljs$core$IFn$_invoke$arity$0 = G__15729__0;
G__15729.cljs$core$IFn$_invoke$arity$1 = G__15729__1;
G__15729.cljs$core$IFn$_invoke$arity$2 = G__15729__2;
return G__15729;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15736 = null;
var G__15736__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15736__1 = (function (result){
var G__15733 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15733) : rf.call(null,G__15733));
});
var G__15736__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__15734 = result;
var G__15735 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15734,G__15735) : rf.call(null,G__15734,G__15735));
}
});
G__15736 = function(result,input){
switch(arguments.length){
case 0:
return G__15736__0.call(this);
case 1:
return G__15736__1.call(this,result);
case 2:
return G__15736__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15736.cljs$core$IFn$_invoke$arity$0 = G__15736__0;
G__15736.cljs$core$IFn$_invoke$arity$1 = G__15736__1;
G__15736.cljs$core$IFn$_invoke$arity$2 = G__15736__2;
return G__15736;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__15737 = (n__$1 - (1));
var G__15738 = cljs.core.rest(s);
n__$1 = G__15737;
coll__$1 = G__15738;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__15741 = cljs.core.next(s);
var G__15742 = cljs.core.next(lead);
s = G__15741;
lead = G__15742;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__15755 = null;
var G__15755__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15755__1 = (function (result){
var G__15749 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15749) : rf.call(null,G__15749));
});
var G__15755__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3852__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3852__auto__)){
var G__15750 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15750) : pred.call(null,G__15750));
} else {
return and__3852__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__15751 = result;
var G__15752 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15751,G__15752) : rf.call(null,G__15751,G__15752));
}
});
G__15755 = function(result,input){
switch(arguments.length){
case 0:
return G__15755__0.call(this);
case 1:
return G__15755__1.call(this,result);
case 2:
return G__15755__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15755.cljs$core$IFn$_invoke$arity$0 = G__15755__0;
G__15755.cljs$core$IFn$_invoke$arity$1 = G__15755__1;
G__15755.cljs$core$IFn$_invoke$arity$2 = G__15755__2;
return G__15755;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3852__auto__ = s;
if(and__3852__auto__){
var G__15754 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15754) : pred__$1.call(null,G__15754));
} else {
return and__3852__auto__;
}
})())){
var G__15756 = pred__$1;
var G__15757 = cljs.core.rest(s);
pred__$1 = G__15756;
coll__$1 = G__15757;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__15766 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15766) : f.call(null,G__15766));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__15769__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__15769 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15770__i = 0, G__15770__a = new Array(arguments.length -  2);
while (G__15770__i < G__15770__a.length) {G__15770__a[G__15770__i] = arguments[G__15770__i + 2]; ++G__15770__i;}
  colls = new cljs.core.IndexedSeq(G__15770__a,0);
} 
return G__15769__delegate.call(this,c1,c2,colls);};
G__15769.cljs$lang$maxFixedArity = 2;
G__15769.cljs$lang$applyTo = (function (arglist__15771){
var c1 = cljs.core.first(arglist__15771);
arglist__15771 = cljs.core.next(arglist__15771);
var c2 = cljs.core.first(arglist__15771);
var colls = cljs.core.rest(arglist__15771);
return G__15769__delegate(c1,c2,colls);
});
G__15769.cljs$core$IFn$_invoke$arity$variadic = G__15769__delegate;
return G__15769;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__15772 = null;
if (arguments.length > 2) {
var G__15773__i = 0, G__15773__a = new Array(arguments.length -  2);
while (G__15773__i < G__15773__a.length) {G__15773__a[G__15773__i] = arguments[G__15773__i + 2]; ++G__15773__i;}
G__15772 = new cljs.core.IndexedSeq(G__15773__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__15772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__15788 = null;
var G__15788__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15788__1 = (function (result){
var G__15781 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15781) : rf.call(null,G__15781));
});
var G__15788__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__15782 = result;
var G__15783 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15782,G__15783) : rf.call(null,G__15782,G__15783));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__15784 = sepr;
var G__15785 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15784,G__15785) : rf.call(null,G__15784,G__15785));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__15786 = result;
var G__15787 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15786,G__15787) : rf.call(null,G__15786,G__15787));
}
});
G__15788 = function(result,input){
switch(arguments.length){
case 0:
return G__15788__0.call(this);
case 1:
return G__15788__1.call(this,result);
case 2:
return G__15788__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15788.cljs$core$IFn$_invoke$arity$0 = G__15788__0;
G__15788.cljs$core$IFn$_invoke$arity$1 = G__15788__1;
G__15788.cljs$core$IFn$_invoke$arity$2 = G__15788__2;
return G__15788;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__15797__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__15797 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__15798__i = 0, G__15798__a = new Array(arguments.length -  1);
while (G__15798__i < G__15798__a.length) {G__15798__a[G__15798__i] = arguments[G__15798__i + 1]; ++G__15798__i;}
  colls = new cljs.core.IndexedSeq(G__15798__a,0);
} 
return G__15797__delegate.call(this,f,colls);};
G__15797.cljs$lang$maxFixedArity = 1;
G__15797.cljs$lang$applyTo = (function (arglist__15799){
var f = cljs.core.first(arglist__15799);
var colls = cljs.core.rest(arglist__15799);
return G__15797__delegate(f,colls);
});
G__15797.cljs$core$IFn$_invoke$arity$variadic = G__15797__delegate;
return G__15797;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__15800 = null;
if (arguments.length > 1) {
var G__15801__i = 0, G__15801__a = new Array(arguments.length -  1);
while (G__15801__i < G__15801__a.length) {G__15801__a[G__15801__i] = arguments[G__15801__i + 1]; ++G__15801__i;}
G__15800 = new cljs.core.IndexedSeq(G__15801__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__15820 = null;
var G__15820__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15820__1 = (function (result){
var G__15814 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15814) : rf.call(null,G__15814));
});
var G__15820__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15815 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15815) : pred.call(null,G__15815));
})())){
var G__15816 = result;
var G__15817 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15816,G__15817) : rf.call(null,G__15816,G__15817));
} else {
return result;
}
});
G__15820 = function(result,input){
switch(arguments.length){
case 0:
return G__15820__0.call(this);
case 1:
return G__15820__1.call(this,result);
case 2:
return G__15820__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15820.cljs$core$IFn$_invoke$arity$0 = G__15820__0;
G__15820.cljs$core$IFn$_invoke$arity$1 = G__15820__1;
G__15820.cljs$core$IFn$_invoke$arity$2 = G__15820__2;
return G__15820;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4751__auto___15821 = size;
var i_15822 = (0);
while(true){
if((i_15822 < n__4751__auto___15821)){
if(cljs.core.truth_((function (){var G__15818 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15822);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15818) : pred.call(null,G__15818));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15822));
} else {
}

var G__15823 = (i_15822 + (1));
i_15822 = G__15823;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__15819 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15819) : pred.call(null,G__15819));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__15830 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15830) : branch_QMARK_.call(null,G__15830));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__15831 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15831) : children.call(null,G__15831));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15832_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__15832_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__15835 = to;
if(G__15835){
var bit__4538__auto__ = (G__15835.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4538__auto__) || (G__15835.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__15836 = to;
if(G__15836){
var bit__4538__auto__ = (G__15836.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4538__auto__) || (G__15836.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__15838 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15838) : f.call(null,G__15838));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__15839__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__15839 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15840__i = 0, G__15840__a = new Array(arguments.length -  4);
while (G__15840__i < G__15840__a.length) {G__15840__a[G__15840__i] = arguments[G__15840__i + 4]; ++G__15840__i;}
  colls = new cljs.core.IndexedSeq(G__15840__a,0);
} 
return G__15839__delegate.call(this,f,c1,c2,c3,colls);};
G__15839.cljs$lang$maxFixedArity = 4;
G__15839.cljs$lang$applyTo = (function (arglist__15841){
var f = cljs.core.first(arglist__15841);
arglist__15841 = cljs.core.next(arglist__15841);
var c1 = cljs.core.first(arglist__15841);
arglist__15841 = cljs.core.next(arglist__15841);
var c2 = cljs.core.first(arglist__15841);
arglist__15841 = cljs.core.next(arglist__15841);
var c3 = cljs.core.first(arglist__15841);
var colls = cljs.core.rest(arglist__15841);
return G__15839__delegate(f,c1,c2,c3,colls);
});
G__15839.cljs$core$IFn$_invoke$arity$variadic = G__15839__delegate;
return G__15839;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__15842 = null;
if (arguments.length > 4) {
var G__15843__i = 0, G__15843__a = new Array(arguments.length -  4);
while (G__15843__i < G__15843__a.length) {G__15843__a[G__15843__i] = arguments[G__15843__i + 4]; ++G__15843__i;}
G__15842 = new cljs.core.IndexedSeq(G__15843__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__15845 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15845) : pred.call(null,G__15845));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__15860 = m__$1;
if(G__15860){
var bit__4545__auto__ = (G__15860.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4545__auto__) || (G__15860.cljs$core$ILookup$)){
return true;
} else {
if((!G__15860.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15860);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15860);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__15861 = sentinel;
var G__15862 = m__$2;
var G__15863 = cljs.core.next(ks__$1);
sentinel = G__15861;
m__$1 = G__15862;
ks__$1 = G__15863;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__15864,v){
var vec__15869 = p__15864;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15869,(0),null);
var ks = cljs.core.nthnext(vec__15869,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__15870,f){
var vec__15908 = p__15870;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15908,(0),null);
var ks = cljs.core.nthnext(vec__15908,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15909 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15909) : f.call(null,G__15909));
})());
}
});
var update_in__4 = (function (m,p__15871,f,a){
var vec__15910 = p__15871;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15910,(0),null);
var ks = cljs.core.nthnext(vec__15910,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15911 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15912 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15911,G__15912) : f.call(null,G__15911,G__15912));
})());
}
});
var update_in__5 = (function (m,p__15872,f,a,b){
var vec__15913 = p__15872;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15913,(0),null);
var ks = cljs.core.nthnext(vec__15913,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15915 = a;
var G__15916 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15914,G__15915,G__15916) : f.call(null,G__15914,G__15915,G__15916));
})());
}
});
var update_in__6 = (function (m,p__15873,f,a,b,c){
var vec__15917 = p__15873;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15917,(0),null);
var ks = cljs.core.nthnext(vec__15917,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15918 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15919 = a;
var G__15920 = b;
var G__15921 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15918,G__15919,G__15920,G__15921) : f.call(null,G__15918,G__15919,G__15920,G__15921));
})());
}
});
var update_in__7 = (function() { 
var G__15923__delegate = function (m,p__15874,f,a,b,c,args){
var vec__15922 = p__15874;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15922,(0),null);
var ks = cljs.core.nthnext(vec__15922,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15923 = function (m,p__15874,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15924__i = 0, G__15924__a = new Array(arguments.length -  6);
while (G__15924__i < G__15924__a.length) {G__15924__a[G__15924__i] = arguments[G__15924__i + 6]; ++G__15924__i;}
  args = new cljs.core.IndexedSeq(G__15924__a,0);
} 
return G__15923__delegate.call(this,m,p__15874,f,a,b,c,args);};
G__15923.cljs$lang$maxFixedArity = 6;
G__15923.cljs$lang$applyTo = (function (arglist__15925){
var m = cljs.core.first(arglist__15925);
arglist__15925 = cljs.core.next(arglist__15925);
var p__15874 = cljs.core.first(arglist__15925);
arglist__15925 = cljs.core.next(arglist__15925);
var f = cljs.core.first(arglist__15925);
arglist__15925 = cljs.core.next(arglist__15925);
var a = cljs.core.first(arglist__15925);
arglist__15925 = cljs.core.next(arglist__15925);
var b = cljs.core.first(arglist__15925);
arglist__15925 = cljs.core.next(arglist__15925);
var c = cljs.core.first(arglist__15925);
var args = cljs.core.rest(arglist__15925);
return G__15923__delegate(m,p__15874,f,a,b,c,args);
});
G__15923.cljs$core$IFn$_invoke$arity$variadic = G__15923__delegate;
return G__15923;
})()
;
update_in = function(m,p__15874,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__15874,f);
case 4:
return update_in__4.call(this,m,p__15874,f,a);
case 5:
return update_in__5.call(this,m,p__15874,f,a,b);
case 6:
return update_in__6.call(this,m,p__15874,f,a,b,c);
default:
var G__15926 = null;
if (arguments.length > 6) {
var G__15927__i = 0, G__15927__a = new Array(arguments.length -  6);
while (G__15927__i < G__15927__a.length) {G__15927__a[G__15927__i] = arguments[G__15927__i + 6]; ++G__15927__i;}
G__15926 = new cljs.core.IndexedSeq(G__15927__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__15874,f,a,b,c, G__15926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15938 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15938) : f.call(null,G__15938));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15939 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15940 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15939,G__15940) : f.call(null,G__15939,G__15940));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15941 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15942 = x;
var G__15943 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15941,G__15942,G__15943) : f.call(null,G__15941,G__15942,G__15943));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15944 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15945 = x;
var G__15946 = y;
var G__15947 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15944,G__15945,G__15946,G__15947) : f.call(null,G__15944,G__15945,G__15946,G__15947));
})());
});
var update__7 = (function() { 
var G__15948__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15948 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15949__i = 0, G__15949__a = new Array(arguments.length -  6);
while (G__15949__i < G__15949__a.length) {G__15949__a[G__15949__i] = arguments[G__15949__i + 6]; ++G__15949__i;}
  more = new cljs.core.IndexedSeq(G__15949__a,0);
} 
return G__15948__delegate.call(this,m,k,f,x,y,z,more);};
G__15948.cljs$lang$maxFixedArity = 6;
G__15948.cljs$lang$applyTo = (function (arglist__15950){
var m = cljs.core.first(arglist__15950);
arglist__15950 = cljs.core.next(arglist__15950);
var k = cljs.core.first(arglist__15950);
arglist__15950 = cljs.core.next(arglist__15950);
var f = cljs.core.first(arglist__15950);
arglist__15950 = cljs.core.next(arglist__15950);
var x = cljs.core.first(arglist__15950);
arglist__15950 = cljs.core.next(arglist__15950);
var y = cljs.core.first(arglist__15950);
arglist__15950 = cljs.core.next(arglist__15950);
var z = cljs.core.first(arglist__15950);
var more = cljs.core.rest(arglist__15950);
return G__15948__delegate(m,k,f,x,y,z,more);
});
G__15948.cljs$core$IFn$_invoke$arity$variadic = G__15948__delegate;
return G__15948;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15951 = null;
if (arguments.length > 6) {
var G__15952__i = 0, G__15952__a = new Array(arguments.length -  6);
while (G__15952__i < G__15952__a.length) {G__15952__a[G__15952__i] = arguments[G__15952__i + 6]; ++G__15952__i;}
G__15951 = new cljs.core.IndexedSeq(G__15952__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15953 = (ll - (5));
var G__15954 = r;
ll = G__15953;
ret = G__15954;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15959 = cljs.core.pv_aget(node,(0));
var G__15960 = (level - (5));
node = G__15959;
level = G__15960;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15961 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15962 = (level - (5));
node = G__15961;
level = G__15962;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15972 = init__$2;
var G__15973 = (j + i);
var G__15974 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15972,G__15973,G__15974) : f.call(null,G__15972,G__15973,G__15974));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15985 = (j + (1));
var G__15986 = init__$3;
j = G__15985;
init__$2 = G__15986;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15975 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15975) : cljs.core.deref.call(null,G__15975));
} else {
var G__15987 = (i + len);
var G__15988 = init__$2;
i = G__15987;
init__$1 = G__15988;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15976 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15976) : cljs.core.tv_editable_root.call(null,G__15976));
})(),(function (){var G__15977 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15977) : cljs.core.tv_editable_tail.call(null,G__15977));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15978 = init__$2;
var G__15979 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15978,G__15979) : f.call(null,G__15978,G__15979));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15989 = (j + (1));
var G__15990 = init__$3;
j = G__15989;
init__$2 = G__15990;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15980 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15980) : cljs.core.deref.call(null,G__15980));
} else {
var G__15991 = (i + len);
var G__15992 = init__$2;
i = G__15991;
init__$1 = G__15992;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15981 = coll__$1;
var G__15982 = cljs.core.first_array_for_longvec(coll__$1);
var G__15983 = (0);
var G__15984 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15981,G__15982,G__15983,G__15984) : cljs.core.chunked_seq.call(null,G__15981,G__15982,G__15983,G__15984));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4751__auto___15993 = len;
var i_15994 = (0);
while(true){
if((i_15994 < n__4751__auto___15993)){
(new_tail[i_15994] = (self__.tail[i_15994]));

var G__15995 = (i_15994 + (1));
i_15994 = G__15995;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15996 = null;
var G__15996__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15996__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15996 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15996__2.call(this,self__,k);
case 3:
return G__15996__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15996.cljs$core$IFn$_invoke$arity$2 = G__15996__2;
G__15996.cljs$core$IFn$_invoke$arity$3 = G__15996__3;
return G__15996;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15971){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15971)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15997 = (i + (1));
var G__15998 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15997;
out = G__15998;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15999__i = 0, G__15999__a = new Array(arguments.length -  0);
while (G__15999__i < G__15999__a.length) {G__15999__a[G__15999__i] = arguments[G__15999__i + 0]; ++G__15999__i;}
  args = new cljs.core.IndexedSeq(G__15999__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__16000){
var args = cljs.core.seq(arglist__16000);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16001 = self__.vec;
var G__16002 = self__.node;
var G__16003 = self__.i;
var G__16004 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16001,G__16002,G__16003,G__16004) : cljs.core.chunked_seq.call(null,G__16001,G__16002,G__16003,G__16004));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__16005 = self__.vec;
var G__16006 = (self__.i + self__.off);
var G__16007 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16005,G__16006,G__16007) : cljs.core.subvec.call(null,G__16005,G__16006,G__16007));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__16008 = self__.vec;
var G__16009 = (self__.i + self__.off);
var G__16010 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16008,G__16009,G__16010) : cljs.core.subvec.call(null,G__16008,G__16009,G__16010));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16011 = self__.vec;
var G__16012 = self__.node;
var G__16013 = self__.i;
var G__16014 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16011,G__16012,G__16013,G__16014) : cljs.core.chunked_seq.call(null,G__16011,G__16012,G__16013,G__16014));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16015 = self__.vec;
var G__16016 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16017 = end;
var G__16018 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16015,G__16016,G__16017,G__16018) : cljs.core.chunked_seq.call(null,G__16015,G__16016,G__16017,G__16018));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__16019 = self__.vec;
var G__16020 = self__.node;
var G__16021 = self__.i;
var G__16022 = self__.off;
var G__16023 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16019,G__16020,G__16021,G__16022,G__16023) : cljs.core.chunked_seq.call(null,G__16019,G__16020,G__16021,G__16022,G__16023));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16024 = self__.vec;
var G__16025 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16026 = end;
var G__16027 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16024,G__16025,G__16026,G__16027) : cljs.core.chunked_seq.call(null,G__16024,G__16025,G__16026,G__16027));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__16029 = self__.meta;
var G__16030 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__16031 = self__.start;
var G__16032 = (function (){var x__4181__auto__ = self__.end;
var y__4182__auto__ = (v_pos + (1));
return ((x__4181__auto__ > y__4182__auto__) ? x__4181__auto__ : y__4182__auto__);
})();
var G__16033 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16029,G__16030,G__16031,G__16032,G__16033) : cljs.core.build_subvec.call(null,G__16029,G__16030,G__16031,G__16032,G__16033));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__16034 = self__.meta;
var G__16035 = self__.v;
var G__16036 = self__.start;
var G__16037 = (self__.end - (1));
var G__16038 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16034,G__16035,G__16036,G__16037,G__16038) : cljs.core.build_subvec.call(null,G__16034,G__16035,G__16036,G__16037,G__16038));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__16040 = meta__$1;
var G__16041 = self__.v;
var G__16042 = self__.start;
var G__16043 = self__.end;
var G__16044 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16040,G__16041,G__16042,G__16043,G__16044) : cljs.core.build_subvec.call(null,G__16040,G__16041,G__16042,G__16043,G__16044));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__16045 = self__.meta;
var G__16046 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__16047 = self__.start;
var G__16048 = (self__.end + (1));
var G__16049 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16045,G__16046,G__16047,G__16048,G__16049) : cljs.core.build_subvec.call(null,G__16045,G__16046,G__16047,G__16048,G__16049));
});

cljs.core.Subvec.prototype.call = (function() {
var G__16050 = null;
var G__16050__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16050__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16050 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16050__2.call(this,self__,k);
case 3:
return G__16050__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16050.cljs$core$IFn$_invoke$arity$2 = G__16050__2;
G__16050.cljs$core$IFn$_invoke$arity$3 = G__16050__3;
return G__16050;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args16028){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16028)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__16051 = meta;
var G__16052 = v.v;
var G__16053 = (v.start + start);
var G__16054 = (v.start + end);
var G__16055 = __hash;
meta = G__16051;
v = G__16052;
start = G__16053;
end = G__16054;
__hash = G__16055;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj16062 = {};
return obj16062;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__16070 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__16071 = (level - (5));
node = G__16070;
level = G__16071;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__16075 = null;
var G__16075__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16075__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16075 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16075__2.call(this,self__,k);
case 3:
return G__16075__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16075.cljs$core$IFn$_invoke$arity$2 = G__16075__2;
G__16075.cljs$core$IFn$_invoke$arity$3 = G__16075__3;
return G__16075;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args16072){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16072)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3864__auto__ = self__.front;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3864__auto__ = self__.rear;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__16076 = (i + incr);
i = G__16076;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__16077 = (i + (1));
var G__16078 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__16077;
out = G__16078;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj16082 = {};
return obj16082;
})();
var l = ks.length;
var i_16083 = (0);
while(true){
if((i_16083 < l)){
var k_16084 = (ks[i_16083]);
(new_obj[k_16084] = (obj[k_16084]));

var G__16085 = (i_16083 + (1));
i_16083 = G__16085;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3852__auto__ = (function (){var G__16089 = k;
return goog.isString(G__16089);
})();
if(cljs.core.truth_(and__3852__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3852__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__16090 = init__$1;
var G__16091 = k;
var G__16092 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16090,G__16091,G__16092) : f.call(null,G__16090,G__16091,G__16092));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16093 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16093) : cljs.core.deref.call(null,G__16093));
} else {
var G__16099 = cljs.core.rest(keys__$1);
var G__16100 = init__$2;
keys__$1 = G__16099;
init__$1 = G__16100;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3852__auto__ = (function (){var G__16095 = k;
return goog.isString(G__16095);
})();
if(cljs.core.truth_(and__3852__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3852__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__16096 = k;
return goog.isString(G__16096);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3852__auto__ = (function (){var G__16098 = k;
return goog.isString(G__16098);
})();
if(cljs.core.truth_(and__3852__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3852__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__16086_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__16086_SHARP_,(self__.strobj[p1__16086_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__16101 = null;
var G__16101__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16101__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16101 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16101__2.call(this,self__,k);
case 3:
return G__16101__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16101.cljs$core$IFn$_invoke$arity$2 = G__16101__2;
G__16101.cljs$core$IFn$_invoke$arity$3 = G__16101__3;
return G__16101;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args16087){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16087)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj16103 = {};
return obj16103;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__16104 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16104,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16104,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__16105 = (i + (2));
i = G__16105;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__16106 = (i + (2));
i = G__16106;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__16107 = (i + (2));
i = G__16107;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__16108 = (i + (2));
i = G__16108;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__16109 = (i + (2));
i = G__16109;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3864__auto__ = (function (){var G__16113 = k;
return goog.isString(G__16113);
})();
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_16114 = (0);
while(true){
if((i_16114 < l)){
(narr[i_16114] = (arr[i_16114]));

var G__16115 = (i_16114 + (1));
i_16114 = G__16115;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16117 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16117) : cljs.core.keys.call(null,G__16117));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16118 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16118) : cljs.core.vals.call(null,G__16118));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16119 = cljs.core.seq(coll);
var chunk__16120 = null;
var count__16121 = (0);
var i__16122 = (0);
while(true){
if((i__16122 < count__16121)){
var vec__16123 = chunk__16120.cljs$core$IIndexed$_nth$arity$2(null,i__16122);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16123,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16123,(1),null);
var G__16124_16137 = v;
var G__16125_16138 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16124_16137,G__16125_16138) : f.call(null,G__16124_16137,G__16125_16138));

var G__16139 = seq__16119;
var G__16140 = chunk__16120;
var G__16141 = count__16121;
var G__16142 = (i__16122 + (1));
seq__16119 = G__16139;
chunk__16120 = G__16140;
count__16121 = G__16141;
i__16122 = G__16142;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16119);
if(temp__4126__auto__){
var seq__16119__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16119__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16119__$1);
var G__16143 = cljs.core.chunk_rest(seq__16119__$1);
var G__16144 = c__4651__auto__;
var G__16145 = cljs.core.count(c__4651__auto__);
var G__16146 = (0);
seq__16119 = G__16143;
chunk__16120 = G__16144;
count__16121 = G__16145;
i__16122 = G__16146;
continue;
} else {
var vec__16126 = cljs.core.first(seq__16119__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16126,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16126,(1),null);
var G__16127_16147 = v;
var G__16128_16148 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16127_16147,G__16128_16148) : f.call(null,G__16127_16147,G__16128_16148));

var G__16149 = cljs.core.next(seq__16119__$1);
var G__16150 = null;
var G__16151 = (0);
var G__16152 = (0);
seq__16119 = G__16149;
chunk__16120 = G__16150;
count__16121 = G__16151;
i__16122 = G__16152;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__16129 = init__$1;
var G__16130 = (self__.arr[i]);
var G__16131 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16129,G__16130,G__16131) : f.call(null,G__16129,G__16130,G__16131));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16132 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16132) : cljs.core.deref.call(null,G__16132));
} else {
var G__16153 = (i + (2));
var G__16154 = init__$2;
i = G__16153;
init__$1 = G__16154;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__16133 = other;
if(G__16133){
var bit__4538__auto__ = (G__16133.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4538__auto__) || (G__16133.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__16155 = (i + (2));
i = G__16155;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj16135 = {};
return obj16135;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__16156 = (s + (2));
var G__16157 = d;
s = G__16156;
d = G__16157;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__16158 = (s + (2));
var G__16159 = (d + (2));
s = G__16158;
d = G__16159;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__16136 = cljs.core.aclone(self__.arr);
(G__16136[(idx + (1))] = v);

return G__16136;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16160 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16161 = cljs.core.next(es);
ret = G__16160;
es = G__16161;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__16162 = null;
var G__16162__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16162__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16162 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16162__2.call(this,self__,k);
case 3:
return G__16162__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16162.cljs$core$IFn$_invoke$arity$2 = G__16162__2;
G__16162.cljs$core$IFn$_invoke$arity$3 = G__16162__3;
return G__16162;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args16116){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16116)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16163 = (i + (2));
var G__16164 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16163;
ret = G__16164;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__16165_16173 = self__.arr;
G__16165_16173.pop();

G__16165_16173.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__16166 = self__.len;
var G__16167 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16166,G__16167) : cljs.core.array__GT_transient_hash_map.call(null,G__16166,G__16167));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__16168 = o;
if(G__16168){
var bit__4545__auto__ = (G__16168.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4545__auto__) || (G__16168.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16168.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16168);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16168);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__16169 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16169) : cljs.core.key.call(null,G__16169));
})(),(function (){var G__16170 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16170) : cljs.core.val.call(null,G__16170));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16174 = cljs.core.next(es);
var G__16175 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__16171 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16171) : cljs.core.key.call(null,G__16171));
})(),(function (){var G__16172 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16172) : cljs.core.val.call(null,G__16172));
})());
es = G__16174;
tcoll__$2 = G__16175;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__16176 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__16177 = (i + (2));
out = G__16176;
i = G__16177;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__16180 = cljs.core.aclone(arr);
(G__16180[i] = a);

return G__16180;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__16181 = cljs.core.aclone(arr);
(G__16181[i] = a);

(G__16181[j] = b);

return G__16181;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__16186 = init__$1;
var G__16187 = k;
var G__16188 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16186,G__16187,G__16188) : f.call(null,G__16186,G__16187,G__16188));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16189 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16189) : cljs.core.deref.call(null,G__16189));
} else {
var G__16190 = (i + (2));
var G__16191 = init__$2;
i = G__16190;
init__$1 = G__16191;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16192 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16192) : cljs.core.create_inode_seq.call(null,G__16192));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16206 = (0);
var j_16207 = (0);
while(true){
if((i_16206 < (32))){
if((((self__.bitmap >>> i_16206) & (1)) === (0))){
var G__16208 = (i_16206 + (1));
var G__16209 = j_16207;
i_16206 = G__16208;
j_16207 = G__16209;
continue;
} else {
(nodes[i_16206] = ((!(((self__.arr[j_16207]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_16207])),(self__.arr[j_16207]),(self__.arr[(j_16207 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16207 + (1))])));

var G__16210 = (i_16206 + (1));
var G__16211 = (j_16207 + (2));
i_16206 = G__16210;
j_16207 = G__16211;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16193 = edit__$1;
var G__16194 = (shift + (5));
var G__16195 = key_or_nil;
var G__16196 = val_or_node;
var G__16197 = hash;
var G__16198 = key;
var G__16199 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199) : cljs.core.create_node.call(null,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16212 = (0);
var j_16213 = (0);
while(true){
if((i_16212 < (32))){
if((((self__.bitmap >>> i_16212) & (1)) === (0))){
var G__16214 = (i_16212 + (1));
var G__16215 = j_16213;
i_16212 = G__16214;
j_16213 = G__16215;
continue;
} else {
(nodes[i_16212] = ((!(((self__.arr[j_16213]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_16213])),(self__.arr[j_16213]),(self__.arr[(j_16213 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16213 + (1))])));

var G__16216 = (i_16212 + (1));
var G__16217 = (j_16213 + (2));
i_16212 = G__16216;
j_16213 = G__16217;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16200 = (shift + (5));
var G__16201 = key_or_nil;
var G__16202 = val_or_node;
var G__16203 = hash;
var G__16204 = key;
var G__16205 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16200,G__16201,G__16202,G__16203,G__16204,G__16205) : cljs.core.create_node.call(null,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__16218 = (i + (1));
var G__16219 = (j + (2));
var G__16220 = (bitmap | ((1) << i));
i = G__16218;
j = G__16219;
bitmap = G__16220;
continue;
} else {
var G__16221 = (i + (1));
var G__16222 = j;
var G__16223 = bitmap;
i = G__16221;
j = G__16222;
bitmap = G__16223;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16224 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16224) : cljs.core.create_array_node_seq.call(null,G__16224));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16225 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16225) : cljs.core.deref.call(null,G__16225));
} else {
var G__16226 = (i + (1));
var G__16227 = init__$2;
i = G__16226;
init__$1 = G__16227;
continue;
}
} else {
var G__16228 = (i + (1));
var G__16229 = init__$1;
i = G__16228;
init__$1 = G__16229;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__16230 = (i + (2));
i = G__16230;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16231 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16231) : cljs.core.create_inode_seq.call(null,G__16231));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__16232 = self__.nodes;
var G__16233 = (self__.i + (2));
var G__16234 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16232,G__16233,G__16234) : cljs.core.create_inode_seq.call(null,G__16232,G__16233,G__16234));
} else {
var G__16235 = self__.nodes;
var G__16236 = self__.i;
var G__16237 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16235,G__16236,G__16237) : cljs.core.create_inode_seq.call(null,G__16235,G__16236,G__16237));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__16241 = (j + (2));
j = G__16241;
continue;
}
} else {
var G__16242 = (j + (2));
j = G__16242;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__16243 = null;
var G__16244 = self__.nodes;
var G__16245 = self__.i;
var G__16246 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16243,G__16244,G__16245,G__16246) : cljs.core.create_array_node_seq.call(null,G__16243,G__16244,G__16245,G__16246));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__16251 = (j + (1));
j = G__16251;
continue;
}
} else {
var G__16252 = (j + (1));
j = G__16252;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16254 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16254) : cljs.core.keys.call(null,G__16254));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16255 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16255) : cljs.core.vals.call(null,G__16255));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16256 = cljs.core.seq(coll);
var chunk__16257 = null;
var count__16258 = (0);
var i__16259 = (0);
while(true){
if((i__16259 < count__16258)){
var vec__16260 = chunk__16257.cljs$core$IIndexed$_nth$arity$2(null,i__16259);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16260,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16260,(1),null);
var G__16261_16272 = v;
var G__16262_16273 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16261_16272,G__16262_16273) : f.call(null,G__16261_16272,G__16262_16273));

var G__16274 = seq__16256;
var G__16275 = chunk__16257;
var G__16276 = count__16258;
var G__16277 = (i__16259 + (1));
seq__16256 = G__16274;
chunk__16257 = G__16275;
count__16258 = G__16276;
i__16259 = G__16277;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16256);
if(temp__4126__auto__){
var seq__16256__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16256__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16256__$1);
var G__16278 = cljs.core.chunk_rest(seq__16256__$1);
var G__16279 = c__4651__auto__;
var G__16280 = cljs.core.count(c__4651__auto__);
var G__16281 = (0);
seq__16256 = G__16278;
chunk__16257 = G__16279;
count__16258 = G__16280;
i__16259 = G__16281;
continue;
} else {
var vec__16263 = cljs.core.first(seq__16256__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16263,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16263,(1),null);
var G__16264_16282 = v;
var G__16265_16283 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16264_16282,G__16265_16283) : f.call(null,G__16264_16282,G__16265_16283));

var G__16284 = cljs.core.next(seq__16256__$1);
var G__16285 = null;
var G__16286 = (0);
var G__16287 = (0);
seq__16256 = G__16284;
chunk__16257 = G__16285;
count__16258 = G__16286;
i__16259 = G__16287;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__16266 = init;
var G__16267 = null;
var G__16268 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16266,G__16267,G__16268) : f.call(null,G__16266,G__16267,G__16268));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16269 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16269) : cljs.core.deref.call(null,G__16269));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj16271 = {};
return obj16271;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16288 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16289 = cljs.core.next(es);
ret = G__16288;
es = G__16289;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__16290 = null;
var G__16290__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16290__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16290 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16290__2.call(this,self__,k);
case 3:
return G__16290__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16290.cljs$core$IFn$_invoke$arity$2 = G__16290__2;
G__16290.cljs$core$IFn$_invoke$arity$3 = G__16290__3;
return G__16290;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args16253){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16253)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16291 = (i + (2));
var G__16292 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16291;
ret = G__16292;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16293 = (i + (1));
var G__16294 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__16293;
out = G__16294;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__16295 = o;
if(G__16295){
var bit__4545__auto__ = (G__16295.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4545__auto__) || (G__16295.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16295.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16295);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16295);
}
})()){
return tcoll.assoc_BANG_((function (){var G__16296 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16296) : cljs.core.key.call(null,G__16296));
})(),(function (){var G__16297 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16297) : cljs.core.val.call(null,G__16297));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16300 = cljs.core.next(es);
var G__16301 = tcoll__$1.assoc_BANG_((function (){var G__16298 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16298) : cljs.core.key.call(null,G__16298));
})(),(function (){var G__16299 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16299) : cljs.core.val.call(null,G__16299));
})());
es = G__16300;
tcoll__$1 = G__16301;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__16302 = ((ascending_QMARK_)?t.left:t.right);
var G__16303 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__16302;
stack__$1 = G__16303;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16316 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16316) : cljs.core.deref.call(null,G__16316));
} else {
var init__$2 = (function (){var G__16317 = init__$1;
var G__16318 = node.key;
var G__16319 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16317,G__16318,G__16319) : f.call(null,G__16317,G__16318,G__16319));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16320 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16320) : cljs.core.deref.call(null,G__16320));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__16321 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16321) : cljs.core.deref.call(null,G__16321));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__16323 = null;
var G__16323__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16323__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16323 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16323__2.call(this,self__,k);
case 3:
return G__16323__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16323.cljs$core$IFn$_invoke$arity$2 = G__16323__2;
G__16323.cljs$core$IFn$_invoke$arity$3 = G__16323__3;
return G__16323;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args16322){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16322)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__16325 = null;
var G__16325__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16325__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16325 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16325__2.call(this,self__,k);
case 3:
return G__16325__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16325.cljs$core$IFn$_invoke$arity$2 = G__16325__2;
G__16325.cljs$core$IFn$_invoke$arity$3 = G__16325__3;
return G__16325;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args16324){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16324)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__16338 = k;
var G__16339 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16338,G__16339) : comp.call(null,G__16338,G__16339));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__16358 = k;
var G__16359 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16358,G__16359) : comp.call(null,G__16358,G__16359));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__16370 = k;
var G__16371 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16370,G__16371) : comp.call(null,G__16370,G__16371));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16373 = cljs.core.seq(coll);
var chunk__16374 = null;
var count__16375 = (0);
var i__16376 = (0);
while(true){
if((i__16376 < count__16375)){
var vec__16377 = chunk__16374.cljs$core$IIndexed$_nth$arity$2(null,i__16376);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16377,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16377,(1),null);
var G__16378_16390 = v;
var G__16379_16391 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16378_16390,G__16379_16391) : f.call(null,G__16378_16390,G__16379_16391));

var G__16392 = seq__16373;
var G__16393 = chunk__16374;
var G__16394 = count__16375;
var G__16395 = (i__16376 + (1));
seq__16373 = G__16392;
chunk__16374 = G__16393;
count__16375 = G__16394;
i__16376 = G__16395;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16373);
if(temp__4126__auto__){
var seq__16373__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16373__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16373__$1);
var G__16396 = cljs.core.chunk_rest(seq__16373__$1);
var G__16397 = c__4651__auto__;
var G__16398 = cljs.core.count(c__4651__auto__);
var G__16399 = (0);
seq__16373 = G__16396;
chunk__16374 = G__16397;
count__16375 = G__16398;
i__16376 = G__16399;
continue;
} else {
var vec__16380 = cljs.core.first(seq__16373__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16380,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16380,(1),null);
var G__16381_16400 = v;
var G__16382_16401 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16381_16400,G__16382_16401) : f.call(null,G__16381_16400,G__16382_16401));

var G__16402 = cljs.core.next(seq__16373__$1);
var G__16403 = null;
var G__16404 = (0);
var G__16405 = (0);
seq__16373 = G__16402;
chunk__16374 = G__16403;
count__16375 = G__16404;
i__16376 = G__16405;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16383 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16383) : cljs.core.keys.call(null,G__16383));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16384 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16384) : cljs.core.vals.call(null,G__16384));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16385 = k;
var G__16386 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16385,G__16386) : self__.comp.call(null,G__16385,G__16386));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__16406 = t.left;
t = G__16406;
continue;
} else {
var G__16407 = t.right;
t = G__16407;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16408 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16409 = cljs.core.next(es);
ret = G__16408;
es = G__16409;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__16410 = null;
var G__16410__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16410__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16410 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16410__2.call(this,self__,k);
case 3:
return G__16410__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16410.cljs$core$IFn$_invoke$arity$2 = G__16410__2;
G__16410.cljs$core$IFn$_invoke$arity$3 = G__16410__3;
return G__16410;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args16372){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16372)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16387 = k;
var G__16388 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16387,G__16388) : self__.comp.call(null,G__16387,G__16388));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__16411 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16412 = t.left;
stack = G__16411;
t = G__16412;
continue;
} else {
var G__16413 = stack;
var G__16414 = t.right;
stack = G__16413;
t = G__16414;
continue;
}
} else {
if((c > (0))){
var G__16415 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16416 = t.right;
stack = G__16415;
t = G__16416;
continue;
} else {
var G__16417 = stack;
var G__16418 = t.left;
stack = G__16417;
t = G__16418;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__16389 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16389) : cljs.core.key.call(null,G__16389));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__16419 = cljs.core.nnext(in$);
var G__16420 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16419;
out = G__16420;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16421__i = 0, G__16421__a = new Array(arguments.length -  0);
while (G__16421__i < G__16421__a.length) {G__16421__a[G__16421__i] = arguments[G__16421__i + 0]; ++G__16421__i;}
  keyvals = new cljs.core.IndexedSeq(G__16421__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__16422){
var keyvals = cljs.core.seq(arglist__16422);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16423__i = 0, G__16423__a = new Array(arguments.length -  0);
while (G__16423__i < G__16423__a.length) {G__16423__a[G__16423__i] = arguments[G__16423__i + 0]; ++G__16423__i;}
  keyvals = new cljs.core.IndexedSeq(G__16423__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__16424){
var keyvals = cljs.core.seq(arglist__16424);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj16428 = {};
return obj16428;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__16429 = cljs.core.nnext(kvs);
kvs = G__16429;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16430__i = 0, G__16430__a = new Array(arguments.length -  0);
while (G__16430__i < G__16430__a.length) {G__16430__a[G__16430__i] = arguments[G__16430__i + 0]; ++G__16430__i;}
  keyvals = new cljs.core.IndexedSeq(G__16430__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__16431){
var keyvals = cljs.core.seq(arglist__16431);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__16432 = cljs.core.nnext(in$);
var G__16433 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16432;
out = G__16433;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16434__i = 0, G__16434__a = new Array(arguments.length -  0);
while (G__16434__i < G__16434__a.length) {G__16434__a[G__16434__i] = arguments[G__16434__i + 0]; ++G__16434__i;}
  keyvals = new cljs.core.IndexedSeq(G__16434__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__16435){
var keyvals = cljs.core.seq(arglist__16435);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__16436 = cljs.core.nnext(in$);
var G__16437 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16436;
out = G__16437;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__16438__i = 0, G__16438__a = new Array(arguments.length -  1);
while (G__16438__i < G__16438__a.length) {G__16438__a[G__16438__i] = arguments[G__16438__i + 1]; ++G__16438__i;}
  keyvals = new cljs.core.IndexedSeq(G__16438__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__16439){
var comparator = cljs.core.first(arglist__16439);
var keyvals = cljs.core.rest(arglist__16439);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16440 = self__.mseq;
if(G__16440){
var bit__4545__auto__ = (G__16440.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4545__auto__) || (G__16440.cljs$core$INext$)){
return true;
} else {
if((!G__16440.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16440);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16440);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16441 = self__.mseq;
if(G__16441){
var bit__4545__auto__ = (G__16441.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4545__auto__) || (G__16441.cljs$core$INext$)){
return true;
} else {
if((!G__16441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16441);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16442 = self__.mseq;
if(G__16442){
var bit__4545__auto__ = (G__16442.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4545__auto__) || (G__16442.cljs$core$INext$)){
return true;
} else {
if((!G__16442.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16442);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16443 = self__.mseq;
if(G__16443){
var bit__4545__auto__ = (G__16443.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4545__auto__) || (G__16443.cljs$core$INext$)){
return true;
} else {
if((!G__16443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16443);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16444_SHARP_,p2__16445_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3864__auto__ = p1__16444_SHARP_;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__16445_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__16446__i = 0, G__16446__a = new Array(arguments.length -  0);
while (G__16446__i < G__16446__a.length) {G__16446__a[G__16446__i] = arguments[G__16446__i + 0]; ++G__16446__i;}
  maps = new cljs.core.IndexedSeq(G__16446__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__16447){
var maps = cljs.core.seq(arglist__16447);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16450 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16451 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16450,G__16451) : f.call(null,G__16450,G__16451));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3864__auto__ = m1;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__16452__i = 0, G__16452__a = new Array(arguments.length -  1);
while (G__16452__i < G__16452__a.length) {G__16452__a[G__16452__i] = arguments[G__16452__i + 1]; ++G__16452__i;}
  maps = new cljs.core.IndexedSeq(G__16452__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__16453){
var f = cljs.core.first(arglist__16453);
var maps = cljs.core.rest(arglist__16453);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__16454 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__16455 = cljs.core.next(keys);
ret = G__16454;
keys = G__16455;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16458 = cljs.core.seq(coll);
var chunk__16459 = null;
var count__16460 = (0);
var i__16461 = (0);
while(true){
if((i__16461 < count__16460)){
var vec__16462 = chunk__16459.cljs$core$IIndexed$_nth$arity$2(null,i__16461);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16462,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16462,(1),null);
var G__16463_16468 = v;
var G__16464_16469 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16463_16468,G__16464_16469) : f.call(null,G__16463_16468,G__16464_16469));

var G__16470 = seq__16458;
var G__16471 = chunk__16459;
var G__16472 = count__16460;
var G__16473 = (i__16461 + (1));
seq__16458 = G__16470;
chunk__16459 = G__16471;
count__16460 = G__16472;
i__16461 = G__16473;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16458);
if(temp__4126__auto__){
var seq__16458__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16458__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16458__$1);
var G__16474 = cljs.core.chunk_rest(seq__16458__$1);
var G__16475 = c__4651__auto__;
var G__16476 = cljs.core.count(c__4651__auto__);
var G__16477 = (0);
seq__16458 = G__16474;
chunk__16459 = G__16475;
count__16460 = G__16476;
i__16461 = G__16477;
continue;
} else {
var vec__16465 = cljs.core.first(seq__16458__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16465,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16465,(1),null);
var G__16466_16478 = v;
var G__16467_16479 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16466_16478,G__16467_16479) : f.call(null,G__16466_16478,G__16467_16479));

var G__16480 = cljs.core.next(seq__16458__$1);
var G__16481 = null;
var G__16482 = (0);
var G__16483 = (0);
seq__16458 = G__16480;
chunk__16459 = G__16481;
count__16460 = G__16482;
i__16461 = G__16483;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16456_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16456_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__16484 = null;
var G__16484__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16484__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16484 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16484__2.call(this,self__,k);
case 3:
return G__16484__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16484.cljs$core$IFn$_invoke$arity$2 = G__16484__2;
G__16484.cljs$core$IFn$_invoke$arity$3 = G__16484__3;
return G__16484;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args16457){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16457)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16485 = (i + (1));
var G__16486 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__16485;
out = G__16486;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__16487 = (i + (1));
var G__16488 = cljs.core._conj_BANG_(out,(items[i]));
i = G__16487;
out = G__16488;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__16490 = null;
var G__16490__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__16490__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__16490 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16490__2.call(this,self__,k);
case 3:
return G__16490__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16490.cljs$core$IFn$_invoke$arity$2 = G__16490__2;
G__16490.cljs$core$IFn$_invoke$arity$3 = G__16490__3;
return G__16490;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args16489){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16489)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16493 = cljs.core.seq(coll);
var chunk__16494 = null;
var count__16495 = (0);
var i__16496 = (0);
while(true){
if((i__16496 < count__16495)){
var vec__16497 = chunk__16494.cljs$core$IIndexed$_nth$arity$2(null,i__16496);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16497,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16497,(1),null);
var G__16498_16503 = v;
var G__16499_16504 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16498_16503,G__16499_16504) : f.call(null,G__16498_16503,G__16499_16504));

var G__16505 = seq__16493;
var G__16506 = chunk__16494;
var G__16507 = count__16495;
var G__16508 = (i__16496 + (1));
seq__16493 = G__16505;
chunk__16494 = G__16506;
count__16495 = G__16507;
i__16496 = G__16508;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16493);
if(temp__4126__auto__){
var seq__16493__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16493__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16493__$1);
var G__16509 = cljs.core.chunk_rest(seq__16493__$1);
var G__16510 = c__4651__auto__;
var G__16511 = cljs.core.count(c__4651__auto__);
var G__16512 = (0);
seq__16493 = G__16509;
chunk__16494 = G__16510;
count__16495 = G__16511;
i__16496 = G__16512;
continue;
} else {
var vec__16500 = cljs.core.first(seq__16493__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16500,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16500,(1),null);
var G__16501_16513 = v;
var G__16502_16514 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16501_16513,G__16502_16514) : f.call(null,G__16501_16513,G__16502_16514));

var G__16515 = cljs.core.next(seq__16493__$1);
var G__16516 = null;
var G__16517 = (0);
var G__16518 = (0);
seq__16493 = G__16515;
chunk__16494 = G__16516;
count__16495 = G__16517;
i__16496 = G__16518;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16491_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16491_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__16519 = null;
var G__16519__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16519__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16519 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16519__2.call(this,self__,k);
case 3:
return G__16519__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16519.cljs$core$IFn$_invoke$arity$2 = G__16519__2;
G__16519.cljs$core$IFn$_invoke$arity$3 = G__16519__3;
return G__16519;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args16492){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16492)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4745__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4745__auto__.length)){
var G__16520 = (i + (1));
var G__16521 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__16520;
res = G__16521;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__16522 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__16523 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__16522;
out = G__16523;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__16524__delegate = function (keys){
return cljs.core.set(keys);
};
var G__16524 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16525__i = 0, G__16525__a = new Array(arguments.length -  0);
while (G__16525__i < G__16525__a.length) {G__16525__a[G__16525__i] = arguments[G__16525__i + 0]; ++G__16525__i;}
  keys = new cljs.core.IndexedSeq(G__16525__a,0);
} 
return G__16524__delegate.call(this,keys);};
G__16524.cljs$lang$maxFixedArity = 0;
G__16524.cljs$lang$applyTo = (function (arglist__16526){
var keys = cljs.core.seq(arglist__16526);
return G__16524__delegate(keys);
});
G__16524.cljs$core$IFn$_invoke$arity$variadic = G__16524__delegate;
return G__16524;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__16527 = null;
if (arguments.length > 0) {
var G__16528__i = 0, G__16528__a = new Array(arguments.length -  0);
while (G__16528__i < G__16528__a.length) {G__16528__a[G__16528__i] = arguments[G__16528__i + 0]; ++G__16528__i;}
G__16527 = new cljs.core.IndexedSeq(G__16528__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16529__i = 0, G__16529__a = new Array(arguments.length -  0);
while (G__16529__i < G__16529__a.length) {G__16529__a[G__16529__i] = arguments[G__16529__i + 0]; ++G__16529__i;}
  keys = new cljs.core.IndexedSeq(G__16529__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__16530){
var keys = cljs.core.seq(arglist__16530);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__16531__i = 0, G__16531__a = new Array(arguments.length -  1);
while (G__16531__i < G__16531__a.length) {G__16531__a[G__16531__i] = arguments[G__16531__i + 1]; ++G__16531__i;}
  keys = new cljs.core.IndexedSeq(G__16531__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__16532){
var comparator = cljs.core.first(arglist__16532);
var keys = cljs.core.rest(arglist__16532);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16533_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16533_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__16533_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16534_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16534_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__16534_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__16555 = null;
var G__16555__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16555__1 = (function (result){
var G__16545 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16545) : rf.call(null,G__16545));
});
var G__16555__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__16546 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16546) : cljs.core.deref.call(null,G__16546));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__16547 = result;
var G__16548 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16547,G__16548) : rf.call(null,G__16547,G__16548));
}
});
G__16555 = function(result,input){
switch(arguments.length){
case 0:
return G__16555__0.call(this);
case 1:
return G__16555__1.call(this,result);
case 2:
return G__16555__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16555.cljs$core$IFn$_invoke$arity$0 = G__16555__0;
G__16555.cljs$core$IFn$_invoke$arity$1 = G__16555__1;
G__16555.cljs$core$IFn$_invoke$arity$2 = G__16555__2;
return G__16555;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__16553,seen__$1){
while(true){
var vec__16554 = p__16553;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16554,(0),null);
var xs__$1 = vec__16554;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__16556 = cljs.core.rest(s);
var G__16557 = seen__$1;
p__16553 = G__16556;
seen__$1 = G__16557;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__16558 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__16559 = cljs.core.next(s__$1);
ret = G__16558;
s__$1 = G__16559;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__16561 = x;
if(G__16561){
var bit__4538__auto__ = (G__16561.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4538__auto__) || (G__16561.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__16562 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__16563 = cljs.core.next(ks);
var G__16564 = cljs.core.next(vs);
map = G__16562;
ks = G__16563;
vs = G__16564;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__16575 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16575) : k.call(null,G__16575));
})() > (function (){var G__16576 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16576) : k.call(null,G__16576));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__16577__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16565_SHARP_,p2__16566_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16565_SHARP_,p2__16566_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16577 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16578__i = 0, G__16578__a = new Array(arguments.length -  3);
while (G__16578__i < G__16578__a.length) {G__16578__a[G__16578__i] = arguments[G__16578__i + 3]; ++G__16578__i;}
  more = new cljs.core.IndexedSeq(G__16578__a,0);
} 
return G__16577__delegate.call(this,k,x,y,more);};
G__16577.cljs$lang$maxFixedArity = 3;
G__16577.cljs$lang$applyTo = (function (arglist__16579){
var k = cljs.core.first(arglist__16579);
arglist__16579 = cljs.core.next(arglist__16579);
var x = cljs.core.first(arglist__16579);
arglist__16579 = cljs.core.next(arglist__16579);
var y = cljs.core.first(arglist__16579);
var more = cljs.core.rest(arglist__16579);
return G__16577__delegate(k,x,y,more);
});
G__16577.cljs$core$IFn$_invoke$arity$variadic = G__16577__delegate;
return G__16577;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__16580 = null;
if (arguments.length > 3) {
var G__16581__i = 0, G__16581__a = new Array(arguments.length -  3);
while (G__16581__i < G__16581__a.length) {G__16581__a[G__16581__i] = arguments[G__16581__i + 3]; ++G__16581__i;}
G__16580 = new cljs.core.IndexedSeq(G__16581__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__16592 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16592) : k.call(null,G__16592));
})() < (function (){var G__16593 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16593) : k.call(null,G__16593));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__16594__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16582_SHARP_,p2__16583_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16582_SHARP_,p2__16583_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16594 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16595__i = 0, G__16595__a = new Array(arguments.length -  3);
while (G__16595__i < G__16595__a.length) {G__16595__a[G__16595__i] = arguments[G__16595__i + 3]; ++G__16595__i;}
  more = new cljs.core.IndexedSeq(G__16595__a,0);
} 
return G__16594__delegate.call(this,k,x,y,more);};
G__16594.cljs$lang$maxFixedArity = 3;
G__16594.cljs$lang$applyTo = (function (arglist__16596){
var k = cljs.core.first(arglist__16596);
arglist__16596 = cljs.core.next(arglist__16596);
var x = cljs.core.first(arglist__16596);
arglist__16596 = cljs.core.next(arglist__16596);
var y = cljs.core.first(arglist__16596);
var more = cljs.core.rest(arglist__16596);
return G__16594__delegate(k,x,y,more);
});
G__16594.cljs$core$IFn$_invoke$arity$variadic = G__16594__delegate;
return G__16594;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__16597 = null;
if (arguments.length > 3) {
var G__16598__i = 0, G__16598__a = new Array(arguments.length -  3);
while (G__16598__i < G__16598__a.length) {G__16598__a[G__16598__i] = arguments[G__16598__i + 3]; ++G__16598__i;}
G__16597 = new cljs.core.IndexedSeq(G__16598__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__16615 = null;
var G__16615__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16615__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16610 = result;
var G__16611 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16610,G__16611) : rf.call(null,G__16610,G__16611));
})());
})());
var G__16612 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16612) : rf.call(null,G__16612));
});
var G__16615__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__16613 = result;
var G__16614 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16613,G__16614) : rf.call(null,G__16613,G__16614));
} else {
return result;
}
});
G__16615 = function(result,input){
switch(arguments.length){
case 0:
return G__16615__0.call(this);
case 1:
return G__16615__1.call(this,result);
case 2:
return G__16615__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16615.cljs$core$IFn$_invoke$arity$0 = G__16615__0;
G__16615.cljs$core$IFn$_invoke$arity$1 = G__16615__1;
G__16615.cljs$core$IFn$_invoke$arity$2 = G__16615__2;
return G__16615;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__16628 = null;
var G__16628__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16628__1 = (function (result){
var G__16623 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16623) : rf.call(null,G__16623));
});
var G__16628__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16624 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16624) : pred.call(null,G__16624));
})())){
var G__16625 = result;
var G__16626 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16625,G__16626) : rf.call(null,G__16625,G__16626));
} else {
return cljs.core.reduced(result);
}
});
G__16628 = function(result,input){
switch(arguments.length){
case 0:
return G__16628__0.call(this);
case 1:
return G__16628__1.call(this,result);
case 2:
return G__16628__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16628.cljs$core$IFn$_invoke$arity$0 = G__16628__0;
G__16628.cljs$core$IFn$_invoke$arity$1 = G__16628__1;
G__16628.cljs$core$IFn$_invoke$arity$2 = G__16628__2;
return G__16628;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__16627 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16627) : pred.call(null,G__16627));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__16633 = (function (){var G__16635 = cljs.core._entry_key(sc,e);
var G__16636 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16635,G__16636) : comp.call(null,G__16635,G__16636));
})();
var G__16634 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16633,G__16634) : test.call(null,G__16633,G__16634));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16640 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16640,(0),null);
var s = vec__16640;
if(cljs.core.truth_((function (){var G__16641 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16641) : include.call(null,G__16641));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16642 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16642,(0),null);
var s = vec__16642;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16646 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16646,(0),null);
var s = vec__16646;
if(cljs.core.truth_((function (){var G__16647 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16647) : include.call(null,G__16647));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16648 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16648,(0),null);
var s = vec__16648;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__16649 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16649) : Math.ceil.call(null,G__16649));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4285__auto__ = self__.__hash;
if(!((h__4285__auto__ == null))){
return h__4285__auto__;
} else {
var h__4285__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4285__auto____$1;

return h__4285__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__16650 = ret;
var G__16651 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16650,G__16651) : f.call(null,G__16650,G__16651));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__16652 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16652) : cljs.core.deref.call(null,G__16652));
} else {
var G__16653 = (i + self__.step);
var G__16654 = ret__$1;
i = G__16653;
ret = G__16654;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__16672 = null;
var G__16672__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16672__1 = (function (result){
var G__16669 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16669) : rf.call(null,G__16669));
});
var G__16672__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__16670 = result;
var G__16671 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16670,G__16671) : rf.call(null,G__16670,G__16671));
} else {
return result;
}
});
G__16672 = function(result,input){
switch(arguments.length){
case 0:
return G__16672__0.call(this);
case 1:
return G__16672__1.call(this,result);
case 2:
return G__16672__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16672.cljs$core$IFn$_invoke$arity$0 = G__16672__0;
G__16672.cljs$core$IFn$_invoke$arity$1 = G__16672__1;
G__16672.cljs$core$IFn$_invoke$arity$2 = G__16672__2;
return G__16672;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__16694 = null;
var G__16694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16694__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16685 = result;
var G__16686 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16685,G__16686) : rf.call(null,G__16685,G__16686));
})());
})());
var G__16687 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16687) : rf.call(null,G__16687));
});
var G__16694__2 = (function (result,input){
var pval = (function (){var G__16688 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16688) : cljs.core.deref.call(null,G__16688));
})();
var val = (function (){var G__16689 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16689) : f.call(null,G__16689));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__16690 = result;
var G__16691 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16690,G__16691) : rf.call(null,G__16690,G__16691));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__16694 = function(result,input){
switch(arguments.length){
case 0:
return G__16694__0.call(this);
case 1:
return G__16694__1.call(this,result);
case 2:
return G__16694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16694.cljs$core$IFn$_invoke$arity$0 = G__16694__0;
G__16694.cljs$core$IFn$_invoke$arity$1 = G__16694__1;
G__16694.cljs$core$IFn$_invoke$arity$2 = G__16694__2;
return G__16694;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__16692 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16692) : f.call(null,G__16692));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__16673_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__16693 = p1__16673_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16693) : f.call(null,G__16693));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16703 = init;
var G__16704 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16703,G__16704) : f.call(null,G__16703,G__16704));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__16799 = null;
var G__16799__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__16799__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16757 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16757) : f.call(null,G__16757));
})()],null));
});
var G__16799__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16758 = x;
var G__16759 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16758,G__16759) : f.call(null,G__16758,G__16759));
})()],null));
});
var G__16799__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16760 = x;
var G__16761 = y;
var G__16762 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16760,G__16761,G__16762) : f.call(null,G__16760,G__16761,G__16762));
})()],null));
});
var G__16799__4 = (function() { 
var G__16800__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__16800 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16801__i = 0, G__16801__a = new Array(arguments.length -  3);
while (G__16801__i < G__16801__a.length) {G__16801__a[G__16801__i] = arguments[G__16801__i + 3]; ++G__16801__i;}
  args = new cljs.core.IndexedSeq(G__16801__a,0);
} 
return G__16800__delegate.call(this,x,y,z,args);};
G__16800.cljs$lang$maxFixedArity = 3;
G__16800.cljs$lang$applyTo = (function (arglist__16802){
var x = cljs.core.first(arglist__16802);
arglist__16802 = cljs.core.next(arglist__16802);
var y = cljs.core.first(arglist__16802);
arglist__16802 = cljs.core.next(arglist__16802);
var z = cljs.core.first(arglist__16802);
var args = cljs.core.rest(arglist__16802);
return G__16800__delegate(x,y,z,args);
});
G__16800.cljs$core$IFn$_invoke$arity$variadic = G__16800__delegate;
return G__16800;
})()
;
G__16799 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16799__0.call(this);
case 1:
return G__16799__1.call(this,x);
case 2:
return G__16799__2.call(this,x,y);
case 3:
return G__16799__3.call(this,x,y,z);
default:
var G__16803 = null;
if (arguments.length > 3) {
var G__16804__i = 0, G__16804__a = new Array(arguments.length -  3);
while (G__16804__i < G__16804__a.length) {G__16804__a[G__16804__i] = arguments[G__16804__i + 3]; ++G__16804__i;}
G__16803 = new cljs.core.IndexedSeq(G__16804__a,0);
}
return G__16799__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16799.cljs$lang$maxFixedArity = 3;
G__16799.cljs$lang$applyTo = G__16799__4.cljs$lang$applyTo;
G__16799.cljs$core$IFn$_invoke$arity$0 = G__16799__0;
G__16799.cljs$core$IFn$_invoke$arity$1 = G__16799__1;
G__16799.cljs$core$IFn$_invoke$arity$2 = G__16799__2;
G__16799.cljs$core$IFn$_invoke$arity$3 = G__16799__3;
G__16799.cljs$core$IFn$_invoke$arity$variadic = G__16799__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16799;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__16805 = null;
var G__16805__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__16805__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16763 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16763) : f.call(null,G__16763));
})(),(function (){var G__16764 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16764) : g.call(null,G__16764));
})()],null));
});
var G__16805__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16765 = x;
var G__16766 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16765,G__16766) : f.call(null,G__16765,G__16766));
})(),(function (){var G__16767 = x;
var G__16768 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16767,G__16768) : g.call(null,G__16767,G__16768));
})()],null));
});
var G__16805__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16769 = x;
var G__16770 = y;
var G__16771 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16769,G__16770,G__16771) : f.call(null,G__16769,G__16770,G__16771));
})(),(function (){var G__16772 = x;
var G__16773 = y;
var G__16774 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16772,G__16773,G__16774) : g.call(null,G__16772,G__16773,G__16774));
})()],null));
});
var G__16805__4 = (function() { 
var G__16806__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__16806 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16807__i = 0, G__16807__a = new Array(arguments.length -  3);
while (G__16807__i < G__16807__a.length) {G__16807__a[G__16807__i] = arguments[G__16807__i + 3]; ++G__16807__i;}
  args = new cljs.core.IndexedSeq(G__16807__a,0);
} 
return G__16806__delegate.call(this,x,y,z,args);};
G__16806.cljs$lang$maxFixedArity = 3;
G__16806.cljs$lang$applyTo = (function (arglist__16808){
var x = cljs.core.first(arglist__16808);
arglist__16808 = cljs.core.next(arglist__16808);
var y = cljs.core.first(arglist__16808);
arglist__16808 = cljs.core.next(arglist__16808);
var z = cljs.core.first(arglist__16808);
var args = cljs.core.rest(arglist__16808);
return G__16806__delegate(x,y,z,args);
});
G__16806.cljs$core$IFn$_invoke$arity$variadic = G__16806__delegate;
return G__16806;
})()
;
G__16805 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16805__0.call(this);
case 1:
return G__16805__1.call(this,x);
case 2:
return G__16805__2.call(this,x,y);
case 3:
return G__16805__3.call(this,x,y,z);
default:
var G__16809 = null;
if (arguments.length > 3) {
var G__16810__i = 0, G__16810__a = new Array(arguments.length -  3);
while (G__16810__i < G__16810__a.length) {G__16810__a[G__16810__i] = arguments[G__16810__i + 3]; ++G__16810__i;}
G__16809 = new cljs.core.IndexedSeq(G__16810__a,0);
}
return G__16805__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16805.cljs$lang$maxFixedArity = 3;
G__16805.cljs$lang$applyTo = G__16805__4.cljs$lang$applyTo;
G__16805.cljs$core$IFn$_invoke$arity$0 = G__16805__0;
G__16805.cljs$core$IFn$_invoke$arity$1 = G__16805__1;
G__16805.cljs$core$IFn$_invoke$arity$2 = G__16805__2;
G__16805.cljs$core$IFn$_invoke$arity$3 = G__16805__3;
G__16805.cljs$core$IFn$_invoke$arity$variadic = G__16805__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16805;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__16811 = null;
var G__16811__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__16811__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16775 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16775) : f.call(null,G__16775));
})(),(function (){var G__16776 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16776) : g.call(null,G__16776));
})(),(function (){var G__16777 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16777) : h.call(null,G__16777));
})()],null));
});
var G__16811__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16778 = x;
var G__16779 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16778,G__16779) : f.call(null,G__16778,G__16779));
})(),(function (){var G__16780 = x;
var G__16781 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16780,G__16781) : g.call(null,G__16780,G__16781));
})(),(function (){var G__16782 = x;
var G__16783 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16782,G__16783) : h.call(null,G__16782,G__16783));
})()],null));
});
var G__16811__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16784 = x;
var G__16785 = y;
var G__16786 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16784,G__16785,G__16786) : f.call(null,G__16784,G__16785,G__16786));
})(),(function (){var G__16787 = x;
var G__16788 = y;
var G__16789 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16787,G__16788,G__16789) : g.call(null,G__16787,G__16788,G__16789));
})(),(function (){var G__16790 = x;
var G__16791 = y;
var G__16792 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16790,G__16791,G__16792) : h.call(null,G__16790,G__16791,G__16792));
})()],null));
});
var G__16811__4 = (function() { 
var G__16812__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__16812 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16813__i = 0, G__16813__a = new Array(arguments.length -  3);
while (G__16813__i < G__16813__a.length) {G__16813__a[G__16813__i] = arguments[G__16813__i + 3]; ++G__16813__i;}
  args = new cljs.core.IndexedSeq(G__16813__a,0);
} 
return G__16812__delegate.call(this,x,y,z,args);};
G__16812.cljs$lang$maxFixedArity = 3;
G__16812.cljs$lang$applyTo = (function (arglist__16814){
var x = cljs.core.first(arglist__16814);
arglist__16814 = cljs.core.next(arglist__16814);
var y = cljs.core.first(arglist__16814);
arglist__16814 = cljs.core.next(arglist__16814);
var z = cljs.core.first(arglist__16814);
var args = cljs.core.rest(arglist__16814);
return G__16812__delegate(x,y,z,args);
});
G__16812.cljs$core$IFn$_invoke$arity$variadic = G__16812__delegate;
return G__16812;
})()
;
G__16811 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16811__0.call(this);
case 1:
return G__16811__1.call(this,x);
case 2:
return G__16811__2.call(this,x,y);
case 3:
return G__16811__3.call(this,x,y,z);
default:
var G__16815 = null;
if (arguments.length > 3) {
var G__16816__i = 0, G__16816__a = new Array(arguments.length -  3);
while (G__16816__i < G__16816__a.length) {G__16816__a[G__16816__i] = arguments[G__16816__i + 3]; ++G__16816__i;}
G__16815 = new cljs.core.IndexedSeq(G__16816__a,0);
}
return G__16811__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16811.cljs$lang$maxFixedArity = 3;
G__16811.cljs$lang$applyTo = G__16811__4.cljs$lang$applyTo;
G__16811.cljs$core$IFn$_invoke$arity$0 = G__16811__0;
G__16811.cljs$core$IFn$_invoke$arity$1 = G__16811__1;
G__16811.cljs$core$IFn$_invoke$arity$2 = G__16811__2;
G__16811.cljs$core$IFn$_invoke$arity$3 = G__16811__3;
G__16811.cljs$core$IFn$_invoke$arity$variadic = G__16811__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16811;
})()
});
var juxt__4 = (function() { 
var G__16817__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__16818 = null;
var G__16818__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16705_SHARP_,p2__16706_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16705_SHARP_,(function (){return (p2__16706_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16706_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16706_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16818__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16707_SHARP_,p2__16708_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16707_SHARP_,(function (){var G__16793 = x;
return (p2__16708_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16708_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16793) : p2__16708_SHARP_.call(null,G__16793));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16818__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16709_SHARP_,p2__16710_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16709_SHARP_,(function (){var G__16794 = x;
var G__16795 = y;
return (p2__16710_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16710_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16794,G__16795) : p2__16710_SHARP_.call(null,G__16794,G__16795));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16818__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16711_SHARP_,p2__16712_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16711_SHARP_,(function (){var G__16796 = x;
var G__16797 = y;
var G__16798 = z;
return (p2__16712_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16712_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16796,G__16797,G__16798) : p2__16712_SHARP_.call(null,G__16796,G__16797,G__16798));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16818__4 = (function() { 
var G__16819__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16713_SHARP_,p2__16714_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16713_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16714_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__16819 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16820__i = 0, G__16820__a = new Array(arguments.length -  3);
while (G__16820__i < G__16820__a.length) {G__16820__a[G__16820__i] = arguments[G__16820__i + 3]; ++G__16820__i;}
  args = new cljs.core.IndexedSeq(G__16820__a,0);
} 
return G__16819__delegate.call(this,x,y,z,args);};
G__16819.cljs$lang$maxFixedArity = 3;
G__16819.cljs$lang$applyTo = (function (arglist__16821){
var x = cljs.core.first(arglist__16821);
arglist__16821 = cljs.core.next(arglist__16821);
var y = cljs.core.first(arglist__16821);
arglist__16821 = cljs.core.next(arglist__16821);
var z = cljs.core.first(arglist__16821);
var args = cljs.core.rest(arglist__16821);
return G__16819__delegate(x,y,z,args);
});
G__16819.cljs$core$IFn$_invoke$arity$variadic = G__16819__delegate;
return G__16819;
})()
;
G__16818 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16818__0.call(this);
case 1:
return G__16818__1.call(this,x);
case 2:
return G__16818__2.call(this,x,y);
case 3:
return G__16818__3.call(this,x,y,z);
default:
var G__16822 = null;
if (arguments.length > 3) {
var G__16823__i = 0, G__16823__a = new Array(arguments.length -  3);
while (G__16823__i < G__16823__a.length) {G__16823__a[G__16823__i] = arguments[G__16823__i + 3]; ++G__16823__i;}
G__16822 = new cljs.core.IndexedSeq(G__16823__a,0);
}
return G__16818__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16818.cljs$lang$maxFixedArity = 3;
G__16818.cljs$lang$applyTo = G__16818__4.cljs$lang$applyTo;
G__16818.cljs$core$IFn$_invoke$arity$0 = G__16818__0;
G__16818.cljs$core$IFn$_invoke$arity$1 = G__16818__1;
G__16818.cljs$core$IFn$_invoke$arity$2 = G__16818__2;
G__16818.cljs$core$IFn$_invoke$arity$3 = G__16818__3;
G__16818.cljs$core$IFn$_invoke$arity$variadic = G__16818__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16818;
})()
;})(fs__$1))
};
var G__16817 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16824__i = 0, G__16824__a = new Array(arguments.length -  3);
while (G__16824__i < G__16824__a.length) {G__16824__a[G__16824__i] = arguments[G__16824__i + 3]; ++G__16824__i;}
  fs = new cljs.core.IndexedSeq(G__16824__a,0);
} 
return G__16817__delegate.call(this,f,g,h,fs);};
G__16817.cljs$lang$maxFixedArity = 3;
G__16817.cljs$lang$applyTo = (function (arglist__16825){
var f = cljs.core.first(arglist__16825);
arglist__16825 = cljs.core.next(arglist__16825);
var g = cljs.core.first(arglist__16825);
arglist__16825 = cljs.core.next(arglist__16825);
var h = cljs.core.first(arglist__16825);
var fs = cljs.core.rest(arglist__16825);
return G__16817__delegate(f,g,h,fs);
});
G__16817.cljs$core$IFn$_invoke$arity$variadic = G__16817__delegate;
return G__16817;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__16826 = null;
if (arguments.length > 3) {
var G__16827__i = 0, G__16827__a = new Array(arguments.length -  3);
while (G__16827__i < G__16827__a.length) {G__16827__a[G__16827__i] = arguments[G__16827__i + 3]; ++G__16827__i;}
G__16826 = new cljs.core.IndexedSeq(G__16827__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__16826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__16828 = cljs.core.next(coll);
coll = G__16828;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__16829 = (n - (1));
var G__16830 = cljs.core.next(coll);
n = G__16829;
coll = G__16830;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__16834 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16834,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16834,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16834,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_16842 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3864__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__16843_16849 = cljs.core.first(coll);
var G__16844_16850 = writer;
var G__16845_16851 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16843_16849,G__16844_16850,G__16845_16851) : print_one.call(null,G__16843_16849,G__16844_16850,G__16845_16851));
} else {
}

var coll_16852__$1 = cljs.core.next(coll);
var n_16853 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_16852__$1) && (((n_16853 == null)) || (!((n_16853 === (0)))))){
cljs.core._write(writer,sep);

var G__16846_16854 = cljs.core.first(coll_16852__$1);
var G__16847_16855 = writer;
var G__16848_16856 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16846_16854,G__16847_16855,G__16848_16856) : print_one.call(null,G__16846_16854,G__16847_16855,G__16848_16856));

var G__16857 = cljs.core.next(coll_16852__$1);
var G__16858 = (n_16853 - (1));
coll_16852__$1 = G__16857;
n_16853 = G__16858;
continue;
} else {
if((cljs.core.seq(coll_16852__$1)) && ((n_16853 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3864__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16842;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__16863 = cljs.core.seq(ss);
var chunk__16864 = null;
var count__16865 = (0);
var i__16866 = (0);
while(true){
if((i__16866 < count__16865)){
var s = chunk__16864.cljs$core$IIndexed$_nth$arity$2(null,i__16866);
cljs.core._write(writer,s);

var G__16867 = seq__16863;
var G__16868 = chunk__16864;
var G__16869 = count__16865;
var G__16870 = (i__16866 + (1));
seq__16863 = G__16867;
chunk__16864 = G__16868;
count__16865 = G__16869;
i__16866 = G__16870;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16863);
if(temp__4126__auto__){
var seq__16863__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16863__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16863__$1);
var G__16871 = cljs.core.chunk_rest(seq__16863__$1);
var G__16872 = c__4651__auto__;
var G__16873 = cljs.core.count(c__4651__auto__);
var G__16874 = (0);
seq__16863 = G__16871;
chunk__16864 = G__16872;
count__16865 = G__16873;
i__16866 = G__16874;
continue;
} else {
var s = cljs.core.first(seq__16863__$1);
cljs.core._write(writer,s);

var G__16875 = cljs.core.next(seq__16863__$1);
var G__16876 = null;
var G__16877 = (0);
var G__16878 = (0);
seq__16863 = G__16875;
chunk__16864 = G__16876;
count__16865 = G__16877;
i__16866 = G__16878;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__16879__i = 0, G__16879__a = new Array(arguments.length -  1);
while (G__16879__i < G__16879__a.length) {G__16879__a[G__16879__i] = arguments[G__16879__i + 1]; ++G__16879__i;}
  ss = new cljs.core.IndexedSeq(G__16879__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__16880){
var writer = cljs.core.first(arglist__16880);
var ss = cljs.core.rest(arglist__16880);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj16882 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj16882;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__16885 = "[\\\\\"\b\f\n\r\t]";
var G__16886 = "g";
return RegExp(G__16885,G__16886);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3852__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3852__auto__)){
var and__3852__auto____$1 = (function (){var G__16900 = obj;
if(G__16900){
var bit__4545__auto__ = (G__16900.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4545__auto__) || (G__16900.cljs$core$IMeta$)){
return true;
} else {
if((!G__16900.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16900);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16900);
}
})();
if(and__3852__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__16901_16911 = cljs.core.meta(obj);
var G__16902_16912 = writer;
var G__16903_16913 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__16901_16911,G__16902_16912,G__16903_16913) : cljs.core.pr_writer.call(null,G__16901_16911,G__16902_16912,G__16903_16913));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__16904 = obj;
if(G__16904){
var bit__4538__auto__ = (G__16904.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4538__auto__) || (G__16904.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16905 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16906 = cljs.core.pr_writer;
var G__16907 = writer;
var G__16908 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16905,G__16906,G__16907,G__16908) : cljs.core.print_map.call(null,G__16905,G__16906,G__16907,G__16908));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16909 = obj;
return goog.isString(G__16909);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16914 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16914;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16910 = obj;
if(G__16910){
var bit__4545__auto__ = (G__16910.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4545__auto__) || (G__16910.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16910.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16910);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16910);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__16918 = obj;
var G__16919 = writer;
var G__16920 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__16918,G__16919,G__16920) : alt_impl.call(null,G__16918,G__16919,G__16920));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16925 = cljs.core.seq(cljs.core.next(objs));
var chunk__16926 = null;
var count__16927 = (0);
var i__16928 = (0);
while(true){
if((i__16928 < count__16927)){
var obj = chunk__16926.cljs$core$IIndexed$_nth$arity$2(null,i__16928);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16929 = seq__16925;
var G__16930 = chunk__16926;
var G__16931 = count__16927;
var G__16932 = (i__16928 + (1));
seq__16925 = G__16929;
chunk__16926 = G__16930;
count__16927 = G__16931;
i__16928 = G__16932;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16925);
if(temp__4126__auto__){
var seq__16925__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16925__$1)){
var c__4651__auto__ = cljs.core.chunk_first(seq__16925__$1);
var G__16933 = cljs.core.chunk_rest(seq__16925__$1);
var G__16934 = c__4651__auto__;
var G__16935 = cljs.core.count(c__4651__auto__);
var G__16936 = (0);
seq__16925 = G__16933;
chunk__16926 = G__16934;
count__16927 = G__16935;
i__16928 = G__16936;
continue;
} else {
var obj = cljs.core.first(seq__16925__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16937 = cljs.core.next(seq__16925__$1);
var G__16938 = null;
var G__16939 = (0);
var G__16940 = (0);
seq__16925 = G__16937;
chunk__16926 = G__16938;
count__16927 = G__16939;
i__16928 = G__16940;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16941__i = 0, G__16941__a = new Array(arguments.length -  0);
while (G__16941__i < G__16941__a.length) {G__16941__a[G__16941__i] = arguments[G__16941__i + 0]; ++G__16941__i;}
  objs = new cljs.core.IndexedSeq(G__16941__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16942){
var objs = cljs.core.seq(arglist__16942);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16943__i = 0, G__16943__a = new Array(arguments.length -  0);
while (G__16943__i < G__16943__a.length) {G__16943__a[G__16943__i] = arguments[G__16943__i + 0]; ++G__16943__i;}
  objs = new cljs.core.IndexedSeq(G__16943__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16944){
var objs = cljs.core.seq(arglist__16944);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16945__i = 0, G__16945__a = new Array(arguments.length -  0);
while (G__16945__i < G__16945__a.length) {G__16945__a[G__16945__i] = arguments[G__16945__i + 0]; ++G__16945__i;}
  objs = new cljs.core.IndexedSeq(G__16945__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16946){
var objs = cljs.core.seq(arglist__16946);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16947__i = 0, G__16947__a = new Array(arguments.length -  0);
while (G__16947__i < G__16947__a.length) {G__16947__a[G__16947__i] = arguments[G__16947__i + 0]; ++G__16947__i;}
  objs = new cljs.core.IndexedSeq(G__16947__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16948){
var objs = cljs.core.seq(arglist__16948);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16949__i = 0, G__16949__a = new Array(arguments.length -  0);
while (G__16949__i < G__16949__a.length) {G__16949__a[G__16949__i] = arguments[G__16949__i + 0]; ++G__16949__i;}
  objs = new cljs.core.IndexedSeq(G__16949__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16950){
var objs = cljs.core.seq(arglist__16950);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16951__i = 0, G__16951__a = new Array(arguments.length -  0);
while (G__16951__i < G__16951__a.length) {G__16951__a[G__16951__i] = arguments[G__16951__i + 0]; ++G__16951__i;}
  objs = new cljs.core.IndexedSeq(G__16951__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16952){
var objs = cljs.core.seq(arglist__16952);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16953__i = 0, G__16953__a = new Array(arguments.length -  0);
while (G__16953__i < G__16953__a.length) {G__16953__a[G__16953__i] = arguments[G__16953__i + 0]; ++G__16953__i;}
  objs = new cljs.core.IndexedSeq(G__16953__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16954){
var objs = cljs.core.seq(arglist__16954);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16955__i = 0, G__16955__a = new Array(arguments.length -  0);
while (G__16955__i < G__16955__a.length) {G__16955__a[G__16955__i] = arguments[G__16955__i + 0]; ++G__16955__i;}
  objs = new cljs.core.IndexedSeq(G__16955__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16956){
var objs = cljs.core.seq(arglist__16956);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16963_16969 = cljs.core.key(e);
var G__16964_16970 = w;
var G__16965_16971 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16963_16969,G__16964_16970,G__16965_16971) : print_one.call(null,G__16963_16969,G__16964_16970,G__16965_16971));

cljs.core._write(w," ");

var G__16966 = cljs.core.val(e);
var G__16967 = w;
var G__16968 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16966,G__16967,G__16968) : print_one.call(null,G__16966,G__16967,G__16968));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16972__i = 0, G__16972__a = new Array(arguments.length -  2);
while (G__16972__i < G__16972__a.length) {G__16972__a[G__16972__i] = arguments[G__16972__i + 2]; ++G__16972__i;}
  args = new cljs.core.IndexedSeq(G__16972__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16973){
var iref = cljs.core.first(arglist__16973);
arglist__16973 = cljs.core.next(arglist__16973);
var f = cljs.core.first(arglist__16973);
var args = cljs.core.rest(arglist__16973);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16976 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16976) : cljs.core.atom.call(null,G__16976));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16978 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16978) : cljs.core.deref.call(null,G__16978));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16979_SHARP_,p2__16980_SHARP_){
var ret = (function (){var G__16983 = p1__16979_SHARP_;
var G__16984 = p2__16980_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16983,G__16984) : rf.call(null,G__16983,G__16984));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16987 = null;
var G__16987__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16987__1 = (function (result){
var G__16986 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16986) : rf.call(null,G__16986));
});
var G__16987__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16987 = function(result,input){
switch(arguments.length){
case 0:
return G__16987__0.call(this);
case 1:
return G__16987__1.call(this,result);
case 2:
return G__16987__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16987.cljs$core$IFn$_invoke$arity$0 = G__16987__0;
G__16987.cljs$core$IFn$_invoke$arity$1 = G__16987__1;
G__16987.cljs$core$IFn$_invoke$arity$2 = G__16987__2;
return G__16987;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__16996 = null;
var G__16996__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16996__1 = (function (result){
var G__16992 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16992) : rf.call(null,G__16992));
});
var G__16996__2 = (function (result,input){
var prior = (function (){var G__16993 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16993) : cljs.core.deref.call(null,G__16993));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16994 = result;
var G__16995 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16994,G__16995) : rf.call(null,G__16994,G__16995));
}
});
G__16996 = function(result,input){
switch(arguments.length){
case 0:
return G__16996__0.call(this);
case 1:
return G__16996__1.call(this,result);
case 2:
return G__16996__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16996.cljs$core$IFn$_invoke$arity$0 = G__16996__0;
G__16996.cljs$core$IFn$_invoke$arity$1 = G__16996__1;
G__16996.cljs$core$IFn$_invoke$arity$2 = G__16996__2;
return G__16996;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4842__auto__ = this;
return cljs.core.es6_iterator(this__4842__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16998_SHARP_,p2__16997_SHARP_){
var G__17000 = p2__16997_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17000) : proc.call(null,G__17000));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj17002 = {};
return obj17002;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._clj__GT_js[(function (){var G__17006 = x__4508__auto__;
return goog.typeOf(G__17006);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._key__GT_js[(function (){var G__17010 = x__4508__auto__;
return goog.typeOf(G__17010);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__17013 = k;
if(G__17013){
var bit__4545__auto__ = null;
if(cljs.core.truth_((function (){var or__3864__auto__ = bit__4545__auto__;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return G__17013.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17013.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17013);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17013);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__17014 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17014) : cljs.core.clj__GT_js.call(null,G__17014));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__17030 = x;
if(G__17030){
var bit__4545__auto__ = null;
if(cljs.core.truth_((function (){var or__3864__auto__ = bit__4545__auto__;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return G__17030.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17030.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17030);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17030);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj17032 = {};
return obj17032;
})();
var seq__17033_17043 = cljs.core.seq(x);
var chunk__17034_17044 = null;
var count__17035_17045 = (0);
var i__17036_17046 = (0);
while(true){
if((i__17036_17046 < count__17035_17045)){
var vec__17037_17047 = chunk__17034_17044.cljs$core$IIndexed$_nth$arity$2(null,i__17036_17046);
var k_17048 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17037_17047,(0),null);
var v_17049 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17037_17047,(1),null);
(m[cljs.core.key__GT_js(k_17048)] = clj__GT_js(v_17049));

var G__17050 = seq__17033_17043;
var G__17051 = chunk__17034_17044;
var G__17052 = count__17035_17045;
var G__17053 = (i__17036_17046 + (1));
seq__17033_17043 = G__17050;
chunk__17034_17044 = G__17051;
count__17035_17045 = G__17052;
i__17036_17046 = G__17053;
continue;
} else {
var temp__4126__auto___17054 = cljs.core.seq(seq__17033_17043);
if(temp__4126__auto___17054){
var seq__17033_17055__$1 = temp__4126__auto___17054;
if(cljs.core.chunked_seq_QMARK_(seq__17033_17055__$1)){
var c__4651__auto___17056 = cljs.core.chunk_first(seq__17033_17055__$1);
var G__17057 = cljs.core.chunk_rest(seq__17033_17055__$1);
var G__17058 = c__4651__auto___17056;
var G__17059 = cljs.core.count(c__4651__auto___17056);
var G__17060 = (0);
seq__17033_17043 = G__17057;
chunk__17034_17044 = G__17058;
count__17035_17045 = G__17059;
i__17036_17046 = G__17060;
continue;
} else {
var vec__17038_17061 = cljs.core.first(seq__17033_17055__$1);
var k_17062 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17038_17061,(0),null);
var v_17063 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17038_17061,(1),null);
(m[cljs.core.key__GT_js(k_17062)] = clj__GT_js(v_17063));

var G__17064 = cljs.core.next(seq__17033_17055__$1);
var G__17065 = null;
var G__17066 = (0);
var G__17067 = (0);
seq__17033_17043 = G__17064;
chunk__17034_17044 = G__17065;
count__17035_17045 = G__17066;
i__17036_17046 = G__17067;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__17039_17068 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__17040_17069 = null;
var count__17041_17070 = (0);
var i__17042_17071 = (0);
while(true){
if((i__17042_17071 < count__17041_17070)){
var x_17072__$1 = chunk__17040_17069.cljs$core$IIndexed$_nth$arity$2(null,i__17042_17071);
arr.push(x_17072__$1);

var G__17073 = seq__17039_17068;
var G__17074 = chunk__17040_17069;
var G__17075 = count__17041_17070;
var G__17076 = (i__17042_17071 + (1));
seq__17039_17068 = G__17073;
chunk__17040_17069 = G__17074;
count__17041_17070 = G__17075;
i__17042_17071 = G__17076;
continue;
} else {
var temp__4126__auto___17077 = cljs.core.seq(seq__17039_17068);
if(temp__4126__auto___17077){
var seq__17039_17078__$1 = temp__4126__auto___17077;
if(cljs.core.chunked_seq_QMARK_(seq__17039_17078__$1)){
var c__4651__auto___17079 = cljs.core.chunk_first(seq__17039_17078__$1);
var G__17080 = cljs.core.chunk_rest(seq__17039_17078__$1);
var G__17081 = c__4651__auto___17079;
var G__17082 = cljs.core.count(c__4651__auto___17079);
var G__17083 = (0);
seq__17039_17068 = G__17080;
chunk__17040_17069 = G__17081;
count__17041_17070 = G__17082;
i__17042_17071 = G__17083;
continue;
} else {
var x_17084__$1 = cljs.core.first(seq__17039_17078__$1);
arr.push(x_17084__$1);

var G__17085 = cljs.core.next(seq__17039_17078__$1);
var G__17086 = null;
var G__17087 = (0);
var G__17088 = (0);
seq__17039_17068 = G__17085;
chunk__17040_17069 = G__17086;
count__17041_17070 = G__17087;
i__17042_17071 = G__17088;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj17090 = {};
return obj17090;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3852__auto__ = x;
if(and__3852__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3852__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4508__auto__ = (((x == null))?null:x);
return (function (){var or__3864__auto__ = (cljs.core._js__GT_clj[(function (){var G__17094 = x__4508__auto__;
return goog.typeOf(G__17094);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__17151__delegate = function (x,opts){
var map__17124 = opts;
var map__17124__$1 = ((cljs.core.seq_QMARK_(map__17124))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17124):map__17124);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17124__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__17124,map__17124__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__17140 = x__$1;
if(G__17140){
var bit__4545__auto__ = null;
if(cljs.core.truth_((function (){var or__3864__auto__ = bit__4545__auto__;
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return G__17140.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__17140.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17140);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17140);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4620__auto__ = ((function (map__17124,map__17124__$1,keywordize_keys,keyfn){
return (function iter__17141(s__17142){
return (new cljs.core.LazySeq(null,((function (map__17124,map__17124__$1,keywordize_keys,keyfn){
return (function (){
var s__17142__$1 = s__17142;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__17142__$1);
if(temp__4126__auto__){
var s__17142__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__17142__$2)){
var c__4618__auto__ = cljs.core.chunk_first(s__17142__$2);
var size__4619__auto__ = cljs.core.count(c__4618__auto__);
var b__17144 = cljs.core.chunk_buffer(size__4619__auto__);
if((function (){var i__17143 = (0);
while(true){
if((i__17143 < size__4619__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4618__auto__,i__17143);
cljs.core.chunk_append(b__17144,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17149 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17149) : keyfn.call(null,G__17149));
})(),thisfn((x__$1[k]))], null));

var G__17152 = (i__17143 + (1));
i__17143 = G__17152;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__17144),iter__17141(cljs.core.chunk_rest(s__17142__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__17144),null);
}
} else {
var k = cljs.core.first(s__17142__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17150 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17150) : keyfn.call(null,G__17150));
})(),thisfn((x__$1[k]))], null),iter__17141(cljs.core.rest(s__17142__$2)));
}
} else {
return null;
}
break;
}
});})(map__17124,map__17124__$1,keywordize_keys,keyfn))
,null,null));
});})(map__17124,map__17124__$1,keywordize_keys,keyfn))
;
return iter__4620__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__17124,map__17124__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__17151 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__17153__i = 0, G__17153__a = new Array(arguments.length -  1);
while (G__17153__i < G__17153__a.length) {G__17153__a[G__17153__i] = arguments[G__17153__i + 1]; ++G__17153__i;}
  opts = new cljs.core.IndexedSeq(G__17153__a,0);
} 
return G__17151__delegate.call(this,x,opts);};
G__17151.cljs$lang$maxFixedArity = 1;
G__17151.cljs$lang$applyTo = (function (arglist__17154){
var x = cljs.core.first(arglist__17154);
var opts = cljs.core.rest(arglist__17154);
return G__17151__delegate(x,opts);
});
G__17151.cljs$core$IFn$_invoke$arity$variadic = G__17151__delegate;
return G__17151;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__17155 = null;
if (arguments.length > 1) {
var G__17156__i = 0, G__17156__a = new Array(arguments.length -  1);
while (G__17156__i < G__17156__a.length) {G__17156__a[G__17156__i] = arguments[G__17156__i + 1]; ++G__17156__i;}
G__17155 = new cljs.core.IndexedSeq(G__17156__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__17159 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17159) : cljs.core.atom.call(null,G__17159));
})();
return ((function (mem){
return (function() { 
var G__17161__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__17160 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17160) : cljs.core.deref.call(null,G__17160));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__17161 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17162__i = 0, G__17162__a = new Array(arguments.length -  0);
while (G__17162__i < G__17162__a.length) {G__17162__a[G__17162__i] = arguments[G__17162__i + 0]; ++G__17162__i;}
  args = new cljs.core.IndexedSeq(G__17162__a,0);
} 
return G__17161__delegate.call(this,args);};
G__17161.cljs$lang$maxFixedArity = 0;
G__17161.cljs$lang$applyTo = (function (arglist__17163){
var args = cljs.core.seq(arglist__17163);
return G__17161__delegate(args);
});
G__17161.cljs$core$IFn$_invoke$arity$variadic = G__17161__delegate;
return G__17161;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__17165 = ret;
f = G__17165;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__17166__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__17166 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17167__i = 0, G__17167__a = new Array(arguments.length -  1);
while (G__17167__i < G__17167__a.length) {G__17167__a[G__17167__i] = arguments[G__17167__i + 1]; ++G__17167__i;}
  args = new cljs.core.IndexedSeq(G__17167__a,0);
} 
return G__17166__delegate.call(this,f,args);};
G__17166.cljs$lang$maxFixedArity = 1;
G__17166.cljs$lang$applyTo = (function (arglist__17168){
var f = cljs.core.first(arglist__17168);
var args = cljs.core.rest(arglist__17168);
return G__17166__delegate(f,args);
});
G__17166.cljs$core$IFn$_invoke$arity$variadic = G__17166__delegate;
return G__17166;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__17169 = null;
if (arguments.length > 1) {
var G__17170__i = 0, G__17170__a = new Array(arguments.length -  1);
while (G__17170__i < G__17170__a.length) {G__17170__a[G__17170__i] = arguments[G__17170__i + 1]; ++G__17170__i;}
G__17169 = new cljs.core.IndexedSeq(G__17170__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__17169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__17173 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17173) : Math.floor.call(null,G__17173));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__17175 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17175) : f.call(null,G__17175));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__17177 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17177) : cljs.core.atom.call(null,G__17177));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17178__i = 0, G__17178__a = new Array(arguments.length -  1);
while (G__17178__i < G__17178__a.length) {G__17178__a[G__17178__i] = arguments[G__17178__i + 1]; ++G__17178__i;}
  args = new cljs.core.IndexedSeq(G__17178__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__17179){
var f = cljs.core.first(arglist__17179);
var args = cljs.core.rest(arglist__17179);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17244 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17244) : cljs.core.deref.call(null,G__17244));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3864__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
var and__3852__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3852__auto__){
var and__3852__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3852__auto____$1){
var and__3852__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3852__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__17269 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__17267 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17267) : child.call(null,G__17267));
})(),(function (){var G__17268 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17268) : parent.call(null,G__17268));
})());
var G__17270 = (i + (1));
ret = G__17269;
i = G__17270;
continue;
}
break;
}
} else {
return and__3852__auto____$2;
}
} else {
return and__3852__auto____$1;
}
} else {
return and__3852__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__17274 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17274) : cljs.core.deref.call(null,G__17274));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__17278 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17278) : cljs.core.deref.call(null,G__17278));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__17282 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17282) : cljs.core.deref.call(null,G__17282));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__17291 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17291) : targets.call(null,G__17291));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__17292 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17292) : sources.call(null,G__17292));
})()));
});})(tp,td,ta))
;
var or__3864__auto__ = ((cljs.core.contains_QMARK_((function (){var G__17296 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17296) : tp.call(null,G__17296));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__17297 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17297) : ta.call(null,G__17297));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__17298 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17298) : ta.call(null,G__17298));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__17305 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17305) : parentMap.call(null,G__17305));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__17306 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17306) : parentMap.call(null,G__17306));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__17299_SHARP_){
return cljs.core.cons(cljs.core.first(p1__17299_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17299_SHARP_),cljs.core.second(p1__17299_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__17307 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17307) : parentMap.call(null,G__17307));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__17300_SHARP_,p2__17301_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__17300_SHARP_,p2__17301_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__17310 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17310) : cljs.core.deref.call(null,G__17310));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__17311 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17311) : cljs.core.deref.call(null,G__17311));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__17327 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17327) : cljs.core.deref.call(null,G__17327));
})().call(null,x);
var or__3864__auto__ = (cljs.core.truth_((function (){var and__3852__auto__ = xprefs;
if(cljs.core.truth_(and__3852__auto__)){
var G__17329 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17329) : xprefs.call(null,G__17329));
} else {
return and__3852__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__17330 = cljs.core.rest(ps);
ps = G__17330;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3864__auto____$1)){
return or__3864__auto____$1;
} else {
var or__3864__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__17331 = cljs.core.rest(ps);
ps = G__17331;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3864__auto____$2)){
return or__3864__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3864__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3864__auto__)){
return or__3864__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__17345){
var vec__17346 = p__17345;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17346,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17346,(1),null);
var e = vec__17346;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17347 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17347) : cljs.core.deref.call(null,G__17347));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3864__auto__ = (be == null);
if(or__3864__auto__){
return or__3864__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__17348 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17348) : cljs.core.deref.call(null,G__17348));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17349 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17349) : cljs.core.deref.call(null,G__17349));
})(),(function (){var G__17350 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17350) : cljs.core.deref.call(null,G__17350));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj17352 = {};
return obj17352;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._reset[(function (){var G__17356 = x__4508__auto__;
return goog.typeOf(G__17356);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._reset["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._add_method[(function (){var G__17360 = x__4508__auto__;
return goog.typeOf(G__17360);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._add_method["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._remove_method[(function (){var G__17364 = x__4508__auto__;
return goog.typeOf(G__17364);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._prefer_method[(function (){var G__17368 = x__4508__auto__;
return goog.typeOf(G__17368);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._get_method[(function (){var G__17372 = x__4508__auto__;
return goog.typeOf(G__17372);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._get_method["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._methods[(function (){var G__17376 = x__4508__auto__;
return goog.typeOf(G__17376);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._methods["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3852__auto__ = mf;
if(and__3852__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3852__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4508__auto__ = (((mf == null))?null:mf);
return (function (){var or__3864__auto__ = (cljs.core._prefers[(function (){var G__17380 = x__4508__auto__;
return goog.typeOf(G__17380);
})()]);
if(or__3864__auto__){
return or__3864__auto__;
} else {
var or__3864__auto____$1 = (cljs.core._prefers["_"]);
if(or__3864__auto____$1){
return or__3864__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17382 = this$__$1;
return goog.getUid(G__17382);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17383 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17383) : cljs.core.deref.call(null,G__17383));
})(),(function (){var G__17384 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17384) : cljs.core.deref.call(null,G__17384));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__17385 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17385) : cljs.core.deref.call(null,G__17385));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__17386 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17386) : cljs.core.deref.call(null,G__17386));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17387 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17387) : cljs.core.deref.call(null,G__17387));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17388 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17388) : cljs.core.deref.call(null,G__17388));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__18229 = null;
var G__18229__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__18229__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17389 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17389) : self__.dispatch_fn.call(null,G__17389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17390 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17390) : target_fn.call(null,G__17390));
});
var G__18229__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17391 = a;
var G__17392 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17391,G__17392) : self__.dispatch_fn.call(null,G__17391,G__17392));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17393 = a;
var G__17394 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17393,G__17394) : target_fn.call(null,G__17393,G__17394));
});
var G__18229__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17395 = a;
var G__17396 = b;
var G__17397 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17395,G__17396,G__17397) : self__.dispatch_fn.call(null,G__17395,G__17396,G__17397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17398 = a;
var G__17399 = b;
var G__17400 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17398,G__17399,G__17400) : target_fn.call(null,G__17398,G__17399,G__17400));
});
var G__18229__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17401 = a;
var G__17402 = b;
var G__17403 = c;
var G__17404 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17401,G__17402,G__17403,G__17404) : self__.dispatch_fn.call(null,G__17401,G__17402,G__17403,G__17404));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17405 = a;
var G__17406 = b;
var G__17407 = c;
var G__17408 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17405,G__17406,G__17407,G__17408) : target_fn.call(null,G__17405,G__17406,G__17407,G__17408));
});
var G__18229__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17409 = a;
var G__17410 = b;
var G__17411 = c;
var G__17412 = d;
var G__17413 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17409,G__17410,G__17411,G__17412,G__17413) : self__.dispatch_fn.call(null,G__17409,G__17410,G__17411,G__17412,G__17413));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17414 = a;
var G__17415 = b;
var G__17416 = c;
var G__17417 = d;
var G__17418 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17414,G__17415,G__17416,G__17417,G__17418) : target_fn.call(null,G__17414,G__17415,G__17416,G__17417,G__17418));
});
var G__18229__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17419 = a;
var G__17420 = b;
var G__17421 = c;
var G__17422 = d;
var G__17423 = e;
var G__17424 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17419,G__17420,G__17421,G__17422,G__17423,G__17424) : self__.dispatch_fn.call(null,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17425 = a;
var G__17426 = b;
var G__17427 = c;
var G__17428 = d;
var G__17429 = e;
var G__17430 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17425,G__17426,G__17427,G__17428,G__17429,G__17430) : target_fn.call(null,G__17425,G__17426,G__17427,G__17428,G__17429,G__17430));
});
var G__18229__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17431 = a;
var G__17432 = b;
var G__17433 = c;
var G__17434 = d;
var G__17435 = e;
var G__17436 = f;
var G__17437 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437) : self__.dispatch_fn.call(null,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17438 = a;
var G__17439 = b;
var G__17440 = c;
var G__17441 = d;
var G__17442 = e;
var G__17443 = f;
var G__17444 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444) : target_fn.call(null,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444));
});
var G__18229__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17445 = a;
var G__17446 = b;
var G__17447 = c;
var G__17448 = d;
var G__17449 = e;
var G__17450 = f;
var G__17451 = g;
var G__17452 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17445,G__17446,G__17447,G__17448,G__17449,G__17450,G__17451,G__17452) : self__.dispatch_fn.call(null,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450,G__17451,G__17452));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17453 = a;
var G__17454 = b;
var G__17455 = c;
var G__17456 = d;
var G__17457 = e;
var G__17458 = f;
var G__17459 = g;
var G__17460 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460) : target_fn.call(null,G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460));
});
var G__18229__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17461 = a;
var G__17462 = b;
var G__17463 = c;
var G__17464 = d;
var G__17465 = e;
var G__17466 = f;
var G__17467 = g;
var G__17468 = h;
var G__17469 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467,G__17468,G__17469) : self__.dispatch_fn.call(null,G__17461,G__17462,G__17463,G__17464,G__17465,G__17466,G__17467,G__17468,G__17469));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17470 = a;
var G__17471 = b;
var G__17472 = c;
var G__17473 = d;
var G__17474 = e;
var G__17475 = f;
var G__17476 = g;
var G__17477 = h;
var G__17478 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478) : target_fn.call(null,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476,G__17477,G__17478));
});
var G__18229__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17479 = a;
var G__17480 = b;
var G__17481 = c;
var G__17482 = d;
var G__17483 = e;
var G__17484 = f;
var G__17485 = g;
var G__17486 = h;
var G__17487 = i;
var G__17488 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488) : self__.dispatch_fn.call(null,G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17489 = a;
var G__17490 = b;
var G__17491 = c;
var G__17492 = d;
var G__17493 = e;
var G__17494 = f;
var G__17495 = g;
var G__17496 = h;
var G__17497 = i;
var G__17498 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17489,G__17490,G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498) : target_fn.call(null,G__17489,G__17490,G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498));
});
var G__18229__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17499 = a;
var G__17500 = b;
var G__17501 = c;
var G__17502 = d;
var G__17503 = e;
var G__17504 = f;
var G__17505 = g;
var G__17506 = h;
var G__17507 = i;
var G__17508 = j;
var G__17509 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507,G__17508,G__17509) : self__.dispatch_fn.call(null,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504,G__17505,G__17506,G__17507,G__17508,G__17509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17510 = a;
var G__17511 = b;
var G__17512 = c;
var G__17513 = d;
var G__17514 = e;
var G__17515 = f;
var G__17516 = g;
var G__17517 = h;
var G__17518 = i;
var G__17519 = j;
var G__17520 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519,G__17520) : target_fn.call(null,G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519,G__17520));
});
var G__18229__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17521 = a;
var G__17522 = b;
var G__17523 = c;
var G__17524 = d;
var G__17525 = e;
var G__17526 = f;
var G__17527 = g;
var G__17528 = h;
var G__17529 = i;
var G__17530 = j;
var G__17531 = k;
var G__17532 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17521,G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532) : self__.dispatch_fn.call(null,G__17521,G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17533 = a;
var G__17534 = b;
var G__17535 = c;
var G__17536 = d;
var G__17537 = e;
var G__17538 = f;
var G__17539 = g;
var G__17540 = h;
var G__17541 = i;
var G__17542 = j;
var G__17543 = k;
var G__17544 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17533,G__17534,G__17535,G__17536,G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544) : target_fn.call(null,G__17533,G__17534,G__17535,G__17536,G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544));
});
var G__18229__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17545 = a;
var G__17546 = b;
var G__17547 = c;
var G__17548 = d;
var G__17549 = e;
var G__17550 = f;
var G__17551 = g;
var G__17552 = h;
var G__17553 = i;
var G__17554 = j;
var G__17555 = k;
var G__17556 = l;
var G__17557 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17545,G__17546,G__17547,G__17548,G__17549,G__17550,G__17551,G__17552,G__17553,G__17554,G__17555,G__17556,G__17557) : self__.dispatch_fn.call(null,G__17545,G__17546,G__17547,G__17548,G__17549,G__17550,G__17551,G__17552,G__17553,G__17554,G__17555,G__17556,G__17557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17558 = a;
var G__17559 = b;
var G__17560 = c;
var G__17561 = d;
var G__17562 = e;
var G__17563 = f;
var G__17564 = g;
var G__17565 = h;
var G__17566 = i;
var G__17567 = j;
var G__17568 = k;
var G__17569 = l;
var G__17570 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566,G__17567,G__17568,G__17569,G__17570) : target_fn.call(null,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566,G__17567,G__17568,G__17569,G__17570));
});
var G__18229__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17571 = a;
var G__17572 = b;
var G__17573 = c;
var G__17574 = d;
var G__17575 = e;
var G__17576 = f;
var G__17577 = g;
var G__17578 = h;
var G__17579 = i;
var G__17580 = j;
var G__17581 = k;
var G__17582 = l;
var G__17583 = m;
var G__17584 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583,G__17584) : self__.dispatch_fn.call(null,G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583,G__17584));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17585 = a;
var G__17586 = b;
var G__17587 = c;
var G__17588 = d;
var G__17589 = e;
var G__17590 = f;
var G__17591 = g;
var G__17592 = h;
var G__17593 = i;
var G__17594 = j;
var G__17595 = k;
var G__17596 = l;
var G__17597 = m;
var G__17598 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598) : target_fn.call(null,G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598));
});
var G__18229__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17599 = a;
var G__17600 = b;
var G__17601 = c;
var G__17602 = d;
var G__17603 = e;
var G__17604 = f;
var G__17605 = g;
var G__17606 = h;
var G__17607 = i;
var G__17608 = j;
var G__17609 = k;
var G__17610 = l;
var G__17611 = m;
var G__17612 = n;
var G__17613 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17599,G__17600,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613) : self__.dispatch_fn.call(null,G__17599,G__17600,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17614 = a;
var G__17615 = b;
var G__17616 = c;
var G__17617 = d;
var G__17618 = e;
var G__17619 = f;
var G__17620 = g;
var G__17621 = h;
var G__17622 = i;
var G__17623 = j;
var G__17624 = k;
var G__17625 = l;
var G__17626 = m;
var G__17627 = n;
var G__17628 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17614,G__17615,G__17616,G__17617,G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628) : target_fn.call(null,G__17614,G__17615,G__17616,G__17617,G__17618,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628));
});
var G__18229__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17629 = a;
var G__17630 = b;
var G__17631 = c;
var G__17632 = d;
var G__17633 = e;
var G__17634 = f;
var G__17635 = g;
var G__17636 = h;
var G__17637 = i;
var G__17638 = j;
var G__17639 = k;
var G__17640 = l;
var G__17641 = m;
var G__17642 = n;
var G__17643 = o;
var G__17644 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636,G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644) : self__.dispatch_fn.call(null,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636,G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17645 = a;
var G__17646 = b;
var G__17647 = c;
var G__17648 = d;
var G__17649 = e;
var G__17650 = f;
var G__17651 = g;
var G__17652 = h;
var G__17653 = i;
var G__17654 = j;
var G__17655 = k;
var G__17656 = l;
var G__17657 = m;
var G__17658 = n;
var G__17659 = o;
var G__17660 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653,G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660) : target_fn.call(null,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653,G__17654,G__17655,G__17656,G__17657,G__17658,G__17659,G__17660));
});
var G__18229__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17661 = a;
var G__17662 = b;
var G__17663 = c;
var G__17664 = d;
var G__17665 = e;
var G__17666 = f;
var G__17667 = g;
var G__17668 = h;
var G__17669 = i;
var G__17670 = j;
var G__17671 = k;
var G__17672 = l;
var G__17673 = m;
var G__17674 = n;
var G__17675 = o;
var G__17676 = p;
var G__17677 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674,G__17675,G__17676,G__17677) : self__.dispatch_fn.call(null,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674,G__17675,G__17676,G__17677));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17678 = a;
var G__17679 = b;
var G__17680 = c;
var G__17681 = d;
var G__17682 = e;
var G__17683 = f;
var G__17684 = g;
var G__17685 = h;
var G__17686 = i;
var G__17687 = j;
var G__17688 = k;
var G__17689 = l;
var G__17690 = m;
var G__17691 = n;
var G__17692 = o;
var G__17693 = p;
var G__17694 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691,G__17692,G__17693,G__17694) : target_fn.call(null,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691,G__17692,G__17693,G__17694));
});
var G__18229__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17695 = a;
var G__17696 = b;
var G__17697 = c;
var G__17698 = d;
var G__17699 = e;
var G__17700 = f;
var G__17701 = g;
var G__17702 = h;
var G__17703 = i;
var G__17704 = j;
var G__17705 = k;
var G__17706 = l;
var G__17707 = m;
var G__17708 = n;
var G__17709 = o;
var G__17710 = p;
var G__17711 = q;
var G__17712 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712) : self__.dispatch_fn.call(null,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17713 = a;
var G__17714 = b;
var G__17715 = c;
var G__17716 = d;
var G__17717 = e;
var G__17718 = f;
var G__17719 = g;
var G__17720 = h;
var G__17721 = i;
var G__17722 = j;
var G__17723 = k;
var G__17724 = l;
var G__17725 = m;
var G__17726 = n;
var G__17727 = o;
var G__17728 = p;
var G__17729 = q;
var G__17730 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17713,G__17714,G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730) : target_fn.call(null,G__17713,G__17714,G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730));
});
var G__18229__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17731 = a;
var G__17732 = b;
var G__17733 = c;
var G__17734 = d;
var G__17735 = e;
var G__17736 = f;
var G__17737 = g;
var G__17738 = h;
var G__17739 = i;
var G__17740 = j;
var G__17741 = k;
var G__17742 = l;
var G__17743 = m;
var G__17744 = n;
var G__17745 = o;
var G__17746 = p;
var G__17747 = q;
var G__17748 = r;
var G__17749 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17731,G__17732,G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740,G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747,G__17748,G__17749) : self__.dispatch_fn.call(null,G__17731,G__17732,G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740,G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747,G__17748,G__17749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17750 = a;
var G__17751 = b;
var G__17752 = c;
var G__17753 = d;
var G__17754 = e;
var G__17755 = f;
var G__17756 = g;
var G__17757 = h;
var G__17758 = i;
var G__17759 = j;
var G__17760 = k;
var G__17761 = l;
var G__17762 = m;
var G__17763 = n;
var G__17764 = o;
var G__17765 = p;
var G__17766 = q;
var G__17767 = r;
var G__17768 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17750,G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760,G__17761,G__17762,G__17763,G__17764,G__17765,G__17766,G__17767,G__17768) : target_fn.call(null,G__17750,G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760,G__17761,G__17762,G__17763,G__17764,G__17765,G__17766,G__17767,G__17768));
});
var G__18229__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17769 = a;
var G__17770 = b;
var G__17771 = c;
var G__17772 = d;
var G__17773 = e;
var G__17774 = f;
var G__17775 = g;
var G__17776 = h;
var G__17777 = i;
var G__17778 = j;
var G__17779 = k;
var G__17780 = l;
var G__17781 = m;
var G__17782 = n;
var G__17783 = o;
var G__17784 = p;
var G__17785 = q;
var G__17786 = r;
var G__17787 = s;
var G__17788 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17769,G__17770,G__17771,G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780,G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787,G__17788) : self__.dispatch_fn.call(null,G__17769,G__17770,G__17771,G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780,G__17781,G__17782,G__17783,G__17784,G__17785,G__17786,G__17787,G__17788));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17789 = a;
var G__17790 = b;
var G__17791 = c;
var G__17792 = d;
var G__17793 = e;
var G__17794 = f;
var G__17795 = g;
var G__17796 = h;
var G__17797 = i;
var G__17798 = j;
var G__17799 = k;
var G__17800 = l;
var G__17801 = m;
var G__17802 = n;
var G__17803 = o;
var G__17804 = p;
var G__17805 = q;
var G__17806 = r;
var G__17807 = s;
var G__17808 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795,G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806,G__17807,G__17808) : target_fn.call(null,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794,G__17795,G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806,G__17807,G__17808));
});
var G__18229__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__18229 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18229__1.call(this,self__);
case 2:
return G__18229__2.call(this,self__,a);
case 3:
return G__18229__3.call(this,self__,a,b);
case 4:
return G__18229__4.call(this,self__,a,b,c);
case 5:
return G__18229__5.call(this,self__,a,b,c,d);
case 6:
return G__18229__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18229__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18229__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18229__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18229__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18229__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18229__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18229__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18229__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18229__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18229__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18229__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18229__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18229__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18229__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18229__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18229__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18229.cljs$core$IFn$_invoke$arity$1 = G__18229__1;
G__18229.cljs$core$IFn$_invoke$arity$2 = G__18229__2;
G__18229.cljs$core$IFn$_invoke$arity$3 = G__18229__3;
G__18229.cljs$core$IFn$_invoke$arity$4 = G__18229__4;
G__18229.cljs$core$IFn$_invoke$arity$5 = G__18229__5;
G__18229.cljs$core$IFn$_invoke$arity$6 = G__18229__6;
G__18229.cljs$core$IFn$_invoke$arity$7 = G__18229__7;
G__18229.cljs$core$IFn$_invoke$arity$8 = G__18229__8;
G__18229.cljs$core$IFn$_invoke$arity$9 = G__18229__9;
G__18229.cljs$core$IFn$_invoke$arity$10 = G__18229__10;
G__18229.cljs$core$IFn$_invoke$arity$11 = G__18229__11;
G__18229.cljs$core$IFn$_invoke$arity$12 = G__18229__12;
G__18229.cljs$core$IFn$_invoke$arity$13 = G__18229__13;
G__18229.cljs$core$IFn$_invoke$arity$14 = G__18229__14;
G__18229.cljs$core$IFn$_invoke$arity$15 = G__18229__15;
G__18229.cljs$core$IFn$_invoke$arity$16 = G__18229__16;
G__18229.cljs$core$IFn$_invoke$arity$17 = G__18229__17;
G__18229.cljs$core$IFn$_invoke$arity$18 = G__18229__18;
G__18229.cljs$core$IFn$_invoke$arity$19 = G__18229__19;
G__18229.cljs$core$IFn$_invoke$arity$20 = G__18229__20;
G__18229.cljs$core$IFn$_invoke$arity$21 = G__18229__21;
G__18229.cljs$core$IFn$_invoke$arity$22 = G__18229__22;
return G__18229;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args17381){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17381)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17809 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17809) : self__.dispatch_fn.call(null,G__17809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17810 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17810) : target_fn.call(null,G__17810));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17811 = a;
var G__17812 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17811,G__17812) : self__.dispatch_fn.call(null,G__17811,G__17812));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17813 = a;
var G__17814 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17813,G__17814) : target_fn.call(null,G__17813,G__17814));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17815 = a;
var G__17816 = b;
var G__17817 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17815,G__17816,G__17817) : self__.dispatch_fn.call(null,G__17815,G__17816,G__17817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17818 = a;
var G__17819 = b;
var G__17820 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17818,G__17819,G__17820) : target_fn.call(null,G__17818,G__17819,G__17820));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17821 = a;
var G__17822 = b;
var G__17823 = c;
var G__17824 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17821,G__17822,G__17823,G__17824) : self__.dispatch_fn.call(null,G__17821,G__17822,G__17823,G__17824));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17825 = a;
var G__17826 = b;
var G__17827 = c;
var G__17828 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17825,G__17826,G__17827,G__17828) : target_fn.call(null,G__17825,G__17826,G__17827,G__17828));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17829 = a;
var G__17830 = b;
var G__17831 = c;
var G__17832 = d;
var G__17833 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17829,G__17830,G__17831,G__17832,G__17833) : self__.dispatch_fn.call(null,G__17829,G__17830,G__17831,G__17832,G__17833));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17834 = a;
var G__17835 = b;
var G__17836 = c;
var G__17837 = d;
var G__17838 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17834,G__17835,G__17836,G__17837,G__17838) : target_fn.call(null,G__17834,G__17835,G__17836,G__17837,G__17838));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17839 = a;
var G__17840 = b;
var G__17841 = c;
var G__17842 = d;
var G__17843 = e;
var G__17844 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17839,G__17840,G__17841,G__17842,G__17843,G__17844) : self__.dispatch_fn.call(null,G__17839,G__17840,G__17841,G__17842,G__17843,G__17844));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17845 = a;
var G__17846 = b;
var G__17847 = c;
var G__17848 = d;
var G__17849 = e;
var G__17850 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17845,G__17846,G__17847,G__17848,G__17849,G__17850) : target_fn.call(null,G__17845,G__17846,G__17847,G__17848,G__17849,G__17850));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17851 = a;
var G__17852 = b;
var G__17853 = c;
var G__17854 = d;
var G__17855 = e;
var G__17856 = f;
var G__17857 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857) : self__.dispatch_fn.call(null,G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17858 = a;
var G__17859 = b;
var G__17860 = c;
var G__17861 = d;
var G__17862 = e;
var G__17863 = f;
var G__17864 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17858,G__17859,G__17860,G__17861,G__17862,G__17863,G__17864) : target_fn.call(null,G__17858,G__17859,G__17860,G__17861,G__17862,G__17863,G__17864));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17865 = a;
var G__17866 = b;
var G__17867 = c;
var G__17868 = d;
var G__17869 = e;
var G__17870 = f;
var G__17871 = g;
var G__17872 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872) : self__.dispatch_fn.call(null,G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17873 = a;
var G__17874 = b;
var G__17875 = c;
var G__17876 = d;
var G__17877 = e;
var G__17878 = f;
var G__17879 = g;
var G__17880 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17873,G__17874,G__17875,G__17876,G__17877,G__17878,G__17879,G__17880) : target_fn.call(null,G__17873,G__17874,G__17875,G__17876,G__17877,G__17878,G__17879,G__17880));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17881 = a;
var G__17882 = b;
var G__17883 = c;
var G__17884 = d;
var G__17885 = e;
var G__17886 = f;
var G__17887 = g;
var G__17888 = h;
var G__17889 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889) : self__.dispatch_fn.call(null,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17890 = a;
var G__17891 = b;
var G__17892 = c;
var G__17893 = d;
var G__17894 = e;
var G__17895 = f;
var G__17896 = g;
var G__17897 = h;
var G__17898 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898) : target_fn.call(null,G__17890,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17899 = a;
var G__17900 = b;
var G__17901 = c;
var G__17902 = d;
var G__17903 = e;
var G__17904 = f;
var G__17905 = g;
var G__17906 = h;
var G__17907 = i;
var G__17908 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907,G__17908) : self__.dispatch_fn.call(null,G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906,G__17907,G__17908));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17909 = a;
var G__17910 = b;
var G__17911 = c;
var G__17912 = d;
var G__17913 = e;
var G__17914 = f;
var G__17915 = g;
var G__17916 = h;
var G__17917 = i;
var G__17918 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918) : target_fn.call(null,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17919 = a;
var G__17920 = b;
var G__17921 = c;
var G__17922 = d;
var G__17923 = e;
var G__17924 = f;
var G__17925 = g;
var G__17926 = h;
var G__17927 = i;
var G__17928 = j;
var G__17929 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927,G__17928,G__17929) : self__.dispatch_fn.call(null,G__17919,G__17920,G__17921,G__17922,G__17923,G__17924,G__17925,G__17926,G__17927,G__17928,G__17929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17930 = a;
var G__17931 = b;
var G__17932 = c;
var G__17933 = d;
var G__17934 = e;
var G__17935 = f;
var G__17936 = g;
var G__17937 = h;
var G__17938 = i;
var G__17939 = j;
var G__17940 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939,G__17940) : target_fn.call(null,G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939,G__17940));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17941 = a;
var G__17942 = b;
var G__17943 = c;
var G__17944 = d;
var G__17945 = e;
var G__17946 = f;
var G__17947 = g;
var G__17948 = h;
var G__17949 = i;
var G__17950 = j;
var G__17951 = k;
var G__17952 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17941,G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952) : self__.dispatch_fn.call(null,G__17941,G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17953 = a;
var G__17954 = b;
var G__17955 = c;
var G__17956 = d;
var G__17957 = e;
var G__17958 = f;
var G__17959 = g;
var G__17960 = h;
var G__17961 = i;
var G__17962 = j;
var G__17963 = k;
var G__17964 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17953,G__17954,G__17955,G__17956,G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964) : target_fn.call(null,G__17953,G__17954,G__17955,G__17956,G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17965 = a;
var G__17966 = b;
var G__17967 = c;
var G__17968 = d;
var G__17969 = e;
var G__17970 = f;
var G__17971 = g;
var G__17972 = h;
var G__17973 = i;
var G__17974 = j;
var G__17975 = k;
var G__17976 = l;
var G__17977 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971,G__17972,G__17973,G__17974,G__17975,G__17976,G__17977) : self__.dispatch_fn.call(null,G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971,G__17972,G__17973,G__17974,G__17975,G__17976,G__17977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17978 = a;
var G__17979 = b;
var G__17980 = c;
var G__17981 = d;
var G__17982 = e;
var G__17983 = f;
var G__17984 = g;
var G__17985 = h;
var G__17986 = i;
var G__17987 = j;
var G__17988 = k;
var G__17989 = l;
var G__17990 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987,G__17988,G__17989,G__17990) : target_fn.call(null,G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987,G__17988,G__17989,G__17990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17991 = a;
var G__17992 = b;
var G__17993 = c;
var G__17994 = d;
var G__17995 = e;
var G__17996 = f;
var G__17997 = g;
var G__17998 = h;
var G__17999 = i;
var G__18000 = j;
var G__18001 = k;
var G__18002 = l;
var G__18003 = m;
var G__18004 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17991,G__17992,G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003,G__18004) : self__.dispatch_fn.call(null,G__17991,G__17992,G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003,G__18004));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18005 = a;
var G__18006 = b;
var G__18007 = c;
var G__18008 = d;
var G__18009 = e;
var G__18010 = f;
var G__18011 = g;
var G__18012 = h;
var G__18013 = i;
var G__18014 = j;
var G__18015 = k;
var G__18016 = l;
var G__18017 = m;
var G__18018 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018) : target_fn.call(null,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18019 = a;
var G__18020 = b;
var G__18021 = c;
var G__18022 = d;
var G__18023 = e;
var G__18024 = f;
var G__18025 = g;
var G__18026 = h;
var G__18027 = i;
var G__18028 = j;
var G__18029 = k;
var G__18030 = l;
var G__18031 = m;
var G__18032 = n;
var G__18033 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18019,G__18020,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030,G__18031,G__18032,G__18033) : self__.dispatch_fn.call(null,G__18019,G__18020,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030,G__18031,G__18032,G__18033));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18034 = a;
var G__18035 = b;
var G__18036 = c;
var G__18037 = d;
var G__18038 = e;
var G__18039 = f;
var G__18040 = g;
var G__18041 = h;
var G__18042 = i;
var G__18043 = j;
var G__18044 = k;
var G__18045 = l;
var G__18046 = m;
var G__18047 = n;
var G__18048 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048) : target_fn.call(null,G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18049 = a;
var G__18050 = b;
var G__18051 = c;
var G__18052 = d;
var G__18053 = e;
var G__18054 = f;
var G__18055 = g;
var G__18056 = h;
var G__18057 = i;
var G__18058 = j;
var G__18059 = k;
var G__18060 = l;
var G__18061 = m;
var G__18062 = n;
var G__18063 = o;
var G__18064 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18049,G__18050,G__18051,G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064) : self__.dispatch_fn.call(null,G__18049,G__18050,G__18051,G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18065 = a;
var G__18066 = b;
var G__18067 = c;
var G__18068 = d;
var G__18069 = e;
var G__18070 = f;
var G__18071 = g;
var G__18072 = h;
var G__18073 = i;
var G__18074 = j;
var G__18075 = k;
var G__18076 = l;
var G__18077 = m;
var G__18078 = n;
var G__18079 = o;
var G__18080 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080) : target_fn.call(null,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18081 = a;
var G__18082 = b;
var G__18083 = c;
var G__18084 = d;
var G__18085 = e;
var G__18086 = f;
var G__18087 = g;
var G__18088 = h;
var G__18089 = i;
var G__18090 = j;
var G__18091 = k;
var G__18092 = l;
var G__18093 = m;
var G__18094 = n;
var G__18095 = o;
var G__18096 = p;
var G__18097 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097) : self__.dispatch_fn.call(null,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18098 = a;
var G__18099 = b;
var G__18100 = c;
var G__18101 = d;
var G__18102 = e;
var G__18103 = f;
var G__18104 = g;
var G__18105 = h;
var G__18106 = i;
var G__18107 = j;
var G__18108 = k;
var G__18109 = l;
var G__18110 = m;
var G__18111 = n;
var G__18112 = o;
var G__18113 = p;
var G__18114 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18098,G__18099,G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111,G__18112,G__18113,G__18114) : target_fn.call(null,G__18098,G__18099,G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111,G__18112,G__18113,G__18114));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18115 = a;
var G__18116 = b;
var G__18117 = c;
var G__18118 = d;
var G__18119 = e;
var G__18120 = f;
var G__18121 = g;
var G__18122 = h;
var G__18123 = i;
var G__18124 = j;
var G__18125 = k;
var G__18126 = l;
var G__18127 = m;
var G__18128 = n;
var G__18129 = o;
var G__18130 = p;
var G__18131 = q;
var G__18132 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126,G__18127,G__18128,G__18129,G__18130,G__18131,G__18132) : self__.dispatch_fn.call(null,G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126,G__18127,G__18128,G__18129,G__18130,G__18131,G__18132));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18133 = a;
var G__18134 = b;
var G__18135 = c;
var G__18136 = d;
var G__18137 = e;
var G__18138 = f;
var G__18139 = g;
var G__18140 = h;
var G__18141 = i;
var G__18142 = j;
var G__18143 = k;
var G__18144 = l;
var G__18145 = m;
var G__18146 = n;
var G__18147 = o;
var G__18148 = p;
var G__18149 = q;
var G__18150 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150) : target_fn.call(null,G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18151 = a;
var G__18152 = b;
var G__18153 = c;
var G__18154 = d;
var G__18155 = e;
var G__18156 = f;
var G__18157 = g;
var G__18158 = h;
var G__18159 = i;
var G__18160 = j;
var G__18161 = k;
var G__18162 = l;
var G__18163 = m;
var G__18164 = n;
var G__18165 = o;
var G__18166 = p;
var G__18167 = q;
var G__18168 = r;
var G__18169 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169) : self__.dispatch_fn.call(null,G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18170 = a;
var G__18171 = b;
var G__18172 = c;
var G__18173 = d;
var G__18174 = e;
var G__18175 = f;
var G__18176 = g;
var G__18177 = h;
var G__18178 = i;
var G__18179 = j;
var G__18180 = k;
var G__18181 = l;
var G__18182 = m;
var G__18183 = n;
var G__18184 = o;
var G__18185 = p;
var G__18186 = q;
var G__18187 = r;
var G__18188 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18170,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188) : target_fn.call(null,G__18170,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18189 = a;
var G__18190 = b;
var G__18191 = c;
var G__18192 = d;
var G__18193 = e;
var G__18194 = f;
var G__18195 = g;
var G__18196 = h;
var G__18197 = i;
var G__18198 = j;
var G__18199 = k;
var G__18200 = l;
var G__18201 = m;
var G__18202 = n;
var G__18203 = o;
var G__18204 = p;
var G__18205 = q;
var G__18206 = r;
var G__18207 = s;
var G__18208 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208) : self__.dispatch_fn.call(null,G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18209 = a;
var G__18210 = b;
var G__18211 = c;
var G__18212 = d;
var G__18213 = e;
var G__18214 = f;
var G__18215 = g;
var G__18216 = h;
var G__18217 = i;
var G__18218 = j;
var G__18219 = k;
var G__18220 = l;
var G__18221 = m;
var G__18222 = n;
var G__18223 = o;
var G__18224 = p;
var G__18225 = q;
var G__18226 = r;
var G__18227 = s;
var G__18228 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217,G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228) : target_fn.call(null,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217,G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18230 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__18230);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4451__auto__,writer__4452__auto__,opt__4453__auto__){
return cljs.core._write(writer__4452__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__18235 = msg;
return Error(G__18235);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__18240 = x;
var G__18241 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18240,G__18241) : pred.call(null,G__18240,G__18241));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18242 = y;
var G__18243 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18242,G__18243) : pred.call(null,G__18242,G__18243));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1435268443307